{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SOUMYADIP GHOSH\\\\OneDrive\\\\Desktop\\\\college project\\\\skillup\\\\src\\\\components\\\\AssignmentQNA.js\",\n  _s = $RefreshSig$();\n// AssignmentQNA.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../container/assignmentQna.css';\nimport QuestionView from './QuestionView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignmentQNA = ({\n  isModeratoror\n}) => {\n  _s();\n  const [assignments, setAssignments] = useState([]);\n  const [submittedAnswers, setSubmittedAnswers] = useState([]);\n  const [newAssignment, setNewAssignment] = useState(null);\n  const [newAnswer, setNewAnswer] = useState(null);\n  const [selectedAssignment, setSelectedAssignment] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const assignmentsResponse = await axios.get('/api/assignments');\n        setAssignments(assignmentsResponse.data);\n        if (isModeratoror) {\n          const submittedAnswersResponse = await axios.get('/api/submitted-answers');\n          setSubmittedAnswers(submittedAnswersResponse.data);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [isModeratoror]);\n  const handleAssignmentUpload = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('assignment', newAssignment);\n    try {\n      await axios.post('/api/upload-assignment', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setNewAssignment(null);\n      alert('Assignment uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading assignment:', error);\n      alert('Failed to upload assignment');\n    }\n  };\n  const handleAnswerUpload = async (assignmentId, e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    if (newAnswer && newAnswer.type !== 'application/pdf') {\n      alert('Please upload a PDF file.');\n      return;\n    }\n    formData.append('answer', newAnswer);\n    try {\n      await axios.post(`/api/submit-answer/${assignmentId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setNewAnswer(null);\n      alert('Answer submitted successfully');\n    } catch (error) {\n      console.error('Error submitting answer:', error);\n      alert('Failed to submit answer');\n    }\n  };\n  const handleAssignmentClick = assignment => {\n    setSelectedAssignment(assignment);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qna\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Assignment Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qna_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"get_question\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Available Assignments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: assignments.map(assignment => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              onClick: () => handleAssignmentClick(assignment),\n              children: assignment.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), !isModeratoror && /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => handleAnswerUpload(assignment._id, e),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: e => setNewAnswer(e.target.files[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)]\n          }, assignment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), selectedAssignment && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question_view\",\n        children: /*#__PURE__*/_jsxDEV(QuestionView, {\n          assignment: selectedAssignment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), isModeratoror && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload New Assignment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAssignmentUpload,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setNewAssignment(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Submitted Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: submittedAnswers.map(answer => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/api/download-answer/${answer._id}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: [answer.assignmentName, \" - \", answer.userName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)\n          }, answer._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignmentQNA, \"bcoFGFBJIKK4CQZbnqbKvIFrpg4=\");\n_c = AssignmentQNA;\nexport default AssignmentQNA;\nvar _c;\n$RefreshReg$(_c, \"AssignmentQNA\");","map":{"version":3,"names":["React","useState","useEffect","axios","QuestionView","jsxDEV","_jsxDEV","AssignmentQNA","isModeratoror","_s","assignments","setAssignments","submittedAnswers","setSubmittedAnswers","newAssignment","setNewAssignment","newAnswer","setNewAnswer","selectedAssignment","setSelectedAssignment","fetchData","assignmentsResponse","get","data","submittedAnswersResponse","error","console","handleAssignmentUpload","e","preventDefault","formData","FormData","append","post","headers","alert","handleAnswerUpload","assignmentId","type","handleAssignmentClick","assignment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","href","onClick","name","onSubmit","_id","onChange","target","files","answer","rel","assignmentName","userName","_c","$RefreshReg$"],"sources":["C:/Users/SOUMYADIP GHOSH/OneDrive/Desktop/college project/skillup/src/components/AssignmentQNA.js"],"sourcesContent":["// AssignmentQNA.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../container/assignmentQna.css';\r\nimport QuestionView from './QuestionView';\r\n\r\nconst AssignmentQNA = ({ isModeratoror }) => {\r\n  const [assignments, setAssignments] = useState([]);\r\n  const [submittedAnswers, setSubmittedAnswers] = useState([]);\r\n  const [newAssignment, setNewAssignment] = useState(null);\r\n  const [newAnswer, setNewAnswer] = useState(null);\r\n  const [selectedAssignment, setSelectedAssignment] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const assignmentsResponse = await axios.get('/api/assignments');\r\n        setAssignments(assignmentsResponse.data);\r\n\r\n        if (isModeratoror) {\r\n          const submittedAnswersResponse = await axios.get('/api/submitted-answers');\r\n          setSubmittedAnswers(submittedAnswersResponse.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [isModeratoror]);\r\n\r\n  const handleAssignmentUpload = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('assignment', newAssignment);\r\n\r\n    try {\r\n      await axios.post('/api/upload-assignment', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      setNewAssignment(null);\r\n      alert('Assignment uploaded successfully');\r\n    } catch (error) {\r\n      console.error('Error uploading assignment:', error);\r\n      alert('Failed to upload assignment');\r\n    }\r\n  };\r\n\r\n  const handleAnswerUpload = async (assignmentId, e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    if (newAnswer && newAnswer.type !== 'application/pdf') {\r\n      alert('Please upload a PDF file.');\r\n      return;\r\n    }\r\n\r\n    formData.append('answer', newAnswer);\r\n\r\n    try {\r\n      await axios.post(`/api/submit-answer/${assignmentId}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      setNewAnswer(null);\r\n      alert('Answer submitted successfully');\r\n    } catch (error) {\r\n      console.error('Error submitting answer:', error);\r\n      alert('Failed to submit answer');\r\n    }\r\n  };\r\n\r\n  const handleAssignmentClick = (assignment) => {\r\n    setSelectedAssignment(assignment);\r\n  };\r\n\r\n  return (\r\n    <div className=\"qna\">\r\n      <h1>Assignment Section</h1>\r\n      <div className=\"qna_div\">\r\n        <div className=\"get_question\">\r\n          <h2>Available Assignments</h2>\r\n          <ul>\r\n            {assignments.map((assignment) => (\r\n              <li key={assignment._id}>\r\n                <a href=\"#\" onClick={() => handleAssignmentClick(assignment)}>\r\n                  {assignment.name}\r\n                </a>\r\n                {!isModeratoror && (\r\n                  <form onSubmit={(e) => handleAnswerUpload(assignment._id, e)}>\r\n                    <input type=\"file\" onChange={(e) => setNewAnswer(e.target.files[0])} />\r\n                    <button type=\"submit\">Submit Answer</button>\r\n                  </form>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        {selectedAssignment && (\r\n          <div className=\"question_view\">\r\n            <QuestionView assignment={selectedAssignment} />\r\n          </div>\r\n        )}\r\n        {isModeratoror && (\r\n          <div className=\"upload_section\">\r\n            <h2>Upload New Assignment</h2>\r\n            <form onSubmit={handleAssignmentUpload}>\r\n              <input type=\"file\" onChange={(e) => setNewAssignment(e.target.files[0])} />\r\n              <button type=\"submit\">Upload</button>\r\n            </form>\r\n            <h2>Submitted Answers</h2>\r\n            <ul>\r\n              {submittedAnswers.map((answer) => (\r\n                <li key={answer._id}>\r\n                  <a href={`/api/download-answer/${answer._id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {answer.assignmentName} - {answer.userName}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignmentQNA;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}