{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SOUMYADIP GHOSH\\\\OneDrive\\\\Desktop\\\\college project\\\\skillup\\\\src\\\\components\\\\QuizContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../container/quizContent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizContent() {\n  _s();\n  const [showFinalResults, setShowFinalResults] = useState(false);\n  const [score, setScore] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showAlert, setShowAlert] = useState(false); // State for showing the alert\n\n  const questions = [{\n    text: \"What is Data Science?\",\n    options: [{\n      id: 0,\n      text: \"The study of collecting, analyzing, and interpreting large datasets to extract insights\",\n      isCorrect: true\n    }, {\n      id: 1,\n      text: \"A programming language commonly used in data analysis\",\n      isCorrect: false\n    }, {\n      id: 2,\n      text: \"A type of computer science focused on algorithms and data structures\",\n      isCorrect: false\n    }, {\n      id: 3,\n      text: \"The process of designing user interfaces for data visualization\",\n      isCorrect: false\n    }]\n  }\n  // Add other questions here\n  ];\n  const optionClicked = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n      setShowAlert(true); // Show alert for correct answer\n    } else {\n      setShowAlert(true); // Show alert for incorrect answer\n    }\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowFinalResults(true);\n    }\n  };\n  const restartGame = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setShowFinalResults(false);\n    setShowAlert(false); // Reset the alert state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz_app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QUIZ PRACTICE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Score : \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), showFinalResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"final_results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Final Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [score, \" out of \", questions.length, \" correct - (\", score / questions.length * 100, \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        children: \"Restart Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question_card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question: \", currentQuestion + 1, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"question_text\",\n        children: questions[currentQuestion].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions[currentQuestion].options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => optionClicked(option.isCorrect),\n          children: option.text\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), showAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert\",\n        style: {\n          color: showAlert === 'correct' ? 'green' : 'red'\n        },\n        children: showAlert === 'correct' ? 'Correct Answer!' : 'Incorrect Answer!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizContent, \"WsUG3nkU44FZsw0Qq48szFgNRfA=\");\n_c = QuizContent;\nexport default QuizContent;\nvar _c;\n$RefreshReg$(_c, \"QuizContent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuizContent","_s","showFinalResults","setShowFinalResults","score","setScore","currentQuestion","setCurrentQuestion","showAlert","setShowAlert","questions","text","options","id","isCorrect","optionClicked","length","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","option","style","color","_c","$RefreshReg$"],"sources":["C:/Users/SOUMYADIP GHOSH/OneDrive/Desktop/college project/skillup/src/components/QuizContent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../container/quizContent.css';\r\n\r\nfunction QuizContent() {\r\n  const [showFinalResults, setShowFinalResults] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [showAlert, setShowAlert] = useState(false); // State for showing the alert\r\n\r\n  const questions = [\r\n    {\r\n      text: \"What is Data Science?\",\r\n      options: [\r\n        { id: 0, text: \"The study of collecting, analyzing, and interpreting large datasets to extract insights\", isCorrect: true },\r\n        { id: 1, text: \"A programming language commonly used in data analysis\", isCorrect: false },\r\n        { id: 2, text: \"A type of computer science focused on algorithms and data structures\", isCorrect: false },\r\n        { id: 3, text: \"The process of designing user interfaces for data visualization\", isCorrect: false },\r\n      ],\r\n      \r\n    },\r\n    // Add other questions here\r\n  ];\r\n\r\n  const optionClicked = (isCorrect) => {\r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n      setShowAlert(true); // Show alert for correct answer\r\n    } else {\r\n      setShowAlert(true); // Show alert for incorrect answer\r\n    }\r\n\r\n    if (currentQuestion + 1 < questions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      setShowFinalResults(true);\r\n    }\r\n  };\r\n\r\n  const restartGame = () => {\r\n    setScore(0);\r\n    setCurrentQuestion(0);\r\n    setShowFinalResults(false);\r\n    setShowAlert(false); // Reset the alert state\r\n  };\r\n\r\n  return (\r\n    <div className='Quiz_app'>\r\n      <h1>QUIZ PRACTICE</h1>\r\n      <h2>Current Score : {score}</h2>\r\n\r\n      {showFinalResults ? (\r\n        <div className='final_results'>\r\n          <h1>Final Results</h1>\r\n          <h2>{score} out of {questions.length} correct - ({(score / questions.length) * 100}%)</h2>\r\n          <button onClick={restartGame}>Restart Quiz</button>\r\n        </div>\r\n      ) : (\r\n        <div className='question_card'>\r\n          <h2>\r\n            Question: {currentQuestion + 1} out of {questions.length}\r\n          </h2>\r\n          <h3 className='question_text'>{questions[currentQuestion].text}</h3>\r\n          <ul>\r\n            {questions[currentQuestion].options.map((option) => (\r\n              <li onClick={() => optionClicked(option.isCorrect)} key={option.id}>{option.text}</li>\r\n            ))}\r\n          </ul>\r\n          {showAlert && (\r\n            <div className='alert' style={{ color: showAlert === 'correct' ? 'green' : 'red' }}>\r\n              {showAlert === 'correct' ? 'Correct Answer!' : 'Incorrect Answer!'}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}