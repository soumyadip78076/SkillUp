{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SOUMYADIP GHOSH\\\\OneDrive\\\\Desktop\\\\college project\\\\skillup\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AssignmentQNA.css'; // Make sure the CSS file is present in the same directory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignmentQNA = ({\n  isModeratoror\n}) => {\n  _s();\n  const [assignments, setAssignments] = useState([]);\n  const [submittedAnswers, setSubmittedAnswers] = useState([]);\n  const [newAssignment, setNewAssignment] = useState(null);\n  const [newAnswer, setNewAnswer] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const assignmentsResponse = await axios.get('/api/assignments');\n        setAssignments(assignmentsResponse.data);\n        if (isModeratoror) {\n          const submittedAnswersResponse = await axios.get('/api/submitted-answers');\n          setSubmittedAnswers(submittedAnswersResponse.data);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [isModeratoror]);\n  const handleAssignmentUpload = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('assignment', newAssignment);\n    try {\n      await axios.post('/api/upload-assignment', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setNewAssignment(null);\n      alert('Assignment uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading assignment:', error);\n      alert('Failed to upload assignment');\n    }\n  };\n  const handleAnswerUpload = async (assignmentId, e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('answer', newAnswer);\n    try {\n      await axios.post(`/api/submit-answer/${assignmentId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setNewAnswer(null);\n      alert('Answer submitted successfully');\n    } catch (error) {\n      console.error('Error submitting answer:', error);\n      alert('Failed to submit answer');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qna\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Assignment Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qna_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"get_question\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Available Assignments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: assignments.map(assignment => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/api/download-assignment/${assignment._id}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: assignment.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), !isModeratoror && /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => handleAnswerUpload(assignment._id, e),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: e => setNewAnswer(e.target.files[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, assignment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), isModeratoror && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload New Assignment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAssignmentUpload,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setNewAssignment(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Submitted Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: submittedAnswers.map(answer => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/api/download-answer/${answer._id}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: [answer.assignmentName, \" - \", answer.userName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)\n          }, answer._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignmentQNA, \"Q5i9/cMLwaE9f4uMWSkysWTF9LY=\");\n_c = AssignmentQNA;\nexport default AssignmentQNA;\nvar _c;\n$RefreshReg$(_c, \"AssignmentQNA\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AssignmentQNA","isModeratoror","_s","assignments","setAssignments","submittedAnswers","setSubmittedAnswers","newAssignment","setNewAssignment","newAnswer","setNewAnswer","fetchData","assignmentsResponse","get","data","submittedAnswersResponse","error","console","handleAssignmentUpload","e","preventDefault","formData","FormData","append","post","headers","alert","handleAnswerUpload","assignmentId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","assignment","href","_id","target","rel","name","onSubmit","type","onChange","files","answer","assignmentName","userName","_c","$RefreshReg$"],"sources":["C:/Users/SOUMYADIP GHOSH/OneDrive/Desktop/college project/skillup/src/components/UploadForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './AssignmentQNA.css'; // Make sure the CSS file is present in the same directory\r\n\r\nconst AssignmentQNA = ({ isModeratoror }) => {\r\n  const [assignments, setAssignments] = useState([]);\r\n  const [submittedAnswers, setSubmittedAnswers] = useState([]);\r\n  const [newAssignment, setNewAssignment] = useState(null);\r\n  const [newAnswer, setNewAnswer] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const assignmentsResponse = await axios.get('/api/assignments');\r\n        setAssignments(assignmentsResponse.data);\r\n\r\n        if (isModeratoror) {\r\n          const submittedAnswersResponse = await axios.get('/api/submitted-answers');\r\n          setSubmittedAnswers(submittedAnswersResponse.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [isModeratoror]);\r\n\r\n  const handleAssignmentUpload = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('assignment', newAssignment);\r\n\r\n    try {\r\n      await axios.post('/api/upload-assignment', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      setNewAssignment(null);\r\n      alert('Assignment uploaded successfully');\r\n    } catch (error) {\r\n      console.error('Error uploading assignment:', error);\r\n      alert('Failed to upload assignment');\r\n    }\r\n  };\r\n\r\n  const handleAnswerUpload = async (assignmentId, e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('answer', newAnswer);\r\n\r\n    try {\r\n      await axios.post(`/api/submit-answer/${assignmentId}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      setNewAnswer(null);\r\n      alert('Answer submitted successfully');\r\n    } catch (error) {\r\n      console.error('Error submitting answer:', error);\r\n      alert('Failed to submit answer');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"qna\">\r\n      <h1>Assignment Section</h1>\r\n      <div className=\"qna_div\">\r\n        <div className=\"get_question\">\r\n          <h2>Available Assignments</h2>\r\n          <ul>\r\n            {assignments.map((assignment) => (\r\n              <li key={assignment._id}>\r\n                <a href={`/api/download-assignment/${assignment._id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {assignment.name}\r\n                </a>\r\n                {!isModeratoror && (\r\n                  <form onSubmit={(e) => handleAnswerUpload(assignment._id, e)}>\r\n                    <input type=\"file\" onChange={(e) => setNewAnswer(e.target.files[0])} />\r\n                    <button type=\"submit\">Submit Answer</button>\r\n                  </form>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        {isModeratoror && (\r\n          <div className=\"upload_section\">\r\n            <h2>Upload New Assignment</h2>\r\n            <form onSubmit={handleAssignmentUpload}>\r\n              <input type=\"file\" onChange={(e) => setNewAssignment(e.target.files[0])} />\r\n              <button type=\"submit\">Upload</button>\r\n            </form>\r\n            <h2>Submitted Answers</h2>\r\n            <ul>\r\n              {submittedAnswers.map((answer) => (\r\n                <li key={answer._id}>\r\n                  <a href={`/api/download-answer/${answer._id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {answer.assignmentName} - {answer.userName}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignmentQNA;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}