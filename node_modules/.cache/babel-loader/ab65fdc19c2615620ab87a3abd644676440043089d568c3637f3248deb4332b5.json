{"ast":null,"code":"/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, function () {\n  return /******/function (modules) {\n    // webpackBootstrap\n    /******/ // The module cache\n    /******/\n    var installedModules = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __w_pdfjs_require__(moduleId) {\n      /******/\n      /******/ // Check if module is in cache\n      /******/if (installedModules[moduleId]) {\n        /******/return installedModules[moduleId].exports;\n        /******/\n      }\n      /******/ // Create a new module (and put it into the cache)\n      /******/\n      var module = installedModules[moduleId] = {\n        /******/i: moduleId,\n        /******/l: false,\n        /******/exports: {}\n        /******/\n      };\n      /******/\n      /******/ // Execute the module function\n      /******/\n      modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n      /******/\n      /******/ // Flag the module as loaded\n      /******/\n      module.l = true;\n      /******/\n      /******/ // Return the exports of the module\n      /******/\n      return module.exports;\n      /******/\n    }\n    /******/\n    /******/\n    /******/ // expose the modules object (__webpack_modules__)\n    /******/\n    __w_pdfjs_require__.m = modules;\n    /******/\n    /******/ // expose the module cache\n    /******/\n    __w_pdfjs_require__.c = installedModules;\n    /******/\n    /******/ // define getter function for harmony exports\n    /******/\n    __w_pdfjs_require__.d = function (exports, name, getter) {\n      /******/if (!__w_pdfjs_require__.o(exports, name)) {\n        /******/Object.defineProperty(exports, name, {\n          enumerable: true,\n          get: getter\n        });\n        /******/\n      }\n      /******/\n    };\n    /******/\n    /******/ // define __esModule on exports\n    /******/\n    __w_pdfjs_require__.r = function (exports) {\n      /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n        /******/Object.defineProperty(exports, Symbol.toStringTag, {\n          value: 'Module'\n        });\n        /******/\n      }\n      /******/\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      /******/\n    };\n    /******/\n    /******/ // create a fake namespace object\n    /******/ // mode & 1: value is a module id, require it\n    /******/ // mode & 2: merge all properties of value into the ns\n    /******/ // mode & 4: return value when already ns object\n    /******/ // mode & 8|1: behave like require\n    /******/\n    __w_pdfjs_require__.t = function (value, mode) {\n      /******/if (mode & 1) value = __w_pdfjs_require__(value);\n      /******/\n      if (mode & 8) return value;\n      /******/\n      if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n      /******/\n      var ns = Object.create(null);\n      /******/\n      __w_pdfjs_require__.r(ns);\n      /******/\n      Object.defineProperty(ns, 'default', {\n        enumerable: true,\n        value: value\n      });\n      /******/\n      if (mode & 2 && typeof value != 'string') for (var key in value) __w_pdfjs_require__.d(ns, key, function (key) {\n        return value[key];\n      }.bind(null, key));\n      /******/\n      return ns;\n      /******/\n    };\n    /******/\n    /******/ // getDefaultExport function for compatibility with non-harmony modules\n    /******/\n    __w_pdfjs_require__.n = function (module) {\n      /******/var getter = module && module.__esModule ? /******/function getDefault() {\n        return module['default'];\n      } : /******/function getModuleExports() {\n        return module;\n      };\n      /******/\n      __w_pdfjs_require__.d(getter, 'a', getter);\n      /******/\n      return getter;\n      /******/\n    };\n    /******/\n    /******/ // Object.prototype.hasOwnProperty.call\n    /******/\n    __w_pdfjs_require__.o = function (object, property) {\n      return Object.prototype.hasOwnProperty.call(object, property);\n    };\n    /******/\n    /******/ // __webpack_public_path__\n    /******/\n    __w_pdfjs_require__.p = \"\";\n    /******/\n    /******/\n    /******/ // Load entry module and return exports\n    /******/\n    return __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n    /******/\n  }\n  /************************************************************************/\n  /******/([( /* 0 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    var pdfjsVersion = '2.4.456';\n    var pdfjsBuild = '228a591c';\n    var pdfjsSharedUtil = __w_pdfjs_require__(1);\n    var pdfjsDisplayAPI = __w_pdfjs_require__(3);\n    var pdfjsDisplayTextLayer = __w_pdfjs_require__(16);\n    var pdfjsDisplayAnnotationLayer = __w_pdfjs_require__(17);\n    var pdfjsDisplayDisplayUtils = __w_pdfjs_require__(4);\n    var pdfjsDisplaySVG = __w_pdfjs_require__(18);\n    const pdfjsDisplayWorkerOptions = __w_pdfjs_require__(10);\n    const pdfjsDisplayAPICompatibility = __w_pdfjs_require__(6);\n    {\n      const {\n        isNodeJS\n      } = __w_pdfjs_require__(7);\n      if (isNodeJS) {\n        const PDFNodeStream = __w_pdfjs_require__(19).PDFNodeStream;\n        pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n          return new PDFNodeStream(params);\n        });\n      } else {\n        const PDFNetworkStream = __w_pdfjs_require__(22).PDFNetworkStream;\n        let PDFFetchStream;\n        if (pdfjsDisplayDisplayUtils.isFetchSupported()) {\n          PDFFetchStream = __w_pdfjs_require__(23).PDFFetchStream;\n        }\n        pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n          if (PDFFetchStream && pdfjsDisplayDisplayUtils.isValidFetchUrl(params.url)) {\n            return new PDFFetchStream(params);\n          }\n          return new PDFNetworkStream(params);\n        });\n      }\n    }\n    exports.build = pdfjsDisplayAPI.build;\n    exports.version = pdfjsDisplayAPI.version;\n    exports.getDocument = pdfjsDisplayAPI.getDocument;\n    exports.LoopbackPort = pdfjsDisplayAPI.LoopbackPort;\n    exports.PDFDataRangeTransport = pdfjsDisplayAPI.PDFDataRangeTransport;\n    exports.PDFWorker = pdfjsDisplayAPI.PDFWorker;\n    exports.renderTextLayer = pdfjsDisplayTextLayer.renderTextLayer;\n    exports.AnnotationLayer = pdfjsDisplayAnnotationLayer.AnnotationLayer;\n    exports.createPromiseCapability = pdfjsSharedUtil.createPromiseCapability;\n    exports.PasswordResponses = pdfjsSharedUtil.PasswordResponses;\n    exports.InvalidPDFException = pdfjsSharedUtil.InvalidPDFException;\n    exports.MissingPDFException = pdfjsSharedUtil.MissingPDFException;\n    exports.SVGGraphics = pdfjsDisplaySVG.SVGGraphics;\n    exports.NativeImageDecoding = pdfjsSharedUtil.NativeImageDecoding;\n    exports.CMapCompressionType = pdfjsSharedUtil.CMapCompressionType;\n    exports.PermissionFlag = pdfjsSharedUtil.PermissionFlag;\n    exports.UnexpectedResponseException = pdfjsSharedUtil.UnexpectedResponseException;\n    exports.OPS = pdfjsSharedUtil.OPS;\n    exports.VerbosityLevel = pdfjsSharedUtil.VerbosityLevel;\n    exports.UNSUPPORTED_FEATURES = pdfjsSharedUtil.UNSUPPORTED_FEATURES;\n    exports.createValidAbsoluteUrl = pdfjsSharedUtil.createValidAbsoluteUrl;\n    exports.createObjectURL = pdfjsSharedUtil.createObjectURL;\n    exports.removeNullCharacters = pdfjsSharedUtil.removeNullCharacters;\n    exports.shadow = pdfjsSharedUtil.shadow;\n    exports.Util = pdfjsSharedUtil.Util;\n    exports.RenderingCancelledException = pdfjsDisplayDisplayUtils.RenderingCancelledException;\n    exports.getFilenameFromUrl = pdfjsDisplayDisplayUtils.getFilenameFromUrl;\n    exports.LinkTarget = pdfjsDisplayDisplayUtils.LinkTarget;\n    exports.addLinkAttributes = pdfjsDisplayDisplayUtils.addLinkAttributes;\n    exports.loadScript = pdfjsDisplayDisplayUtils.loadScript;\n    exports.PDFDateString = pdfjsDisplayDisplayUtils.PDFDateString;\n    exports.GlobalWorkerOptions = pdfjsDisplayWorkerOptions.GlobalWorkerOptions;\n    exports.apiCompatibilityParams = pdfjsDisplayAPICompatibility.apiCompatibilityParams;\n\n    /***/\n  }), ( /* 1 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.arrayByteLength = arrayByteLength;\n    exports.arraysToBytes = arraysToBytes;\n    exports.assert = assert;\n    exports.bytesToString = bytesToString;\n    exports.createPromiseCapability = createPromiseCapability;\n    exports.getVerbosityLevel = getVerbosityLevel;\n    exports.info = info;\n    exports.isArrayBuffer = isArrayBuffer;\n    exports.isArrayEqual = isArrayEqual;\n    exports.isBool = isBool;\n    exports.isEmptyObj = isEmptyObj;\n    exports.isNum = isNum;\n    exports.isString = isString;\n    exports.isSameOrigin = isSameOrigin;\n    exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n    exports.removeNullCharacters = removeNullCharacters;\n    exports.setVerbosityLevel = setVerbosityLevel;\n    exports.shadow = shadow;\n    exports.string32 = string32;\n    exports.stringToBytes = stringToBytes;\n    exports.stringToPDFString = stringToPDFString;\n    exports.stringToUTF8String = stringToUTF8String;\n    exports.utf8StringToString = utf8StringToString;\n    exports.warn = warn;\n    exports.unreachable = unreachable;\n    exports.IsEvalSupportedCached = exports.IsLittleEndianCached = exports.createObjectURL = exports.FormatError = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.NativeImageDecoding = exports.MissingPDFException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = exports.BaseException = void 0;\n    __w_pdfjs_require__(2);\n    const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n    exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n    const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n    exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n    const NativeImageDecoding = {\n      NONE: \"none\",\n      DECODE: \"decode\",\n      DISPLAY: \"display\"\n    };\n    exports.NativeImageDecoding = NativeImageDecoding;\n    const PermissionFlag = {\n      PRINT: 0x04,\n      MODIFY_CONTENTS: 0x08,\n      COPY: 0x10,\n      MODIFY_ANNOTATIONS: 0x20,\n      FILL_INTERACTIVE_FORMS: 0x100,\n      COPY_FOR_ACCESSIBILITY: 0x200,\n      ASSEMBLE: 0x400,\n      PRINT_HIGH_QUALITY: 0x800\n    };\n    exports.PermissionFlag = PermissionFlag;\n    const TextRenderingMode = {\n      FILL: 0,\n      STROKE: 1,\n      FILL_STROKE: 2,\n      INVISIBLE: 3,\n      FILL_ADD_TO_PATH: 4,\n      STROKE_ADD_TO_PATH: 5,\n      FILL_STROKE_ADD_TO_PATH: 6,\n      ADD_TO_PATH: 7,\n      FILL_STROKE_MASK: 3,\n      ADD_TO_PATH_FLAG: 4\n    };\n    exports.TextRenderingMode = TextRenderingMode;\n    const ImageKind = {\n      GRAYSCALE_1BPP: 1,\n      RGB_24BPP: 2,\n      RGBA_32BPP: 3\n    };\n    exports.ImageKind = ImageKind;\n    const AnnotationType = {\n      TEXT: 1,\n      LINK: 2,\n      FREETEXT: 3,\n      LINE: 4,\n      SQUARE: 5,\n      CIRCLE: 6,\n      POLYGON: 7,\n      POLYLINE: 8,\n      HIGHLIGHT: 9,\n      UNDERLINE: 10,\n      SQUIGGLY: 11,\n      STRIKEOUT: 12,\n      STAMP: 13,\n      CARET: 14,\n      INK: 15,\n      POPUP: 16,\n      FILEATTACHMENT: 17,\n      SOUND: 18,\n      MOVIE: 19,\n      WIDGET: 20,\n      SCREEN: 21,\n      PRINTERMARK: 22,\n      TRAPNET: 23,\n      WATERMARK: 24,\n      THREED: 25,\n      REDACT: 26\n    };\n    exports.AnnotationType = AnnotationType;\n    const AnnotationStateModelType = {\n      MARKED: \"Marked\",\n      REVIEW: \"Review\"\n    };\n    exports.AnnotationStateModelType = AnnotationStateModelType;\n    const AnnotationMarkedState = {\n      MARKED: \"Marked\",\n      UNMARKED: \"Unmarked\"\n    };\n    exports.AnnotationMarkedState = AnnotationMarkedState;\n    const AnnotationReviewState = {\n      ACCEPTED: \"Accepted\",\n      REJECTED: \"Rejected\",\n      CANCELLED: \"Cancelled\",\n      COMPLETED: \"Completed\",\n      NONE: \"None\"\n    };\n    exports.AnnotationReviewState = AnnotationReviewState;\n    const AnnotationReplyType = {\n      GROUP: \"Group\",\n      REPLY: \"R\"\n    };\n    exports.AnnotationReplyType = AnnotationReplyType;\n    const AnnotationFlag = {\n      INVISIBLE: 0x01,\n      HIDDEN: 0x02,\n      PRINT: 0x04,\n      NOZOOM: 0x08,\n      NOROTATE: 0x10,\n      NOVIEW: 0x20,\n      READONLY: 0x40,\n      LOCKED: 0x80,\n      TOGGLENOVIEW: 0x100,\n      LOCKEDCONTENTS: 0x200\n    };\n    exports.AnnotationFlag = AnnotationFlag;\n    const AnnotationFieldFlag = {\n      READONLY: 0x0000001,\n      REQUIRED: 0x0000002,\n      NOEXPORT: 0x0000004,\n      MULTILINE: 0x0001000,\n      PASSWORD: 0x0002000,\n      NOTOGGLETOOFF: 0x0004000,\n      RADIO: 0x0008000,\n      PUSHBUTTON: 0x0010000,\n      COMBO: 0x0020000,\n      EDIT: 0x0040000,\n      SORT: 0x0080000,\n      FILESELECT: 0x0100000,\n      MULTISELECT: 0x0200000,\n      DONOTSPELLCHECK: 0x0400000,\n      DONOTSCROLL: 0x0800000,\n      COMB: 0x1000000,\n      RICHTEXT: 0x2000000,\n      RADIOSINUNISON: 0x2000000,\n      COMMITONSELCHANGE: 0x4000000\n    };\n    exports.AnnotationFieldFlag = AnnotationFieldFlag;\n    const AnnotationBorderStyleType = {\n      SOLID: 1,\n      DASHED: 2,\n      BEVELED: 3,\n      INSET: 4,\n      UNDERLINE: 5\n    };\n    exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n    const StreamType = {\n      UNKNOWN: \"UNKNOWN\",\n      FLATE: \"FLATE\",\n      LZW: \"LZW\",\n      DCT: \"DCT\",\n      JPX: \"JPX\",\n      JBIG: \"JBIG\",\n      A85: \"A85\",\n      AHX: \"AHX\",\n      CCF: \"CCF\",\n      RLX: \"RLX\"\n    };\n    exports.StreamType = StreamType;\n    const FontType = {\n      UNKNOWN: \"UNKNOWN\",\n      TYPE1: \"TYPE1\",\n      TYPE1C: \"TYPE1C\",\n      CIDFONTTYPE0: \"CIDFONTTYPE0\",\n      CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n      TRUETYPE: \"TRUETYPE\",\n      CIDFONTTYPE2: \"CIDFONTTYPE2\",\n      TYPE3: \"TYPE3\",\n      OPENTYPE: \"OPENTYPE\",\n      TYPE0: \"TYPE0\",\n      MMTYPE1: \"MMTYPE1\"\n    };\n    exports.FontType = FontType;\n    const VerbosityLevel = {\n      ERRORS: 0,\n      WARNINGS: 1,\n      INFOS: 5\n    };\n    exports.VerbosityLevel = VerbosityLevel;\n    const CMapCompressionType = {\n      NONE: 0,\n      BINARY: 1,\n      STREAM: 2\n    };\n    exports.CMapCompressionType = CMapCompressionType;\n    const OPS = {\n      dependency: 1,\n      setLineWidth: 2,\n      setLineCap: 3,\n      setLineJoin: 4,\n      setMiterLimit: 5,\n      setDash: 6,\n      setRenderingIntent: 7,\n      setFlatness: 8,\n      setGState: 9,\n      save: 10,\n      restore: 11,\n      transform: 12,\n      moveTo: 13,\n      lineTo: 14,\n      curveTo: 15,\n      curveTo2: 16,\n      curveTo3: 17,\n      closePath: 18,\n      rectangle: 19,\n      stroke: 20,\n      closeStroke: 21,\n      fill: 22,\n      eoFill: 23,\n      fillStroke: 24,\n      eoFillStroke: 25,\n      closeFillStroke: 26,\n      closeEOFillStroke: 27,\n      endPath: 28,\n      clip: 29,\n      eoClip: 30,\n      beginText: 31,\n      endText: 32,\n      setCharSpacing: 33,\n      setWordSpacing: 34,\n      setHScale: 35,\n      setLeading: 36,\n      setFont: 37,\n      setTextRenderingMode: 38,\n      setTextRise: 39,\n      moveText: 40,\n      setLeadingMoveText: 41,\n      setTextMatrix: 42,\n      nextLine: 43,\n      showText: 44,\n      showSpacedText: 45,\n      nextLineShowText: 46,\n      nextLineSetSpacingShowText: 47,\n      setCharWidth: 48,\n      setCharWidthAndBounds: 49,\n      setStrokeColorSpace: 50,\n      setFillColorSpace: 51,\n      setStrokeColor: 52,\n      setStrokeColorN: 53,\n      setFillColor: 54,\n      setFillColorN: 55,\n      setStrokeGray: 56,\n      setFillGray: 57,\n      setStrokeRGBColor: 58,\n      setFillRGBColor: 59,\n      setStrokeCMYKColor: 60,\n      setFillCMYKColor: 61,\n      shadingFill: 62,\n      beginInlineImage: 63,\n      beginImageData: 64,\n      endInlineImage: 65,\n      paintXObject: 66,\n      markPoint: 67,\n      markPointProps: 68,\n      beginMarkedContent: 69,\n      beginMarkedContentProps: 70,\n      endMarkedContent: 71,\n      beginCompat: 72,\n      endCompat: 73,\n      paintFormXObjectBegin: 74,\n      paintFormXObjectEnd: 75,\n      beginGroup: 76,\n      endGroup: 77,\n      beginAnnotations: 78,\n      endAnnotations: 79,\n      beginAnnotation: 80,\n      endAnnotation: 81,\n      paintJpegXObject: 82,\n      paintImageMaskXObject: 83,\n      paintImageMaskXObjectGroup: 84,\n      paintImageXObject: 85,\n      paintInlineImageXObject: 86,\n      paintInlineImageXObjectGroup: 87,\n      paintImageXObjectRepeat: 88,\n      paintImageMaskXObjectRepeat: 89,\n      paintSolidColorImageMask: 90,\n      constructPath: 91\n    };\n    exports.OPS = OPS;\n    const UNSUPPORTED_FEATURES = {\n      unknown: \"unknown\",\n      forms: \"forms\",\n      javaScript: \"javaScript\",\n      smask: \"smask\",\n      shadingPattern: \"shadingPattern\",\n      font: \"font\"\n    };\n    exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n    const PasswordResponses = {\n      NEED_PASSWORD: 1,\n      INCORRECT_PASSWORD: 2\n    };\n    exports.PasswordResponses = PasswordResponses;\n    let verbosity = VerbosityLevel.WARNINGS;\n    function setVerbosityLevel(level) {\n      if (Number.isInteger(level)) {\n        verbosity = level;\n      }\n    }\n    function getVerbosityLevel() {\n      return verbosity;\n    }\n    function info(msg) {\n      if (verbosity >= VerbosityLevel.INFOS) {\n        console.log(`Info: ${msg}`);\n      }\n    }\n    function warn(msg) {\n      if (verbosity >= VerbosityLevel.WARNINGS) {\n        console.log(`Warning: ${msg}`);\n      }\n    }\n    function unreachable(msg) {\n      throw new Error(msg);\n    }\n    function assert(cond, msg) {\n      if (!cond) {\n        unreachable(msg);\n      }\n    }\n    function isSameOrigin(baseUrl, otherUrl) {\n      let base;\n      try {\n        base = new URL(baseUrl);\n        if (!base.origin || base.origin === \"null\") {\n          return false;\n        }\n      } catch (e) {\n        return false;\n      }\n      const other = new URL(otherUrl, base);\n      return base.origin === other.origin;\n    }\n    function _isValidProtocol(url) {\n      if (!url) {\n        return false;\n      }\n      switch (url.protocol) {\n        case \"http:\":\n        case \"https:\":\n        case \"ftp:\":\n        case \"mailto:\":\n        case \"tel:\":\n          return true;\n        default:\n          return false;\n      }\n    }\n    function createValidAbsoluteUrl(url, baseUrl) {\n      if (!url) {\n        return null;\n      }\n      try {\n        const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n        if (_isValidProtocol(absoluteUrl)) {\n          return absoluteUrl;\n        }\n      } catch (ex) {}\n      return null;\n    }\n    function shadow(obj, prop, value) {\n      Object.defineProperty(obj, prop, {\n        value,\n        enumerable: true,\n        configurable: true,\n        writable: false\n      });\n      return value;\n    }\n    const BaseException = function BaseExceptionClosure() {\n      function BaseException(message) {\n        if (this.constructor === BaseException) {\n          unreachable(\"Cannot initialize BaseException.\");\n        }\n        this.message = message;\n        this.name = this.constructor.name;\n      }\n      BaseException.prototype = new Error();\n      BaseException.constructor = BaseException;\n      return BaseException;\n    }();\n    exports.BaseException = BaseException;\n    class PasswordException extends BaseException {\n      constructor(msg, code) {\n        super(msg);\n        this.code = code;\n      }\n    }\n    exports.PasswordException = PasswordException;\n    class UnknownErrorException extends BaseException {\n      constructor(msg, details) {\n        super(msg);\n        this.details = details;\n      }\n    }\n    exports.UnknownErrorException = UnknownErrorException;\n    class InvalidPDFException extends BaseException {}\n    exports.InvalidPDFException = InvalidPDFException;\n    class MissingPDFException extends BaseException {}\n    exports.MissingPDFException = MissingPDFException;\n    class UnexpectedResponseException extends BaseException {\n      constructor(msg, status) {\n        super(msg);\n        this.status = status;\n      }\n    }\n    exports.UnexpectedResponseException = UnexpectedResponseException;\n    class FormatError extends BaseException {}\n    exports.FormatError = FormatError;\n    class AbortException extends BaseException {}\n    exports.AbortException = AbortException;\n    const NullCharactersRegExp = /\\x00/g;\n    function removeNullCharacters(str) {\n      if (typeof str !== \"string\") {\n        warn(\"The argument for removeNullCharacters must be a string.\");\n        return str;\n      }\n      return str.replace(NullCharactersRegExp, \"\");\n    }\n    function bytesToString(bytes) {\n      assert(bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n      const length = bytes.length;\n      const MAX_ARGUMENT_COUNT = 8192;\n      if (length < MAX_ARGUMENT_COUNT) {\n        return String.fromCharCode.apply(null, bytes);\n      }\n      const strBuf = [];\n      for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n        const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n        const chunk = bytes.subarray(i, chunkEnd);\n        strBuf.push(String.fromCharCode.apply(null, chunk));\n      }\n      return strBuf.join(\"\");\n    }\n    function stringToBytes(str) {\n      assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n      const length = str.length;\n      const bytes = new Uint8Array(length);\n      for (let i = 0; i < length; ++i) {\n        bytes[i] = str.charCodeAt(i) & 0xff;\n      }\n      return bytes;\n    }\n    function arrayByteLength(arr) {\n      if (arr.length !== undefined) {\n        return arr.length;\n      }\n      assert(arr.byteLength !== undefined);\n      return arr.byteLength;\n    }\n    function arraysToBytes(arr) {\n      const length = arr.length;\n      if (length === 1 && arr[0] instanceof Uint8Array) {\n        return arr[0];\n      }\n      let resultLength = 0;\n      for (let i = 0; i < length; i++) {\n        resultLength += arrayByteLength(arr[i]);\n      }\n      let pos = 0;\n      const data = new Uint8Array(resultLength);\n      for (let i = 0; i < length; i++) {\n        let item = arr[i];\n        if (!(item instanceof Uint8Array)) {\n          if (typeof item === \"string\") {\n            item = stringToBytes(item);\n          } else {\n            item = new Uint8Array(item);\n          }\n        }\n        const itemLength = item.byteLength;\n        data.set(item, pos);\n        pos += itemLength;\n      }\n      return data;\n    }\n    function string32(value) {\n      return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n    }\n    function isLittleEndian() {\n      const buffer8 = new Uint8Array(4);\n      buffer8[0] = 1;\n      const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n      return view32[0] === 1;\n    }\n    const IsLittleEndianCached = {\n      get value() {\n        return shadow(this, \"value\", isLittleEndian());\n      }\n    };\n    exports.IsLittleEndianCached = IsLittleEndianCached;\n    function isEvalSupported() {\n      try {\n        new Function(\"\");\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n    const IsEvalSupportedCached = {\n      get value() {\n        return shadow(this, \"value\", isEvalSupported());\n      }\n    };\n    exports.IsEvalSupportedCached = IsEvalSupportedCached;\n    const rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n    class Util {\n      static makeCssRgb(r, g, b) {\n        rgbBuf[1] = r;\n        rgbBuf[3] = g;\n        rgbBuf[5] = b;\n        return rgbBuf.join(\"\");\n      }\n      static transform(m1, m2) {\n        return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n      }\n      static applyTransform(p, m) {\n        const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n        const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n        return [xt, yt];\n      }\n      static applyInverseTransform(p, m) {\n        const d = m[0] * m[3] - m[1] * m[2];\n        const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n        const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n        return [xt, yt];\n      }\n      static getAxialAlignedBoundingBox(r, m) {\n        const p1 = Util.applyTransform(r, m);\n        const p2 = Util.applyTransform(r.slice(2, 4), m);\n        const p3 = Util.applyTransform([r[0], r[3]], m);\n        const p4 = Util.applyTransform([r[2], r[1]], m);\n        return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n      }\n      static inverseTransform(m) {\n        const d = m[0] * m[3] - m[1] * m[2];\n        return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n      }\n      static apply3dTransform(m, v) {\n        return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n      }\n      static singularValueDecompose2dScale(m) {\n        const transpose = [m[0], m[2], m[1], m[3]];\n        const a = m[0] * transpose[0] + m[1] * transpose[2];\n        const b = m[0] * transpose[1] + m[1] * transpose[3];\n        const c = m[2] * transpose[0] + m[3] * transpose[2];\n        const d = m[2] * transpose[1] + m[3] * transpose[3];\n        const first = (a + d) / 2;\n        const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n        const sx = first + second || 1;\n        const sy = first - second || 1;\n        return [Math.sqrt(sx), Math.sqrt(sy)];\n      }\n      static normalizeRect(rect) {\n        const r = rect.slice(0);\n        if (rect[0] > rect[2]) {\n          r[0] = rect[2];\n          r[2] = rect[0];\n        }\n        if (rect[1] > rect[3]) {\n          r[1] = rect[3];\n          r[3] = rect[1];\n        }\n        return r;\n      }\n      static intersect(rect1, rect2) {\n        function compare(a, b) {\n          return a - b;\n        }\n        const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n        const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n        const result = [];\n        rect1 = Util.normalizeRect(rect1);\n        rect2 = Util.normalizeRect(rect2);\n        if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n          result[0] = orderedX[1];\n          result[2] = orderedX[2];\n        } else {\n          return null;\n        }\n        if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n          result[1] = orderedY[1];\n          result[3] = orderedY[2];\n        } else {\n          return null;\n        }\n        return result;\n      }\n    }\n    exports.Util = Util;\n    const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n    function stringToPDFString(str) {\n      const length = str.length,\n        strBuf = [];\n      if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n        for (let i = 2; i < length; i += 2) {\n          strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n        }\n      } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n        for (let i = 2; i < length; i += 2) {\n          strBuf.push(String.fromCharCode(str.charCodeAt(i + 1) << 8 | str.charCodeAt(i)));\n        }\n      } else {\n        for (let i = 0; i < length; ++i) {\n          const code = PDFStringTranslateTable[str.charCodeAt(i)];\n          strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n        }\n      }\n      return strBuf.join(\"\");\n    }\n    function stringToUTF8String(str) {\n      return decodeURIComponent(escape(str));\n    }\n    function utf8StringToString(str) {\n      return unescape(encodeURIComponent(str));\n    }\n    function isEmptyObj(obj) {\n      for (const key in obj) {\n        return false;\n      }\n      return true;\n    }\n    function isBool(v) {\n      return typeof v === \"boolean\";\n    }\n    function isNum(v) {\n      return typeof v === \"number\";\n    }\n    function isString(v) {\n      return typeof v === \"string\";\n    }\n    function isArrayBuffer(v) {\n      return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n    }\n    function isArrayEqual(arr1, arr2) {\n      if (arr1.length !== arr2.length) {\n        return false;\n      }\n      return arr1.every(function (element, index) {\n        return element === arr2[index];\n      });\n    }\n    function createPromiseCapability() {\n      const capability = Object.create(null);\n      let isSettled = false;\n      Object.defineProperty(capability, \"settled\", {\n        get() {\n          return isSettled;\n        }\n      });\n      capability.promise = new Promise(function (resolve, reject) {\n        capability.resolve = function (data) {\n          isSettled = true;\n          resolve(data);\n        };\n        capability.reject = function (reason) {\n          isSettled = true;\n          reject(reason);\n        };\n      });\n      return capability;\n    }\n    const createObjectURL = function createObjectURLClosure() {\n      const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      return function createObjectURL(data, contentType, forceDataSchema = false) {\n        if (!forceDataSchema && URL.createObjectURL) {\n          const blob = new Blob([data], {\n            type: contentType\n          });\n          return URL.createObjectURL(blob);\n        }\n        let buffer = `data:${contentType};base64,`;\n        for (let i = 0, ii = data.length; i < ii; i += 3) {\n          const b1 = data[i] & 0xff;\n          const b2 = data[i + 1] & 0xff;\n          const b3 = data[i + 2] & 0xff;\n          const d1 = b1 >> 2,\n            d2 = (b1 & 3) << 4 | b2 >> 4;\n          const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n          const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n          buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n        }\n        return buffer;\n      };\n    }();\n    exports.createObjectURL = createObjectURL;\n\n    /***/\n  }), ( /* 2 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    ;\n\n    /***/\n  }), ( /* 3 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.getDocument = getDocument;\n    exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n    exports.build = exports.version = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFWorker = exports.PDFDataRangeTransport = exports.LoopbackPort = void 0;\n    var _util = __w_pdfjs_require__(1);\n    var _display_utils = __w_pdfjs_require__(4);\n    var _font_loader = __w_pdfjs_require__(5);\n    var _api_compatibility = __w_pdfjs_require__(6);\n    var _canvas = __w_pdfjs_require__(8);\n    var _worker_options = __w_pdfjs_require__(10);\n    var _is_node = __w_pdfjs_require__(7);\n    var _message_handler = __w_pdfjs_require__(11);\n    var _metadata = __w_pdfjs_require__(12);\n    var _transport_stream = __w_pdfjs_require__(14);\n    var _webgl = __w_pdfjs_require__(15);\n    const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n    const RENDERING_CANCELLED_TIMEOUT = 100;\n    let createPDFNetworkStream;\n    function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n      createPDFNetworkStream = pdfNetworkStreamFactory;\n    }\n    function getDocument(src) {\n      const task = new PDFDocumentLoadingTask();\n      let source;\n      if (typeof src === \"string\") {\n        source = {\n          url: src\n        };\n      } else if ((0, _util.isArrayBuffer)(src)) {\n        source = {\n          data: src\n        };\n      } else if (src instanceof PDFDataRangeTransport) {\n        source = {\n          range: src\n        };\n      } else {\n        if (typeof src !== \"object\") {\n          throw new Error(\"Invalid parameter in getDocument, \" + \"need either Uint8Array, string or a parameter object\");\n        }\n        if (!src.url && !src.data && !src.range) {\n          throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n        }\n        source = src;\n      }\n      const params = Object.create(null);\n      let rangeTransport = null,\n        worker = null;\n      for (const key in source) {\n        if (key === \"url\" && typeof window !== \"undefined\") {\n          params[key] = new URL(source[key], window.location).href;\n          continue;\n        } else if (key === \"range\") {\n          rangeTransport = source[key];\n          continue;\n        } else if (key === \"worker\") {\n          worker = source[key];\n          continue;\n        } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n          const pdfBytes = source[key];\n          if (typeof pdfBytes === \"string\") {\n            params[key] = (0, _util.stringToBytes)(pdfBytes);\n          } else if (typeof pdfBytes === \"object\" && pdfBytes !== null && !isNaN(pdfBytes.length)) {\n            params[key] = new Uint8Array(pdfBytes);\n          } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\n            params[key] = new Uint8Array(pdfBytes);\n          } else {\n            throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string or array-like object is expected in the \" + \"data property.\");\n          }\n          continue;\n        }\n        params[key] = source[key];\n      }\n      params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n      params.CMapReaderFactory = params.CMapReaderFactory || _display_utils.DOMCMapReaderFactory;\n      params.ignoreErrors = params.stopAtErrors !== true;\n      params.pdfBug = params.pdfBug === true;\n      const NativeImageDecoderValues = Object.values(_util.NativeImageDecoding);\n      if (params.nativeImageDecoderSupport === undefined || !NativeImageDecoderValues.includes(params.nativeImageDecoderSupport)) {\n        params.nativeImageDecoderSupport = _api_compatibility.apiCompatibilityParams.nativeImageDecoderSupport || _util.NativeImageDecoding.DECODE;\n      }\n      if (!Number.isInteger(params.maxImageSize)) {\n        params.maxImageSize = -1;\n      }\n      if (typeof params.isEvalSupported !== \"boolean\") {\n        params.isEvalSupported = true;\n      }\n      if (typeof params.disableFontFace !== \"boolean\") {\n        params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n      }\n      if (typeof params.disableRange !== \"boolean\") {\n        params.disableRange = false;\n      }\n      if (typeof params.disableStream !== \"boolean\") {\n        params.disableStream = false;\n      }\n      if (typeof params.disableAutoFetch !== \"boolean\") {\n        params.disableAutoFetch = false;\n      }\n      if (typeof params.disableCreateObjectURL !== \"boolean\") {\n        params.disableCreateObjectURL = _api_compatibility.apiCompatibilityParams.disableCreateObjectURL || false;\n      }\n      (0, _util.setVerbosityLevel)(params.verbosity);\n      if (!worker) {\n        const workerParams = {\n          verbosity: params.verbosity,\n          port: _worker_options.GlobalWorkerOptions.workerPort\n        };\n        worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n        task._worker = worker;\n      }\n      const docId = task.docId;\n      worker.promise.then(function () {\n        if (task.destroyed) {\n          throw new Error(\"Loading aborted\");\n        }\n        return _fetchDocument(worker, params, rangeTransport, docId).then(function (workerId) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n          let networkStream;\n          if (rangeTransport) {\n            networkStream = new _transport_stream.PDFDataTransportStream({\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream\n            }, rangeTransport);\n          } else if (!params.data) {\n            networkStream = createPDFNetworkStream({\n              url: params.url,\n              length: params.length,\n              httpHeaders: params.httpHeaders,\n              withCredentials: params.withCredentials,\n              rangeChunkSize: params.rangeChunkSize,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream\n            });\n          }\n          const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(messageHandler, task, networkStream, params);\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        });\n      }).catch(task._capability.reject);\n      return task;\n    }\n    function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n      if (worker.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed\"));\n      }\n      if (pdfDataRangeTransport) {\n        source.length = pdfDataRangeTransport.length;\n        source.initialData = pdfDataRangeTransport.initialData;\n        source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n      }\n      return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n        docId,\n        apiVersion: '2.4.456',\n        source: {\n          data: source.data,\n          url: source.url,\n          password: source.password,\n          disableAutoFetch: source.disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize,\n          length: source.length\n        },\n        maxImageSize: source.maxImageSize,\n        disableFontFace: source.disableFontFace,\n        disableCreateObjectURL: source.disableCreateObjectURL,\n        postMessageTransfers: worker.postMessageTransfers,\n        docBaseUrl: source.docBaseUrl,\n        nativeImageDecoderSupport: source.nativeImageDecoderSupport,\n        ignoreErrors: source.ignoreErrors,\n        isEvalSupported: source.isEvalSupported\n      }).then(function (workerId) {\n        if (worker.destroyed) {\n          throw new Error(\"Worker was destroyed\");\n        }\n        return workerId;\n      });\n    }\n    const PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n      let nextDocumentId = 0;\n      class PDFDocumentLoadingTask {\n        constructor() {\n          this._capability = (0, _util.createPromiseCapability)();\n          this._transport = null;\n          this._worker = null;\n          this.docId = \"d\" + nextDocumentId++;\n          this.destroyed = false;\n          this.onPassword = null;\n          this.onProgress = null;\n          this.onUnsupportedFeature = null;\n        }\n        get promise() {\n          return this._capability.promise;\n        }\n        destroy() {\n          this.destroyed = true;\n          const transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n          return transportDestroyed.then(() => {\n            this._transport = null;\n            if (this._worker) {\n              this._worker.destroy();\n              this._worker = null;\n            }\n          });\n        }\n        then(onFulfilled, onRejected) {\n          throw new Error(\"Removed API method: \" + \"PDFDocumentLoadingTask.then, use the `promise` getter instead.\");\n        }\n      }\n      return PDFDocumentLoadingTask;\n    }();\n    class PDFDataRangeTransport {\n      constructor(length, initialData, progressiveDone = false) {\n        this.length = length;\n        this.initialData = initialData;\n        this.progressiveDone = progressiveDone;\n        this._rangeListeners = [];\n        this._progressListeners = [];\n        this._progressiveReadListeners = [];\n        this._progressiveDoneListeners = [];\n        this._readyCapability = (0, _util.createPromiseCapability)();\n      }\n      addRangeListener(listener) {\n        this._rangeListeners.push(listener);\n      }\n      addProgressListener(listener) {\n        this._progressListeners.push(listener);\n      }\n      addProgressiveReadListener(listener) {\n        this._progressiveReadListeners.push(listener);\n      }\n      addProgressiveDoneListener(listener) {\n        this._progressiveDoneListeners.push(listener);\n      }\n      onDataRange(begin, chunk) {\n        for (const listener of this._rangeListeners) {\n          listener(begin, chunk);\n        }\n      }\n      onDataProgress(loaded, total) {\n        this._readyCapability.promise.then(() => {\n          for (const listener of this._progressListeners) {\n            listener(loaded, total);\n          }\n        });\n      }\n      onDataProgressiveRead(chunk) {\n        this._readyCapability.promise.then(() => {\n          for (const listener of this._progressiveReadListeners) {\n            listener(chunk);\n          }\n        });\n      }\n      onDataProgressiveDone() {\n        this._readyCapability.promise.then(() => {\n          for (const listener of this._progressiveDoneListeners) {\n            listener();\n          }\n        });\n      }\n      transportReady() {\n        this._readyCapability.resolve();\n      }\n      requestDataRange(begin, end) {\n        (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n      }\n      abort() {}\n    }\n    exports.PDFDataRangeTransport = PDFDataRangeTransport;\n    class PDFDocumentProxy {\n      constructor(pdfInfo, transport) {\n        this._pdfInfo = pdfInfo;\n        this._transport = transport;\n      }\n      get numPages() {\n        return this._pdfInfo.numPages;\n      }\n      get fingerprint() {\n        return this._pdfInfo.fingerprint;\n      }\n      getPage(pageNumber) {\n        return this._transport.getPage(pageNumber);\n      }\n      getPageIndex(ref) {\n        return this._transport.getPageIndex(ref);\n      }\n      getDestinations() {\n        return this._transport.getDestinations();\n      }\n      getDestination(id) {\n        return this._transport.getDestination(id);\n      }\n      getPageLabels() {\n        return this._transport.getPageLabels();\n      }\n      getPageLayout() {\n        return this._transport.getPageLayout();\n      }\n      getPageMode() {\n        return this._transport.getPageMode();\n      }\n      getViewerPreferences() {\n        return this._transport.getViewerPreferences();\n      }\n      getOpenAction() {\n        return this._transport.getOpenAction();\n      }\n      getOpenActionDestination() {\n        (0, _display_utils.deprecated)(\"getOpenActionDestination, use getOpenAction instead.\");\n        return this.getOpenAction().then(function (openAction) {\n          return openAction && openAction.dest ? openAction.dest : null;\n        });\n      }\n      getAttachments() {\n        return this._transport.getAttachments();\n      }\n      getJavaScript() {\n        return this._transport.getJavaScript();\n      }\n      getOutline() {\n        return this._transport.getOutline();\n      }\n      getPermissions() {\n        return this._transport.getPermissions();\n      }\n      getMetadata() {\n        return this._transport.getMetadata();\n      }\n      getData() {\n        return this._transport.getData();\n      }\n      getDownloadInfo() {\n        return this._transport.downloadInfoCapability.promise;\n      }\n      getStats() {\n        return this._transport.getStats();\n      }\n      cleanup() {\n        return this._transport.startCleanup();\n      }\n      destroy() {\n        return this.loadingTask.destroy();\n      }\n      get loadingParams() {\n        return this._transport.loadingParams;\n      }\n      get loadingTask() {\n        return this._transport.loadingTask;\n      }\n    }\n    exports.PDFDocumentProxy = PDFDocumentProxy;\n    class PDFPageProxy {\n      constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n        this._pageIndex = pageIndex;\n        this._pageInfo = pageInfo;\n        this._transport = transport;\n        this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n        this._pdfBug = pdfBug;\n        this.commonObjs = transport.commonObjs;\n        this.objs = new PDFObjects();\n        this.cleanupAfterRender = false;\n        this.pendingCleanup = false;\n        this.intentStates = Object.create(null);\n        this.destroyed = false;\n      }\n      get pageNumber() {\n        return this._pageIndex + 1;\n      }\n      get rotate() {\n        return this._pageInfo.rotate;\n      }\n      get ref() {\n        return this._pageInfo.ref;\n      }\n      get userUnit() {\n        return this._pageInfo.userUnit;\n      }\n      get view() {\n        return this._pageInfo.view;\n      }\n      getViewport({\n        scale,\n        rotation = this.rotate,\n        offsetX = 0,\n        offsetY = 0,\n        dontFlip = false\n      } = {}) {\n        if (arguments.length > 1 || typeof arguments[0] === \"number\") {\n          throw new Error(\"PDFPageProxy.getViewport is called with obsolete arguments.\");\n        }\n        return new _display_utils.PageViewport({\n          viewBox: this.view,\n          scale,\n          rotation,\n          offsetX,\n          offsetY,\n          dontFlip\n        });\n      }\n      getAnnotations({\n        intent = null\n      } = {}) {\n        if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n          this.annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n          this.annotationsIntent = intent;\n        }\n        return this.annotationsPromise;\n      }\n      render({\n        canvasContext,\n        viewport,\n        intent = \"display\",\n        enableWebGL = false,\n        renderInteractiveForms = false,\n        transform = null,\n        imageLayer = null,\n        canvasFactory = null,\n        background = null\n      }) {\n        if (this._stats) {\n          this._stats.time(\"Overall\");\n        }\n        const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n        this.pendingCleanup = false;\n        if (!this.intentStates[renderingIntent]) {\n          this.intentStates[renderingIntent] = Object.create(null);\n        }\n        const intentState = this.intentStates[renderingIntent];\n        if (intentState.streamReaderCancelTimeout) {\n          clearTimeout(intentState.streamReaderCancelTimeout);\n          intentState.streamReaderCancelTimeout = null;\n        }\n        const canvasFactoryInstance = canvasFactory || new _display_utils.DOMCanvasFactory();\n        const webGLContext = new _webgl.WebGLContext({\n          enable: enableWebGL\n        });\n        if (!intentState.displayReadyCapability) {\n          intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n          intentState.operatorList = {\n            fnArray: [],\n            argsArray: [],\n            lastChunk: false\n          };\n          if (this._stats) {\n            this._stats.time(\"Page Request\");\n          }\n          this._pumpOperatorList({\n            pageIndex: this._pageIndex,\n            intent: renderingIntent,\n            renderInteractiveForms: renderInteractiveForms === true\n          });\n        }\n        const complete = error => {\n          const i = intentState.renderTasks.indexOf(internalRenderTask);\n          if (i >= 0) {\n            intentState.renderTasks.splice(i, 1);\n          }\n          if (this.cleanupAfterRender || renderingIntent === \"print\") {\n            this.pendingCleanup = true;\n          }\n          this._tryCleanup();\n          if (error) {\n            internalRenderTask.capability.reject(error);\n            this._abortOperatorList({\n              intentState,\n              reason: error\n            });\n          } else {\n            internalRenderTask.capability.resolve();\n          }\n          if (this._stats) {\n            this._stats.timeEnd(\"Rendering\");\n            this._stats.timeEnd(\"Overall\");\n          }\n        };\n        const internalRenderTask = new InternalRenderTask({\n          callback: complete,\n          params: {\n            canvasContext,\n            viewport,\n            transform,\n            imageLayer,\n            background\n          },\n          objs: this.objs,\n          commonObjs: this.commonObjs,\n          operatorList: intentState.operatorList,\n          pageIndex: this._pageIndex,\n          canvasFactory: canvasFactoryInstance,\n          webGLContext,\n          useRequestAnimationFrame: renderingIntent !== \"print\",\n          pdfBug: this._pdfBug\n        });\n        if (!intentState.renderTasks) {\n          intentState.renderTasks = [];\n        }\n        intentState.renderTasks.push(internalRenderTask);\n        const renderTask = internalRenderTask.task;\n        intentState.displayReadyCapability.promise.then(transparency => {\n          if (this.pendingCleanup) {\n            complete();\n            return;\n          }\n          if (this._stats) {\n            this._stats.time(\"Rendering\");\n          }\n          internalRenderTask.initializeGraphics(transparency);\n          internalRenderTask.operatorListChanged();\n        }).catch(complete);\n        return renderTask;\n      }\n      getOperatorList() {\n        function operatorListChanged() {\n          if (intentState.operatorList.lastChunk) {\n            intentState.opListReadCapability.resolve(intentState.operatorList);\n            const i = intentState.renderTasks.indexOf(opListTask);\n            if (i >= 0) {\n              intentState.renderTasks.splice(i, 1);\n            }\n          }\n        }\n        const renderingIntent = \"oplist\";\n        if (!this.intentStates[renderingIntent]) {\n          this.intentStates[renderingIntent] = Object.create(null);\n        }\n        const intentState = this.intentStates[renderingIntent];\n        let opListTask;\n        if (!intentState.opListReadCapability) {\n          opListTask = {};\n          opListTask.operatorListChanged = operatorListChanged;\n          intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n          intentState.renderTasks = [];\n          intentState.renderTasks.push(opListTask);\n          intentState.operatorList = {\n            fnArray: [],\n            argsArray: [],\n            lastChunk: false\n          };\n          if (this._stats) {\n            this._stats.time(\"Page Request\");\n          }\n          this._pumpOperatorList({\n            pageIndex: this._pageIndex,\n            intent: renderingIntent\n          });\n        }\n        return intentState.opListReadCapability.promise;\n      }\n      streamTextContent({\n        normalizeWhitespace = false,\n        disableCombineTextItems = false\n      } = {}) {\n        const TEXT_CONTENT_CHUNK_SIZE = 100;\n        return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n          pageIndex: this._pageIndex,\n          normalizeWhitespace: normalizeWhitespace === true,\n          combineTextItems: disableCombineTextItems !== true\n        }, {\n          highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n          size(textContent) {\n            return textContent.items.length;\n          }\n        });\n      }\n      getTextContent(params = {}) {\n        const readableStream = this.streamTextContent(params);\n        return new Promise(function (resolve, reject) {\n          function pump() {\n            reader.read().then(function ({\n              value,\n              done\n            }) {\n              if (done) {\n                resolve(textContent);\n                return;\n              }\n              Object.assign(textContent.styles, value.styles);\n              textContent.items.push(...value.items);\n              pump();\n            }, reject);\n          }\n          const reader = readableStream.getReader();\n          const textContent = {\n            items: [],\n            styles: Object.create(null)\n          };\n          pump();\n        });\n      }\n      _destroy() {\n        this.destroyed = true;\n        this._transport.pageCache[this._pageIndex] = null;\n        const waitOn = [];\n        Object.keys(this.intentStates).forEach(intent => {\n          const intentState = this.intentStates[intent];\n          this._abortOperatorList({\n            intentState,\n            reason: new Error(\"Page was destroyed.\"),\n            force: true\n          });\n          if (intent === \"oplist\") {\n            return;\n          }\n          intentState.renderTasks.forEach(function (renderTask) {\n            const renderCompleted = renderTask.capability.promise.catch(function () {});\n            waitOn.push(renderCompleted);\n            renderTask.cancel();\n          });\n        });\n        this.objs.clear();\n        this.annotationsPromise = null;\n        this.pendingCleanup = false;\n        return Promise.all(waitOn);\n      }\n      cleanup(resetStats = false) {\n        this.pendingCleanup = true;\n        return this._tryCleanup(resetStats);\n      }\n      _tryCleanup(resetStats = false) {\n        if (!this.pendingCleanup || Object.keys(this.intentStates).some(intent => {\n          const intentState = this.intentStates[intent];\n          return intentState.renderTasks.length !== 0 || !intentState.operatorList.lastChunk;\n        })) {\n          return false;\n        }\n        Object.keys(this.intentStates).forEach(intent => {\n          delete this.intentStates[intent];\n        });\n        this.objs.clear();\n        this.annotationsPromise = null;\n        if (resetStats && this._stats) {\n          this._stats = new _display_utils.StatTimer();\n        }\n        this.pendingCleanup = false;\n        return true;\n      }\n      _startRenderPage(transparency, intent) {\n        const intentState = this.intentStates[intent];\n        if (!intentState) {\n          return;\n        }\n        if (this._stats) {\n          this._stats.timeEnd(\"Page Request\");\n        }\n        if (intentState.displayReadyCapability) {\n          intentState.displayReadyCapability.resolve(transparency);\n        }\n      }\n      _renderPageChunk(operatorListChunk, intentState) {\n        for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n          intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n          intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n        }\n        intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n        for (let i = 0; i < intentState.renderTasks.length; i++) {\n          intentState.renderTasks[i].operatorListChanged();\n        }\n        if (operatorListChunk.lastChunk) {\n          this._tryCleanup();\n        }\n      }\n      _pumpOperatorList(args) {\n        (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n        const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n        const reader = readableStream.getReader();\n        const intentState = this.intentStates[args.intent];\n        intentState.streamReader = reader;\n        const pump = () => {\n          reader.read().then(({\n            value,\n            done\n          }) => {\n            if (done) {\n              intentState.streamReader = null;\n              return;\n            }\n            if (this._transport.destroyed) {\n              return;\n            }\n            this._renderPageChunk(value, intentState);\n            pump();\n          }, reason => {\n            intentState.streamReader = null;\n            if (this._transport.destroyed) {\n              return;\n            }\n            if (intentState.operatorList) {\n              intentState.operatorList.lastChunk = true;\n              for (let i = 0; i < intentState.renderTasks.length; i++) {\n                intentState.renderTasks[i].operatorListChanged();\n              }\n              this._tryCleanup();\n            }\n            if (intentState.displayReadyCapability) {\n              intentState.displayReadyCapability.reject(reason);\n            } else if (intentState.opListReadCapability) {\n              intentState.opListReadCapability.reject(reason);\n            } else {\n              throw reason;\n            }\n          });\n        };\n        pump();\n      }\n      _abortOperatorList({\n        intentState,\n        reason,\n        force = false\n      }) {\n        (0, _util.assert)(reason instanceof Error || typeof reason === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n        if (!intentState.streamReader) {\n          return;\n        }\n        if (!force) {\n          if (intentState.renderTasks.length !== 0) {\n            return;\n          }\n          if (reason instanceof _display_utils.RenderingCancelledException) {\n            intentState.streamReaderCancelTimeout = setTimeout(() => {\n              this._abortOperatorList({\n                intentState,\n                reason,\n                force: true\n              });\n              intentState.streamReaderCancelTimeout = null;\n            }, RENDERING_CANCELLED_TIMEOUT);\n            return;\n          }\n        }\n        intentState.streamReader.cancel(new _util.AbortException(reason && reason.message));\n        intentState.streamReader = null;\n        if (this._transport.destroyed) {\n          return;\n        }\n        Object.keys(this.intentStates).some(intent => {\n          if (this.intentStates[intent] === intentState) {\n            delete this.intentStates[intent];\n            return true;\n          }\n          return false;\n        });\n        this.cleanup();\n      }\n      get stats() {\n        return this._stats;\n      }\n    }\n    exports.PDFPageProxy = PDFPageProxy;\n    class LoopbackPort {\n      constructor(defer = true) {\n        this._listeners = [];\n        this._defer = defer;\n        this._deferred = Promise.resolve(undefined);\n      }\n      postMessage(obj, transfers) {\n        function cloneValue(value) {\n          if (typeof value !== \"object\" || value === null) {\n            return value;\n          }\n          if (cloned.has(value)) {\n            return cloned.get(value);\n          }\n          let buffer, result;\n          if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n            const transferable = transfers && transfers.includes(buffer);\n            if (transferable) {\n              result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n            } else {\n              result = new value.constructor(value);\n            }\n            cloned.set(value, result);\n            return result;\n          }\n          result = Array.isArray(value) ? [] : {};\n          cloned.set(value, result);\n          for (const i in value) {\n            let desc,\n              p = value;\n            while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n              p = Object.getPrototypeOf(p);\n            }\n            if (typeof desc.value === \"undefined\") {\n              continue;\n            }\n            if (typeof desc.value === \"function\") {\n              if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n                throw new Error(`LoopbackPort.postMessage - cannot clone: ${value[i]}`);\n              }\n              continue;\n            }\n            result[i] = cloneValue(desc.value);\n          }\n          return result;\n        }\n        if (!this._defer) {\n          this._listeners.forEach(listener => {\n            listener.call(this, {\n              data: obj\n            });\n          });\n          return;\n        }\n        const cloned = new WeakMap();\n        const e = {\n          data: cloneValue(obj)\n        };\n        this._deferred.then(() => {\n          this._listeners.forEach(listener => {\n            listener.call(this, e);\n          });\n        });\n      }\n      addEventListener(name, listener) {\n        this._listeners.push(listener);\n      }\n      removeEventListener(name, listener) {\n        const i = this._listeners.indexOf(listener);\n        this._listeners.splice(i, 1);\n      }\n      terminate() {\n        this._listeners.length = 0;\n      }\n    }\n    exports.LoopbackPort = LoopbackPort;\n    const PDFWorker = function PDFWorkerClosure() {\n      const pdfWorkerPorts = new WeakMap();\n      let isWorkerDisabled = false;\n      let fallbackWorkerSrc;\n      let nextFakeWorkerId = 0;\n      let fakeWorkerCapability;\n      if (_is_node.isNodeJS && typeof require === \"function\") {\n        isWorkerDisabled = true;\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      } else if (typeof document === \"object\" && \"currentScript\" in document) {\n        const pdfjsFilePath = document.currentScript && document.currentScript.src;\n        if (pdfjsFilePath) {\n          fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n        }\n      }\n      function getWorkerSrc() {\n        if (_worker_options.GlobalWorkerOptions.workerSrc) {\n          return _worker_options.GlobalWorkerOptions.workerSrc;\n        }\n        if (typeof fallbackWorkerSrc !== \"undefined\") {\n          if (!_is_node.isNodeJS) {\n            (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n          }\n          return fallbackWorkerSrc;\n        }\n        throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      function getMainThreadWorkerMessageHandler() {\n        let mainWorkerMessageHandler;\n        try {\n          mainWorkerMessageHandler = globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n        } catch (ex) {}\n        return mainWorkerMessageHandler || null;\n      }\n      function setupFakeWorkerGlobal() {\n        if (fakeWorkerCapability) {\n          return fakeWorkerCapability.promise;\n        }\n        fakeWorkerCapability = (0, _util.createPromiseCapability)();\n        const loader = async function () {\n          const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n          if (mainWorkerMessageHandler) {\n            return mainWorkerMessageHandler;\n          }\n          if (_is_node.isNodeJS && typeof require === \"function\") {\n            const worker = eval(\"require\")(getWorkerSrc());\n            return worker.WorkerMessageHandler;\n          }\n          await (0, _display_utils.loadScript)(getWorkerSrc());\n          return window.pdfjsWorker.WorkerMessageHandler;\n        };\n        loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n        return fakeWorkerCapability.promise;\n      }\n      function createCDNWrapper(url) {\n        const wrapper = \"importScripts('\" + url + \"');\";\n        return URL.createObjectURL(new Blob([wrapper]));\n      }\n      class PDFWorker {\n        constructor({\n          name = null,\n          port = null,\n          verbosity = (0, _util.getVerbosityLevel)()\n        } = {}) {\n          if (port && pdfWorkerPorts.has(port)) {\n            throw new Error(\"Cannot use more than one PDFWorker per port\");\n          }\n          this.name = name;\n          this.destroyed = false;\n          this.postMessageTransfers = true;\n          this.verbosity = verbosity;\n          this._readyCapability = (0, _util.createPromiseCapability)();\n          this._port = null;\n          this._webWorker = null;\n          this._messageHandler = null;\n          if (port) {\n            pdfWorkerPorts.set(port, this);\n            this._initializeFromPort(port);\n            return;\n          }\n          this._initialize();\n        }\n        get promise() {\n          return this._readyCapability.promise;\n        }\n        get port() {\n          return this._port;\n        }\n        get messageHandler() {\n          return this._messageHandler;\n        }\n        _initializeFromPort(port) {\n          this._port = port;\n          this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n          this._messageHandler.on(\"ready\", function () {});\n          this._readyCapability.resolve();\n        }\n        _initialize() {\n          if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n            let workerSrc = getWorkerSrc();\n            try {\n              if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n                workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n              }\n              const worker = new Worker(workerSrc);\n              const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n              const terminateEarly = () => {\n                worker.removeEventListener(\"error\", onWorkerError);\n                messageHandler.destroy();\n                worker.terminate();\n                if (this.destroyed) {\n                  this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                } else {\n                  this._setupFakeWorker();\n                }\n              };\n              const onWorkerError = () => {\n                if (!this._webWorker) {\n                  terminateEarly();\n                }\n              };\n              worker.addEventListener(\"error\", onWorkerError);\n              messageHandler.on(\"test\", data => {\n                worker.removeEventListener(\"error\", onWorkerError);\n                if (this.destroyed) {\n                  terminateEarly();\n                  return;\n                }\n                if (data) {\n                  this._messageHandler = messageHandler;\n                  this._port = worker;\n                  this._webWorker = worker;\n                  if (!data.supportTransfers) {\n                    this.postMessageTransfers = false;\n                  }\n                  this._readyCapability.resolve();\n                  messageHandler.send(\"configure\", {\n                    verbosity: this.verbosity\n                  });\n                } else {\n                  this._setupFakeWorker();\n                  messageHandler.destroy();\n                  worker.terminate();\n                }\n              });\n              messageHandler.on(\"ready\", data => {\n                worker.removeEventListener(\"error\", onWorkerError);\n                if (this.destroyed) {\n                  terminateEarly();\n                  return;\n                }\n                try {\n                  sendTest();\n                } catch (e) {\n                  this._setupFakeWorker();\n                }\n              });\n              const sendTest = () => {\n                const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n                try {\n                  messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                } catch (ex) {\n                  (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                  testObj[0] = 0;\n                  messageHandler.send(\"test\", testObj);\n                }\n              };\n              sendTest();\n              return;\n            } catch (e) {\n              (0, _util.info)(\"The worker has been disabled.\");\n            }\n          }\n          this._setupFakeWorker();\n        }\n        _setupFakeWorker() {\n          if (!isWorkerDisabled) {\n            (0, _util.warn)(\"Setting up fake worker.\");\n            isWorkerDisabled = true;\n          }\n          setupFakeWorkerGlobal().then(WorkerMessageHandler => {\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n              return;\n            }\n            const port = new LoopbackPort();\n            this._port = port;\n            const id = \"fake\" + nextFakeWorkerId++;\n            const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n            WorkerMessageHandler.setup(workerHandler, port);\n            const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n            this._messageHandler = messageHandler;\n            this._readyCapability.resolve();\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity\n            });\n          }).catch(reason => {\n            this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n          });\n        }\n        destroy() {\n          this.destroyed = true;\n          if (this._webWorker) {\n            this._webWorker.terminate();\n            this._webWorker = null;\n          }\n          pdfWorkerPorts.delete(this._port);\n          this._port = null;\n          if (this._messageHandler) {\n            this._messageHandler.destroy();\n            this._messageHandler = null;\n          }\n        }\n        static fromPort(params) {\n          if (!params || !params.port) {\n            throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n          }\n          if (pdfWorkerPorts.has(params.port)) {\n            return pdfWorkerPorts.get(params.port);\n          }\n          return new PDFWorker(params);\n        }\n        static getWorkerSrc() {\n          return getWorkerSrc();\n        }\n      }\n      return PDFWorker;\n    }();\n    exports.PDFWorker = PDFWorker;\n    class WorkerTransport {\n      constructor(messageHandler, loadingTask, networkStream, params) {\n        this.messageHandler = messageHandler;\n        this.loadingTask = loadingTask;\n        this.commonObjs = new PDFObjects();\n        this.fontLoader = new _font_loader.FontLoader({\n          docId: loadingTask.docId,\n          onUnsupportedFeature: this._onUnsupportedFeature.bind(this)\n        });\n        this._params = params;\n        this.CMapReaderFactory = new params.CMapReaderFactory({\n          baseUrl: params.cMapUrl,\n          isCompressed: params.cMapPacked\n        });\n        this.destroyed = false;\n        this.destroyCapability = null;\n        this._passwordCapability = null;\n        this._networkStream = networkStream;\n        this._fullReader = null;\n        this._lastProgress = null;\n        this.pageCache = [];\n        this.pagePromises = [];\n        this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n        this.setupMessageHandler();\n      }\n      destroy() {\n        if (this.destroyCapability) {\n          return this.destroyCapability.promise;\n        }\n        this.destroyed = true;\n        this.destroyCapability = (0, _util.createPromiseCapability)();\n        if (this._passwordCapability) {\n          this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n        }\n        const waitOn = [];\n        this.pageCache.forEach(function (page) {\n          if (page) {\n            waitOn.push(page._destroy());\n          }\n        });\n        this.pageCache.length = 0;\n        this.pagePromises.length = 0;\n        const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n        waitOn.push(terminated);\n        Promise.all(waitOn).then(() => {\n          this.fontLoader.clear();\n          if (this._networkStream) {\n            this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n          }\n          if (this.messageHandler) {\n            this.messageHandler.destroy();\n            this.messageHandler = null;\n          }\n          this.destroyCapability.resolve();\n        }, this.destroyCapability.reject);\n        return this.destroyCapability.promise;\n      }\n      setupMessageHandler() {\n        const {\n          messageHandler,\n          loadingTask\n        } = this;\n        messageHandler.on(\"GetReader\", (data, sink) => {\n          (0, _util.assert)(this._networkStream);\n          this._fullReader = this._networkStream.getFullReader();\n          this._fullReader.onProgress = evt => {\n            this._lastProgress = {\n              loaded: evt.loaded,\n              total: evt.total\n            };\n          };\n          sink.onPull = () => {\n            this._fullReader.read().then(function ({\n              value,\n              done\n            }) {\n              if (done) {\n                sink.close();\n                return;\n              }\n              (0, _util.assert)((0, _util.isArrayBuffer)(value));\n              sink.enqueue(new Uint8Array(value), 1, [value]);\n            }).catch(reason => {\n              sink.error(reason);\n            });\n          };\n          sink.onCancel = reason => {\n            this._fullReader.cancel(reason);\n          };\n        });\n        messageHandler.on(\"ReaderHeadersReady\", data => {\n          const headersCapability = (0, _util.createPromiseCapability)();\n          const fullReader = this._fullReader;\n          fullReader.headersReady.then(() => {\n            if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n              if (this._lastProgress && loadingTask.onProgress) {\n                loadingTask.onProgress(this._lastProgress);\n              }\n              fullReader.onProgress = evt => {\n                if (loadingTask.onProgress) {\n                  loadingTask.onProgress({\n                    loaded: evt.loaded,\n                    total: evt.total\n                  });\n                }\n              };\n            }\n            headersCapability.resolve({\n              isStreamingSupported: fullReader.isStreamingSupported,\n              isRangeSupported: fullReader.isRangeSupported,\n              contentLength: fullReader.contentLength\n            });\n          }, headersCapability.reject);\n          return headersCapability.promise;\n        });\n        messageHandler.on(\"GetRangeReader\", (data, sink) => {\n          (0, _util.assert)(this._networkStream);\n          const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n          if (!rangeReader) {\n            sink.close();\n            return;\n          }\n          sink.onPull = () => {\n            rangeReader.read().then(function ({\n              value,\n              done\n            }) {\n              if (done) {\n                sink.close();\n                return;\n              }\n              (0, _util.assert)((0, _util.isArrayBuffer)(value));\n              sink.enqueue(new Uint8Array(value), 1, [value]);\n            }).catch(reason => {\n              sink.error(reason);\n            });\n          };\n          sink.onCancel = reason => {\n            rangeReader.cancel(reason);\n          };\n        });\n        messageHandler.on(\"GetDoc\", ({\n          pdfInfo\n        }) => {\n          this._numPages = pdfInfo.numPages;\n          loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n        });\n        messageHandler.on(\"DocException\", function (ex) {\n          let reason;\n          switch (ex.name) {\n            case \"PasswordException\":\n              reason = new _util.PasswordException(ex.message, ex.code);\n              break;\n            case \"InvalidPDFException\":\n              reason = new _util.InvalidPDFException(ex.message);\n              break;\n            case \"MissingPDFException\":\n              reason = new _util.MissingPDFException(ex.message);\n              break;\n            case \"UnexpectedResponseException\":\n              reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n              break;\n            case \"UnknownErrorException\":\n              reason = new _util.UnknownErrorException(ex.message, ex.details);\n              break;\n          }\n          loadingTask._capability.reject(reason);\n        });\n        messageHandler.on(\"PasswordRequest\", exception => {\n          this._passwordCapability = (0, _util.createPromiseCapability)();\n          if (loadingTask.onPassword) {\n            const updatePassword = password => {\n              this._passwordCapability.resolve({\n                password\n              });\n            };\n            try {\n              loadingTask.onPassword(updatePassword, exception.code);\n            } catch (ex) {\n              this._passwordCapability.reject(ex);\n            }\n          } else {\n            this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n          }\n          return this._passwordCapability.promise;\n        });\n        messageHandler.on(\"DataLoaded\", data => {\n          if (loadingTask.onProgress) {\n            loadingTask.onProgress({\n              loaded: data.length,\n              total: data.length\n            });\n          }\n          this.downloadInfoCapability.resolve(data);\n        });\n        messageHandler.on(\"StartRenderPage\", data => {\n          if (this.destroyed) {\n            return;\n          }\n          const page = this.pageCache[data.pageIndex];\n          page._startRenderPage(data.transparency, data.intent);\n        });\n        messageHandler.on(\"commonobj\", data => {\n          if (this.destroyed) {\n            return;\n          }\n          const [id, type, exportedData] = data;\n          if (this.commonObjs.has(id)) {\n            return;\n          }\n          switch (type) {\n            case \"Font\":\n              const params = this._params;\n              if (\"error\" in exportedData) {\n                const exportedError = exportedData.error;\n                (0, _util.warn)(`Error during font loading: ${exportedError}`);\n                this.commonObjs.resolve(id, exportedError);\n                break;\n              }\n              let fontRegistry = null;\n              if (params.pdfBug && globalThis.FontInspector && globalThis.FontInspector.enabled) {\n                fontRegistry = {\n                  registerFont(font, url) {\n                    globalThis.FontInspector.fontAdded(font, url);\n                  }\n                };\n              }\n              const font = new _font_loader.FontFaceObject(exportedData, {\n                isEvalSupported: params.isEvalSupported,\n                disableFontFace: params.disableFontFace,\n                ignoreErrors: params.ignoreErrors,\n                onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n                fontRegistry\n              });\n              this.fontLoader.bind(font).then(() => {\n                this.commonObjs.resolve(id, font);\n              }, reason => {\n                messageHandler.sendWithPromise(\"FontFallback\", {\n                  id\n                }).finally(() => {\n                  this.commonObjs.resolve(id, font);\n                });\n              });\n              break;\n            case \"FontPath\":\n            case \"FontType3Res\":\n              this.commonObjs.resolve(id, exportedData);\n              break;\n            default:\n              throw new Error(`Got unknown common object type ${type}`);\n          }\n        });\n        messageHandler.on(\"obj\", data => {\n          if (this.destroyed) {\n            return undefined;\n          }\n          const [id, pageIndex, type, imageData] = data;\n          const pageProxy = this.pageCache[pageIndex];\n          if (pageProxy.objs.has(id)) {\n            return undefined;\n          }\n          switch (type) {\n            case \"JpegStream\":\n              return new Promise((resolve, reject) => {\n                const img = new Image();\n                img.onload = function () {\n                  resolve(img);\n                };\n                img.onerror = function () {\n                  reject(new Error(\"Error during JPEG image loading\"));\n                  (0, _display_utils.releaseImageResources)(img);\n                };\n                img.src = imageData;\n              }).then(img => {\n                pageProxy.objs.resolve(id, img);\n              });\n            case \"Image\":\n              pageProxy.objs.resolve(id, imageData);\n              const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n              if (imageData && \"data\" in imageData && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {\n                pageProxy.cleanupAfterRender = true;\n              }\n              break;\n            default:\n              throw new Error(`Got unknown object type ${type}`);\n          }\n          return undefined;\n        });\n        messageHandler.on(\"DocProgress\", data => {\n          if (this.destroyed) {\n            return;\n          }\n          if (loadingTask.onProgress) {\n            loadingTask.onProgress({\n              loaded: data.loaded,\n              total: data.total\n            });\n          }\n        });\n        messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n        messageHandler.on(\"JpegDecode\", data => {\n          if (this.destroyed) {\n            return Promise.reject(new Error(\"Worker was destroyed\"));\n          }\n          if (typeof document === \"undefined\") {\n            return Promise.reject(new Error('\"document\" is not defined.'));\n          }\n          const [imageUrl, components] = data;\n          if (components !== 3 && components !== 1) {\n            return Promise.reject(new Error(\"Only 3 components or 1 component can be returned\"));\n          }\n          return new Promise(function (resolve, reject) {\n            const img = new Image();\n            img.onload = function () {\n              const {\n                width,\n                height\n              } = img;\n              const size = width * height;\n              const rgbaLength = size * 4;\n              const buf = new Uint8ClampedArray(size * components);\n              let tmpCanvas = document.createElement(\"canvas\");\n              tmpCanvas.width = width;\n              tmpCanvas.height = height;\n              let tmpCtx = tmpCanvas.getContext(\"2d\");\n              tmpCtx.drawImage(img, 0, 0);\n              const data = tmpCtx.getImageData(0, 0, width, height).data;\n              if (components === 3) {\n                for (let i = 0, j = 0; i < rgbaLength; i += 4, j += 3) {\n                  buf[j] = data[i];\n                  buf[j + 1] = data[i + 1];\n                  buf[j + 2] = data[i + 2];\n                }\n              } else if (components === 1) {\n                for (let i = 0, j = 0; i < rgbaLength; i += 4, j++) {\n                  buf[j] = data[i];\n                }\n              }\n              resolve({\n                data: buf,\n                width,\n                height\n              });\n              (0, _display_utils.releaseImageResources)(img);\n              tmpCanvas.width = 0;\n              tmpCanvas.height = 0;\n              tmpCanvas = null;\n              tmpCtx = null;\n            };\n            img.onerror = function () {\n              reject(new Error(\"JpegDecode failed to load image\"));\n              (0, _display_utils.releaseImageResources)(img);\n            };\n            img.src = imageUrl;\n          });\n        });\n        messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n          if (this.destroyed) {\n            sink.error(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          let fetched = false;\n          sink.onPull = () => {\n            if (fetched) {\n              sink.close();\n              return;\n            }\n            fetched = true;\n            this.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n              sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n            }).catch(function (reason) {\n              sink.error(reason);\n            });\n          };\n        });\n      }\n      _onUnsupportedFeature({\n        featureId\n      }) {\n        if (this.destroyed) {\n          return;\n        }\n        if (this.loadingTask.onUnsupportedFeature) {\n          this.loadingTask.onUnsupportedFeature(featureId);\n        }\n      }\n      getData() {\n        return this.messageHandler.sendWithPromise(\"GetData\", null);\n      }\n      getPage(pageNumber) {\n        if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n          return Promise.reject(new Error(\"Invalid page request\"));\n        }\n        const pageIndex = pageNumber - 1;\n        if (pageIndex in this.pagePromises) {\n          return this.pagePromises[pageIndex];\n        }\n        const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n          pageIndex\n        }).then(pageInfo => {\n          if (this.destroyed) {\n            throw new Error(\"Transport destroyed\");\n          }\n          const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.pdfBug);\n          this.pageCache[pageIndex] = page;\n          return page;\n        });\n        this.pagePromises[pageIndex] = promise;\n        return promise;\n      }\n      getPageIndex(ref) {\n        return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n          ref\n        }).catch(function (reason) {\n          return Promise.reject(new Error(reason));\n        });\n      }\n      getAnnotations(pageIndex, intent) {\n        return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n          pageIndex,\n          intent\n        });\n      }\n      getDestinations() {\n        return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n      }\n      getDestination(id) {\n        if (typeof id !== \"string\") {\n          return Promise.reject(new Error(\"Invalid destination request.\"));\n        }\n        return this.messageHandler.sendWithPromise(\"GetDestination\", {\n          id\n        });\n      }\n      getPageLabels() {\n        return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n      }\n      getPageLayout() {\n        return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n      }\n      getPageMode() {\n        return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n      }\n      getViewerPreferences() {\n        return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n      }\n      getOpenAction() {\n        return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n      }\n      getAttachments() {\n        return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n      }\n      getJavaScript() {\n        return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n      }\n      getOutline() {\n        return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n      }\n      getPermissions() {\n        return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n      }\n      getMetadata() {\n        return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\n          return {\n            info: results[0],\n            metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n            contentDispositionFilename: this._fullReader ? this._fullReader.filename : null\n          };\n        });\n      }\n      getStats() {\n        return this.messageHandler.sendWithPromise(\"GetStats\", null);\n      }\n      startCleanup() {\n        return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n          for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n            const page = this.pageCache[i];\n            if (page) {\n              const cleanupSuccessful = page.cleanup();\n              if (!cleanupSuccessful) {\n                throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n              }\n            }\n          }\n          this.commonObjs.clear();\n          this.fontLoader.clear();\n        });\n      }\n      get loadingParams() {\n        const params = this._params;\n        return (0, _util.shadow)(this, \"loadingParams\", {\n          disableAutoFetch: params.disableAutoFetch,\n          disableCreateObjectURL: params.disableCreateObjectURL,\n          disableFontFace: params.disableFontFace,\n          nativeImageDecoderSupport: params.nativeImageDecoderSupport\n        });\n      }\n    }\n    class PDFObjects {\n      constructor() {\n        this._objs = Object.create(null);\n      }\n      _ensureObj(objId) {\n        if (this._objs[objId]) {\n          return this._objs[objId];\n        }\n        return this._objs[objId] = {\n          capability: (0, _util.createPromiseCapability)(),\n          data: null,\n          resolved: false\n        };\n      }\n      get(objId, callback = null) {\n        if (callback) {\n          this._ensureObj(objId).capability.promise.then(callback);\n          return null;\n        }\n        const obj = this._objs[objId];\n        if (!obj || !obj.resolved) {\n          throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n        }\n        return obj.data;\n      }\n      has(objId) {\n        const obj = this._objs[objId];\n        return obj ? obj.resolved : false;\n      }\n      resolve(objId, data) {\n        const obj = this._ensureObj(objId);\n        obj.resolved = true;\n        obj.data = data;\n        obj.capability.resolve(data);\n      }\n      clear() {\n        for (const objId in this._objs) {\n          const {\n            data\n          } = this._objs[objId];\n          if (typeof Image !== \"undefined\" && data instanceof Image) {\n            (0, _display_utils.releaseImageResources)(data);\n          }\n        }\n        this._objs = Object.create(null);\n      }\n    }\n    class RenderTask {\n      constructor(internalRenderTask) {\n        this._internalRenderTask = internalRenderTask;\n        this.onContinue = null;\n      }\n      get promise() {\n        return this._internalRenderTask.capability.promise;\n      }\n      cancel() {\n        this._internalRenderTask.cancel();\n      }\n      then(onFulfilled, onRejected) {\n        throw new Error(\"Removed API method: \" + \"RenderTask.then, use the `promise` getter instead.\");\n      }\n    }\n    const InternalRenderTask = function InternalRenderTaskClosure() {\n      const canvasInRendering = new WeakSet();\n      class InternalRenderTask {\n        constructor({\n          callback,\n          params,\n          objs,\n          commonObjs,\n          operatorList,\n          pageIndex,\n          canvasFactory,\n          webGLContext,\n          useRequestAnimationFrame = false,\n          pdfBug = false\n        }) {\n          this.callback = callback;\n          this.params = params;\n          this.objs = objs;\n          this.commonObjs = commonObjs;\n          this.operatorListIdx = null;\n          this.operatorList = operatorList;\n          this._pageIndex = pageIndex;\n          this.canvasFactory = canvasFactory;\n          this.webGLContext = webGLContext;\n          this._pdfBug = pdfBug;\n          this.running = false;\n          this.graphicsReadyCallback = null;\n          this.graphicsReady = false;\n          this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n          this.cancelled = false;\n          this.capability = (0, _util.createPromiseCapability)();\n          this.task = new RenderTask(this);\n          this._continueBound = this._continue.bind(this);\n          this._scheduleNextBound = this._scheduleNext.bind(this);\n          this._nextBound = this._next.bind(this);\n          this._canvas = params.canvasContext.canvas;\n        }\n        initializeGraphics(transparency = false) {\n          if (this.cancelled) {\n            return;\n          }\n          if (this._canvas) {\n            if (canvasInRendering.has(this._canvas)) {\n              throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n            }\n            canvasInRendering.add(this._canvas);\n          }\n          if (this._pdfBug && globalThis.StepperManager && globalThis.StepperManager.enabled) {\n            this.stepper = globalThis.StepperManager.create(this._pageIndex);\n            this.stepper.init(this.operatorList);\n            this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n          }\n          const {\n            canvasContext,\n            viewport,\n            transform,\n            imageLayer,\n            background\n          } = this.params;\n          this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, imageLayer);\n          this.gfx.beginDrawing({\n            transform,\n            viewport,\n            transparency,\n            background\n          });\n          this.operatorListIdx = 0;\n          this.graphicsReady = true;\n          if (this.graphicsReadyCallback) {\n            this.graphicsReadyCallback();\n          }\n        }\n        cancel(error = null) {\n          this.running = false;\n          this.cancelled = true;\n          if (this.gfx) {\n            this.gfx.endDrawing();\n          }\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\n        }\n        operatorListChanged() {\n          if (!this.graphicsReady) {\n            if (!this.graphicsReadyCallback) {\n              this.graphicsReadyCallback = this._continueBound;\n            }\n            return;\n          }\n          if (this.stepper) {\n            this.stepper.updateOperatorList(this.operatorList);\n          }\n          if (this.running) {\n            return;\n          }\n          this._continue();\n        }\n        _continue() {\n          this.running = true;\n          if (this.cancelled) {\n            return;\n          }\n          if (this.task.onContinue) {\n            this.task.onContinue(this._scheduleNextBound);\n          } else {\n            this._scheduleNext();\n          }\n        }\n        _scheduleNext() {\n          if (this._useRequestAnimationFrame) {\n            window.requestAnimationFrame(() => {\n              this._nextBound().catch(this.cancel.bind(this));\n            });\n          } else {\n            Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n          }\n        }\n        async _next() {\n          if (this.cancelled) {\n            return;\n          }\n          this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n          if (this.operatorListIdx === this.operatorList.argsArray.length) {\n            this.running = false;\n            if (this.operatorList.lastChunk) {\n              this.gfx.endDrawing();\n              if (this._canvas) {\n                canvasInRendering.delete(this._canvas);\n              }\n              this.callback();\n            }\n          }\n        }\n      }\n      return InternalRenderTask;\n    }();\n    const version = '2.4.456';\n    exports.version = version;\n    const build = '228a591c';\n    exports.build = build;\n\n    /***/\n  }), ( /* 4 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.addLinkAttributes = addLinkAttributes;\n    exports.getFilenameFromUrl = getFilenameFromUrl;\n    exports.isFetchSupported = isFetchSupported;\n    exports.isValidFetchUrl = isValidFetchUrl;\n    exports.loadScript = loadScript;\n    exports.deprecated = deprecated;\n    exports.releaseImageResources = releaseImageResources;\n    exports.PDFDateString = exports.StatTimer = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.LinkTarget = exports.RenderingCancelledException = exports.PageViewport = void 0;\n    var _util = __w_pdfjs_require__(1);\n    const DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n    exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\n    const SVG_NS = \"http://www.w3.org/2000/svg\";\n    class DOMCanvasFactory {\n      create(width, height) {\n        if (width <= 0 || height <= 0) {\n          throw new Error(\"Invalid canvas size\");\n        }\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n        canvas.width = width;\n        canvas.height = height;\n        return {\n          canvas,\n          context\n        };\n      }\n      reset(canvasAndContext, width, height) {\n        if (!canvasAndContext.canvas) {\n          throw new Error(\"Canvas is not specified\");\n        }\n        if (width <= 0 || height <= 0) {\n          throw new Error(\"Invalid canvas size\");\n        }\n        canvasAndContext.canvas.width = width;\n        canvasAndContext.canvas.height = height;\n      }\n      destroy(canvasAndContext) {\n        if (!canvasAndContext.canvas) {\n          throw new Error(\"Canvas is not specified\");\n        }\n        canvasAndContext.canvas.width = 0;\n        canvasAndContext.canvas.height = 0;\n        canvasAndContext.canvas = null;\n        canvasAndContext.context = null;\n      }\n    }\n    exports.DOMCanvasFactory = DOMCanvasFactory;\n    class DOMCMapReaderFactory {\n      constructor({\n        baseUrl = null,\n        isCompressed = false\n      }) {\n        this.baseUrl = baseUrl;\n        this.isCompressed = isCompressed;\n      }\n      async fetch({\n        name\n      }) {\n        if (!this.baseUrl) {\n          throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n        }\n        if (!name) {\n          throw new Error(\"CMap name must be specified.\");\n        }\n        const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n        const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n        if (isFetchSupported() && isValidFetchUrl(url, document.baseURI)) {\n          return fetch(url).then(async response => {\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n            let cMapData;\n            if (this.isCompressed) {\n              cMapData = new Uint8Array(await response.arrayBuffer());\n            } else {\n              cMapData = (0, _util.stringToBytes)(await response.text());\n            }\n            return {\n              cMapData,\n              compressionType\n            };\n          }).catch(reason => {\n            throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}` + `CMap at: ${url}`);\n          });\n        }\n        return new Promise((resolve, reject) => {\n          const request = new XMLHttpRequest();\n          request.open(\"GET\", url, true);\n          if (this.isCompressed) {\n            request.responseType = \"arraybuffer\";\n          }\n          request.onreadystatechange = () => {\n            if (request.readyState !== XMLHttpRequest.DONE) {\n              return;\n            }\n            if (request.status === 200 || request.status === 0) {\n              let cMapData;\n              if (this.isCompressed && request.response) {\n                cMapData = new Uint8Array(request.response);\n              } else if (!this.isCompressed && request.responseText) {\n                cMapData = (0, _util.stringToBytes)(request.responseText);\n              }\n              if (cMapData) {\n                resolve({\n                  cMapData,\n                  compressionType\n                });\n                return;\n              }\n            }\n            reject(new Error(request.statusText));\n          };\n          request.send(null);\n        }).catch(reason => {\n          throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}` + `CMap at: ${url}`);\n        });\n      }\n    }\n    exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n    class DOMSVGFactory {\n      create(width, height) {\n        (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n        const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n        svg.setAttribute(\"version\", \"1.1\");\n        svg.setAttribute(\"width\", width + \"px\");\n        svg.setAttribute(\"height\", height + \"px\");\n        svg.setAttribute(\"preserveAspectRatio\", \"none\");\n        svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n        return svg;\n      }\n      createElement(type) {\n        (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n        return document.createElementNS(SVG_NS, type);\n      }\n    }\n    exports.DOMSVGFactory = DOMSVGFactory;\n    class PageViewport {\n      constructor({\n        viewBox,\n        scale,\n        rotation,\n        offsetX = 0,\n        offsetY = 0,\n        dontFlip = false\n      }) {\n        this.viewBox = viewBox;\n        this.scale = scale;\n        this.rotation = rotation;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        const centerX = (viewBox[2] + viewBox[0]) / 2;\n        const centerY = (viewBox[3] + viewBox[1]) / 2;\n        let rotateA, rotateB, rotateC, rotateD;\n        rotation = rotation % 360;\n        rotation = rotation < 0 ? rotation + 360 : rotation;\n        switch (rotation) {\n          case 180:\n            rotateA = -1;\n            rotateB = 0;\n            rotateC = 0;\n            rotateD = 1;\n            break;\n          case 90:\n            rotateA = 0;\n            rotateB = 1;\n            rotateC = 1;\n            rotateD = 0;\n            break;\n          case 270:\n            rotateA = 0;\n            rotateB = -1;\n            rotateC = -1;\n            rotateD = 0;\n            break;\n          default:\n            rotateA = 1;\n            rotateB = 0;\n            rotateC = 0;\n            rotateD = -1;\n            break;\n        }\n        if (dontFlip) {\n          rotateC = -rotateC;\n          rotateD = -rotateD;\n        }\n        let offsetCanvasX, offsetCanvasY;\n        let width, height;\n        if (rotateA === 0) {\n          offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n          offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n          width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n          height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n        } else {\n          offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n          offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n          width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n          height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n        }\n        this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n        this.width = width;\n        this.height = height;\n      }\n      clone({\n        scale = this.scale,\n        rotation = this.rotation,\n        offsetX = this.offsetX,\n        offsetY = this.offsetY,\n        dontFlip = false\n      } = {}) {\n        return new PageViewport({\n          viewBox: this.viewBox.slice(),\n          scale,\n          rotation,\n          offsetX,\n          offsetY,\n          dontFlip\n        });\n      }\n      convertToViewportPoint(x, y) {\n        return _util.Util.applyTransform([x, y], this.transform);\n      }\n      convertToViewportRectangle(rect) {\n        const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n        const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n        return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n      }\n      convertToPdfPoint(x, y) {\n        return _util.Util.applyInverseTransform([x, y], this.transform);\n      }\n    }\n    exports.PageViewport = PageViewport;\n    class RenderingCancelledException extends _util.BaseException {\n      constructor(msg, type) {\n        super(msg);\n        this.type = type;\n      }\n    }\n    exports.RenderingCancelledException = RenderingCancelledException;\n    const LinkTarget = {\n      NONE: 0,\n      SELF: 1,\n      BLANK: 2,\n      PARENT: 3,\n      TOP: 4\n    };\n    exports.LinkTarget = LinkTarget;\n    function addLinkAttributes(link, {\n      url,\n      target,\n      rel,\n      enabled = true\n    } = {}) {\n      (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n      const urlNullRemoved = (0, _util.removeNullCharacters)(url);\n      if (enabled) {\n        link.href = link.title = urlNullRemoved;\n      } else {\n        link.href = \"\";\n        link.title = `Disabled: ${urlNullRemoved}`;\n        link.onclick = () => {\n          return false;\n        };\n      }\n      let targetStr = \"\";\n      switch (target) {\n        case LinkTarget.NONE:\n          break;\n        case LinkTarget.SELF:\n          targetStr = \"_self\";\n          break;\n        case LinkTarget.BLANK:\n          targetStr = \"_blank\";\n          break;\n        case LinkTarget.PARENT:\n          targetStr = \"_parent\";\n          break;\n        case LinkTarget.TOP:\n          targetStr = \"_top\";\n          break;\n      }\n      link.target = targetStr;\n      link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n    }\n    function getFilenameFromUrl(url) {\n      const anchor = url.indexOf(\"#\");\n      const query = url.indexOf(\"?\");\n      const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n      return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n    }\n    class StatTimer {\n      constructor() {\n        this.started = Object.create(null);\n        this.times = [];\n      }\n      time(name) {\n        if (name in this.started) {\n          (0, _util.warn)(`Timer is already running for ${name}`);\n        }\n        this.started[name] = Date.now();\n      }\n      timeEnd(name) {\n        if (!(name in this.started)) {\n          (0, _util.warn)(`Timer has not been started for ${name}`);\n        }\n        this.times.push({\n          name,\n          start: this.started[name],\n          end: Date.now()\n        });\n        delete this.started[name];\n      }\n      toString() {\n        const outBuf = [];\n        let longest = 0;\n        for (const time of this.times) {\n          const name = time.name;\n          if (name.length > longest) {\n            longest = name.length;\n          }\n        }\n        for (const time of this.times) {\n          const duration = time.end - time.start;\n          outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n        }\n        return outBuf.join(\"\");\n      }\n    }\n    exports.StatTimer = StatTimer;\n    function isFetchSupported() {\n      return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n    }\n    function isValidFetchUrl(url, baseUrl) {\n      try {\n        const {\n          protocol\n        } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n        return protocol === \"http:\" || protocol === \"https:\";\n      } catch (ex) {\n        return false;\n      }\n    }\n    function loadScript(src) {\n      return new Promise((resolve, reject) => {\n        const script = document.createElement(\"script\");\n        script.src = src;\n        script.onload = resolve;\n        script.onerror = function () {\n          reject(new Error(`Cannot load script at: ${script.src}`));\n        };\n        (document.head || document.documentElement).appendChild(script);\n      });\n    }\n    function deprecated(details) {\n      console.log(\"Deprecated API usage: \" + details);\n    }\n    function releaseImageResources(img) {\n      (0, _util.assert)(img instanceof Image, \"Invalid `img` parameter.\");\n      const url = img.src;\n      if (typeof url === \"string\" && url.startsWith(\"blob:\") && URL.revokeObjectURL) {\n        URL.revokeObjectURL(url);\n      }\n      img.removeAttribute(\"src\");\n    }\n    let pdfDateStringRegex;\n    class PDFDateString {\n      static toDateObject(input) {\n        if (!input || !(0, _util.isString)(input)) {\n          return null;\n        }\n        if (!pdfDateStringRegex) {\n          pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n        }\n        const matches = pdfDateStringRegex.exec(input);\n        if (!matches) {\n          return null;\n        }\n        const year = parseInt(matches[1], 10);\n        let month = parseInt(matches[2], 10);\n        month = month >= 1 && month <= 12 ? month - 1 : 0;\n        let day = parseInt(matches[3], 10);\n        day = day >= 1 && day <= 31 ? day : 1;\n        let hour = parseInt(matches[4], 10);\n        hour = hour >= 0 && hour <= 23 ? hour : 0;\n        let minute = parseInt(matches[5], 10);\n        minute = minute >= 0 && minute <= 59 ? minute : 0;\n        let second = parseInt(matches[6], 10);\n        second = second >= 0 && second <= 59 ? second : 0;\n        const universalTimeRelation = matches[7] || \"Z\";\n        let offsetHour = parseInt(matches[8], 10);\n        offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n        let offsetMinute = parseInt(matches[9], 10) || 0;\n        offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n        if (universalTimeRelation === \"-\") {\n          hour += offsetHour;\n          minute += offsetMinute;\n        } else if (universalTimeRelation === \"+\") {\n          hour -= offsetHour;\n          minute -= offsetMinute;\n        }\n        return new Date(Date.UTC(year, month, day, hour, minute, second));\n      }\n    }\n    exports.PDFDateString = PDFDateString;\n\n    /***/\n  }), ( /* 5 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.FontLoader = exports.FontFaceObject = void 0;\n    var _util = __w_pdfjs_require__(1);\n    class BaseFontLoader {\n      constructor({\n        docId,\n        onUnsupportedFeature\n      }) {\n        if (this.constructor === BaseFontLoader) {\n          (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n        }\n        this.docId = docId;\n        this._onUnsupportedFeature = onUnsupportedFeature;\n        this.nativeFontFaces = [];\n        this.styleElement = null;\n      }\n      addNativeFontFace(nativeFontFace) {\n        this.nativeFontFaces.push(nativeFontFace);\n        document.fonts.add(nativeFontFace);\n      }\n      insertRule(rule) {\n        let styleElement = this.styleElement;\n        if (!styleElement) {\n          styleElement = this.styleElement = document.createElement(\"style\");\n          styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n          document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n        }\n        const styleSheet = styleElement.sheet;\n        styleSheet.insertRule(rule, styleSheet.cssRules.length);\n      }\n      clear() {\n        this.nativeFontFaces.forEach(function (nativeFontFace) {\n          document.fonts.delete(nativeFontFace);\n        });\n        this.nativeFontFaces.length = 0;\n        if (this.styleElement) {\n          this.styleElement.remove();\n          this.styleElement = null;\n        }\n      }\n      async bind(font) {\n        if (font.attached || font.missingFile) {\n          return;\n        }\n        font.attached = true;\n        if (this.isFontLoadingAPISupported) {\n          const nativeFontFace = font.createNativeFontFace();\n          if (nativeFontFace) {\n            this.addNativeFontFace(nativeFontFace);\n            try {\n              await nativeFontFace.loaded;\n            } catch (ex) {\n              this._onUnsupportedFeature({\n                featureId: _util.UNSUPPORTED_FEATURES.font\n              });\n              (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n              font.disableFontFace = true;\n              throw ex;\n            }\n          }\n          return;\n        }\n        const rule = font.createFontFaceRule();\n        if (rule) {\n          this.insertRule(rule);\n          if (this.isSyncFontLoadingSupported) {\n            return;\n          }\n          await new Promise(resolve => {\n            const request = this._queueLoadingCallback(resolve);\n            this._prepareFontLoadEvent([rule], [font], request);\n          });\n        }\n      }\n      _queueLoadingCallback(callback) {\n        (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n      }\n      get isFontLoadingAPISupported() {\n        const supported = typeof document !== \"undefined\" && !!document.fonts;\n        return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", supported);\n      }\n      get isSyncFontLoadingSupported() {\n        (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n      }\n      get _loadTestFont() {\n        (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n      }\n      _prepareFontLoadEvent(rules, fontsToLoad, request) {\n        (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n      }\n    }\n    let FontLoader;\n    exports.FontLoader = FontLoader;\n    {\n      exports.FontLoader = FontLoader = class GenericFontLoader extends BaseFontLoader {\n        constructor(docId) {\n          super(docId);\n          this.loadingContext = {\n            requests: [],\n            nextRequestId: 0\n          };\n          this.loadTestFontId = 0;\n        }\n        get isSyncFontLoadingSupported() {\n          let supported = false;\n          if (typeof navigator === \"undefined\") {\n            supported = true;\n          } else {\n            const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n            if (m && m[1] >= 14) {\n              supported = true;\n            }\n          }\n          return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n        }\n        _queueLoadingCallback(callback) {\n          function completeRequest() {\n            (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n            request.done = true;\n            while (context.requests.length > 0 && context.requests[0].done) {\n              const otherRequest = context.requests.shift();\n              setTimeout(otherRequest.callback, 0);\n            }\n          }\n          const context = this.loadingContext;\n          const request = {\n            id: `pdfjs-font-loading-${context.nextRequestId++}`,\n            done: false,\n            complete: completeRequest,\n            callback\n          };\n          context.requests.push(request);\n          return request;\n        }\n        get _loadTestFont() {\n          const getLoadTestFont = function () {\n            return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n          };\n          return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n        }\n        _prepareFontLoadEvent(rules, fonts, request) {\n          function int32(data, offset) {\n            return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n          }\n          function spliceString(s, offset, remove, insert) {\n            const chunk1 = s.substring(0, offset);\n            const chunk2 = s.substring(offset + remove);\n            return chunk1 + insert + chunk2;\n          }\n          let i, ii;\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = 1;\n          canvas.height = 1;\n          const ctx = canvas.getContext(\"2d\");\n          let called = 0;\n          function isFontReady(name, callback) {\n            called++;\n            if (called > 30) {\n              (0, _util.warn)(\"Load test font never loaded.\");\n              callback();\n              return;\n            }\n            ctx.font = \"30px \" + name;\n            ctx.fillText(\".\", 0, 20);\n            const imageData = ctx.getImageData(0, 0, 1, 1);\n            if (imageData.data[3] > 0) {\n              callback();\n              return;\n            }\n            setTimeout(isFontReady.bind(null, name, callback));\n          }\n          const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n          let data = this._loadTestFont;\n          const COMMENT_OFFSET = 976;\n          data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n          const CFF_CHECKSUM_OFFSET = 16;\n          const XXXX_VALUE = 0x58585858;\n          let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n          for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n            checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n          }\n          if (i < loadTestFontId.length) {\n            checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n          }\n          data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n          const url = `url(data:font/opentype;base64,${btoa(data)});`;\n          const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n          this.insertRule(rule);\n          const names = [];\n          for (i = 0, ii = fonts.length; i < ii; i++) {\n            names.push(fonts[i].loadedName);\n          }\n          names.push(loadTestFontId);\n          const div = document.createElement(\"div\");\n          div.style.visibility = \"hidden\";\n          div.style.width = div.style.height = \"10px\";\n          div.style.position = \"absolute\";\n          div.style.top = div.style.left = \"0px\";\n          for (i = 0, ii = names.length; i < ii; ++i) {\n            const span = document.createElement(\"span\");\n            span.textContent = \"Hi\";\n            span.style.fontFamily = names[i];\n            div.appendChild(span);\n          }\n          document.body.appendChild(div);\n          isFontReady(loadTestFontId, function () {\n            document.body.removeChild(div);\n            request.complete();\n          });\n        }\n      };\n    }\n    class FontFaceObject {\n      constructor(translatedData, {\n        isEvalSupported = true,\n        disableFontFace = false,\n        ignoreErrors = false,\n        onUnsupportedFeature = null,\n        fontRegistry = null\n      }) {\n        this.compiledGlyphs = Object.create(null);\n        for (const i in translatedData) {\n          this[i] = translatedData[i];\n        }\n        this.isEvalSupported = isEvalSupported !== false;\n        this.disableFontFace = disableFontFace === true;\n        this.ignoreErrors = ignoreErrors === true;\n        this._onUnsupportedFeature = onUnsupportedFeature;\n        this.fontRegistry = fontRegistry;\n      }\n      createNativeFontFace() {\n        if (!this.data || this.disableFontFace) {\n          return null;\n        }\n        const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n        if (this.fontRegistry) {\n          this.fontRegistry.registerFont(this);\n        }\n        return nativeFontFace;\n      }\n      createFontFaceRule() {\n        if (!this.data || this.disableFontFace) {\n          return null;\n        }\n        const data = (0, _util.bytesToString)(new Uint8Array(this.data));\n        const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n        const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n        if (this.fontRegistry) {\n          this.fontRegistry.registerFont(this, url);\n        }\n        return rule;\n      }\n      getPathGenerator(objs, character) {\n        if (this.compiledGlyphs[character] !== undefined) {\n          return this.compiledGlyphs[character];\n        }\n        let cmds, current;\n        try {\n          cmds = objs.get(this.loadedName + \"_path_\" + character);\n        } catch (ex) {\n          if (!this.ignoreErrors) {\n            throw ex;\n          }\n          if (this._onUnsupportedFeature) {\n            this._onUnsupportedFeature({\n              featureId: _util.UNSUPPORTED_FEATURES.font\n            });\n          }\n          (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n          return this.compiledGlyphs[character] = function (c, size) {};\n        }\n        if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n          let args,\n            js = \"\";\n          for (let i = 0, ii = cmds.length; i < ii; i++) {\n            current = cmds[i];\n            if (current.args !== undefined) {\n              args = current.args.join(\",\");\n            } else {\n              args = \"\";\n            }\n            js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n          }\n          return this.compiledGlyphs[character] = new Function(\"c\", \"size\", js);\n        }\n        return this.compiledGlyphs[character] = function (c, size) {\n          for (let i = 0, ii = cmds.length; i < ii; i++) {\n            current = cmds[i];\n            if (current.cmd === \"scale\") {\n              current.args = [size, -size];\n            }\n            c[current.cmd].apply(c, current.args);\n          }\n        };\n      }\n    }\n    exports.FontFaceObject = FontFaceObject;\n\n    /***/\n  }), ( /* 6 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    const compatibilityParams = Object.create(null);\n    {\n      const {\n        isNodeJS\n      } = __w_pdfjs_require__(7);\n      const userAgent = typeof navigator !== \"undefined\" && navigator.userAgent || \"\";\n      const isIE = /Trident/.test(userAgent);\n      const isIOSChrome = /CriOS/.test(userAgent);\n      (function checkOnBlobSupport() {\n        if (isIE || isIOSChrome) {\n          compatibilityParams.disableCreateObjectURL = true;\n        }\n      })();\n      (function checkFontFaceAndImage() {\n        if (isNodeJS) {\n          compatibilityParams.disableFontFace = true;\n          compatibilityParams.nativeImageDecoderSupport = \"none\";\n        }\n      })();\n    }\n    exports.apiCompatibilityParams = Object.freeze(compatibilityParams);\n\n    /***/\n  }), ( /* 7 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.isNodeJS = void 0;\n    const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions[\"nw\"] && !process.versions[\"electron\"];\n    exports.isNodeJS = isNodeJS;\n\n    /***/\n  }), ( /* 8 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.CanvasGraphics = void 0;\n    var _util = __w_pdfjs_require__(1);\n    var _pattern_helper = __w_pdfjs_require__(9);\n    var MIN_FONT_SIZE = 16;\n    var MAX_FONT_SIZE = 100;\n    var MAX_GROUP_SIZE = 4096;\n    var MIN_WIDTH_FACTOR = 0.65;\n    var COMPILE_TYPE3_GLYPHS = true;\n    var MAX_SIZE_TO_COMPILE = 1000;\n    var FULL_CHUNK_HEIGHT = 16;\n    function addContextCurrentTransform(ctx) {\n      if (!ctx.mozCurrentTransform) {\n        ctx._originalSave = ctx.save;\n        ctx._originalRestore = ctx.restore;\n        ctx._originalRotate = ctx.rotate;\n        ctx._originalScale = ctx.scale;\n        ctx._originalTranslate = ctx.translate;\n        ctx._originalTransform = ctx.transform;\n        ctx._originalSetTransform = ctx.setTransform;\n        ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n        ctx._transformStack = [];\n        Object.defineProperty(ctx, \"mozCurrentTransform\", {\n          get: function getCurrentTransform() {\n            return this._transformMatrix;\n          }\n        });\n        Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n          get: function getCurrentTransformInverse() {\n            var m = this._transformMatrix;\n            var a = m[0],\n              b = m[1],\n              c = m[2],\n              d = m[3],\n              e = m[4],\n              f = m[5];\n            var ad_bc = a * d - b * c;\n            var bc_ad = b * c - a * d;\n            return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n          }\n        });\n        ctx.save = function ctxSave() {\n          var old = this._transformMatrix;\n          this._transformStack.push(old);\n          this._transformMatrix = old.slice(0, 6);\n          this._originalSave();\n        };\n        ctx.restore = function ctxRestore() {\n          var prev = this._transformStack.pop();\n          if (prev) {\n            this._transformMatrix = prev;\n            this._originalRestore();\n          }\n        };\n        ctx.translate = function ctxTranslate(x, y) {\n          var m = this._transformMatrix;\n          m[4] = m[0] * x + m[2] * y + m[4];\n          m[5] = m[1] * x + m[3] * y + m[5];\n          this._originalTranslate(x, y);\n        };\n        ctx.scale = function ctxScale(x, y) {\n          var m = this._transformMatrix;\n          m[0] = m[0] * x;\n          m[1] = m[1] * x;\n          m[2] = m[2] * y;\n          m[3] = m[3] * y;\n          this._originalScale(x, y);\n        };\n        ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n          var m = this._transformMatrix;\n          this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n          ctx._originalTransform(a, b, c, d, e, f);\n        };\n        ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n          this._transformMatrix = [a, b, c, d, e, f];\n          ctx._originalSetTransform(a, b, c, d, e, f);\n        };\n        ctx.rotate = function ctxRotate(angle) {\n          var cosValue = Math.cos(angle);\n          var sinValue = Math.sin(angle);\n          var m = this._transformMatrix;\n          this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n          this._originalRotate(angle);\n        };\n      }\n    }\n    var CachedCanvases = function CachedCanvasesClosure() {\n      function CachedCanvases(canvasFactory) {\n        this.canvasFactory = canvasFactory;\n        this.cache = Object.create(null);\n      }\n      CachedCanvases.prototype = {\n        getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\n          var canvasEntry;\n          if (this.cache[id] !== undefined) {\n            canvasEntry = this.cache[id];\n            this.canvasFactory.reset(canvasEntry, width, height);\n            canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n          } else {\n            canvasEntry = this.canvasFactory.create(width, height);\n            this.cache[id] = canvasEntry;\n          }\n          if (trackTransform) {\n            addContextCurrentTransform(canvasEntry.context);\n          }\n          return canvasEntry;\n        },\n        clear() {\n          for (var id in this.cache) {\n            var canvasEntry = this.cache[id];\n            this.canvasFactory.destroy(canvasEntry);\n            delete this.cache[id];\n          }\n        }\n      };\n      return CachedCanvases;\n    }();\n    function compileType3Glyph(imgData) {\n      var POINT_TO_PROCESS_LIMIT = 1000;\n      var width = imgData.width,\n        height = imgData.height;\n      var i,\n        j,\n        j0,\n        width1 = width + 1;\n      var points = new Uint8Array(width1 * (height + 1));\n      var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n      var lineSize = width + 7 & ~7,\n        data0 = imgData.data;\n      var data = new Uint8Array(lineSize * height),\n        pos = 0,\n        ii;\n      for (i = 0, ii = data0.length; i < ii; i++) {\n        var mask = 128,\n          elem = data0[i];\n        while (mask > 0) {\n          data[pos++] = elem & mask ? 0 : 255;\n          mask >>= 1;\n        }\n      }\n      var count = 0;\n      pos = 0;\n      if (data[pos] !== 0) {\n        points[0] = 1;\n        ++count;\n      }\n      for (j = 1; j < width; j++) {\n        if (data[pos] !== data[pos + 1]) {\n          points[j] = data[pos] ? 2 : 1;\n          ++count;\n        }\n        pos++;\n      }\n      if (data[pos] !== 0) {\n        points[j] = 2;\n        ++count;\n      }\n      for (i = 1; i < height; i++) {\n        pos = i * lineSize;\n        j0 = i * width1;\n        if (data[pos - lineSize] !== data[pos]) {\n          points[j0] = data[pos] ? 1 : 8;\n          ++count;\n        }\n        var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n        for (j = 1; j < width; j++) {\n          sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n          if (POINT_TYPES[sum]) {\n            points[j0 + j] = POINT_TYPES[sum];\n            ++count;\n          }\n          pos++;\n        }\n        if (data[pos - lineSize] !== data[pos]) {\n          points[j0 + j] = data[pos] ? 2 : 4;\n          ++count;\n        }\n        if (count > POINT_TO_PROCESS_LIMIT) {\n          return null;\n        }\n      }\n      pos = lineSize * (height - 1);\n      j0 = i * width1;\n      if (data[pos] !== 0) {\n        points[j0] = 8;\n        ++count;\n      }\n      for (j = 1; j < width; j++) {\n        if (data[pos] !== data[pos + 1]) {\n          points[j0 + j] = data[pos] ? 4 : 8;\n          ++count;\n        }\n        pos++;\n      }\n      if (data[pos] !== 0) {\n        points[j0 + j] = 4;\n        ++count;\n      }\n      if (count > POINT_TO_PROCESS_LIMIT) {\n        return null;\n      }\n      var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n      var outlines = [];\n      for (i = 0; count && i <= height; i++) {\n        var p = i * width1;\n        var end = p + width;\n        while (p < end && !points[p]) {\n          p++;\n        }\n        if (p === end) {\n          continue;\n        }\n        var coords = [p % width1, i];\n        var type = points[p],\n          p0 = p,\n          pp;\n        do {\n          var step = steps[type];\n          do {\n            p += step;\n          } while (!points[p]);\n          pp = points[p];\n          if (pp !== 5 && pp !== 10) {\n            type = pp;\n            points[p] = 0;\n          } else {\n            type = pp & 0x33 * type >> 4;\n            points[p] &= type >> 2 | type << 2;\n          }\n          coords.push(p % width1);\n          coords.push(p / width1 | 0);\n          if (!points[p]) {\n            --count;\n          }\n        } while (p0 !== p);\n        outlines.push(coords);\n        --i;\n      }\n      var drawOutline = function (c) {\n        c.save();\n        c.scale(1 / width, -1 / height);\n        c.translate(0, -height);\n        c.beginPath();\n        for (var i = 0, ii = outlines.length; i < ii; i++) {\n          var o = outlines[i];\n          c.moveTo(o[0], o[1]);\n          for (var j = 2, jj = o.length; j < jj; j += 2) {\n            c.lineTo(o[j], o[j + 1]);\n          }\n        }\n        c.fill();\n        c.beginPath();\n        c.restore();\n      };\n      return drawOutline;\n    }\n    var CanvasExtraState = function CanvasExtraStateClosure() {\n      function CanvasExtraState() {\n        this.alphaIsShape = false;\n        this.fontSize = 0;\n        this.fontSizeScale = 1;\n        this.textMatrix = _util.IDENTITY_MATRIX;\n        this.textMatrixScale = 1;\n        this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n        this.leading = 0;\n        this.x = 0;\n        this.y = 0;\n        this.lineX = 0;\n        this.lineY = 0;\n        this.charSpacing = 0;\n        this.wordSpacing = 0;\n        this.textHScale = 1;\n        this.textRenderingMode = _util.TextRenderingMode.FILL;\n        this.textRise = 0;\n        this.fillColor = \"#000000\";\n        this.strokeColor = \"#000000\";\n        this.patternFill = false;\n        this.fillAlpha = 1;\n        this.strokeAlpha = 1;\n        this.lineWidth = 1;\n        this.activeSMask = null;\n        this.resumeSMaskCtx = null;\n      }\n      CanvasExtraState.prototype = {\n        clone: function CanvasExtraState_clone() {\n          return Object.create(this);\n        },\n        setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n          this.x = x;\n          this.y = y;\n        }\n      };\n      return CanvasExtraState;\n    }();\n    var CanvasGraphics = function CanvasGraphicsClosure() {\n      var EXECUTION_TIME = 15;\n      var EXECUTION_STEPS = 10;\n      function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer) {\n        this.ctx = canvasCtx;\n        this.current = new CanvasExtraState();\n        this.stateStack = [];\n        this.pendingClip = null;\n        this.pendingEOFill = false;\n        this.res = null;\n        this.xobjs = null;\n        this.commonObjs = commonObjs;\n        this.objs = objs;\n        this.canvasFactory = canvasFactory;\n        this.webGLContext = webGLContext;\n        this.imageLayer = imageLayer;\n        this.groupStack = [];\n        this.processingType3 = null;\n        this.baseTransform = null;\n        this.baseTransformStack = [];\n        this.groupLevel = 0;\n        this.smaskStack = [];\n        this.smaskCounter = 0;\n        this.tempSMask = null;\n        this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n        if (canvasCtx) {\n          addContextCurrentTransform(canvasCtx);\n        }\n        this._cachedGetSinglePixelWidth = null;\n      }\n      function putBinaryImageData(ctx, imgData) {\n        if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n          ctx.putImageData(imgData, 0, 0);\n          return;\n        }\n        var height = imgData.height,\n          width = imgData.width;\n        var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n        var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n        var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n        var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n        var srcPos = 0,\n          destPos;\n        var src = imgData.data;\n        var dest = chunkImgData.data;\n        var i, j, thisChunkHeight, elemsInThisChunk;\n        if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n          var srcLength = src.byteLength;\n          var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n          var dest32DataLength = dest32.length;\n          var fullSrcDiff = width + 7 >> 3;\n          var white = 0xffffffff;\n          var black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n          for (i = 0; i < totalChunks; i++) {\n            thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            destPos = 0;\n            for (j = 0; j < thisChunkHeight; j++) {\n              var srcDiff = srcLength - srcPos;\n              var k = 0;\n              var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n              var kEndUnrolled = kEnd & ~7;\n              var mask = 0;\n              var srcByte = 0;\n              for (; k < kEndUnrolled; k += 8) {\n                srcByte = src[srcPos++];\n                dest32[destPos++] = srcByte & 128 ? white : black;\n                dest32[destPos++] = srcByte & 64 ? white : black;\n                dest32[destPos++] = srcByte & 32 ? white : black;\n                dest32[destPos++] = srcByte & 16 ? white : black;\n                dest32[destPos++] = srcByte & 8 ? white : black;\n                dest32[destPos++] = srcByte & 4 ? white : black;\n                dest32[destPos++] = srcByte & 2 ? white : black;\n                dest32[destPos++] = srcByte & 1 ? white : black;\n              }\n              for (; k < kEnd; k++) {\n                if (mask === 0) {\n                  srcByte = src[srcPos++];\n                  mask = 128;\n                }\n                dest32[destPos++] = srcByte & mask ? white : black;\n                mask >>= 1;\n              }\n            }\n            while (destPos < dest32DataLength) {\n              dest32[destPos++] = 0;\n            }\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n          j = 0;\n          elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n          for (i = 0; i < fullChunks; i++) {\n            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n            srcPos += elemsInThisChunk;\n            ctx.putImageData(chunkImgData, 0, j);\n            j += FULL_CHUNK_HEIGHT;\n          }\n          if (i < totalChunks) {\n            elemsInThisChunk = width * partialChunkHeight * 4;\n            dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n            ctx.putImageData(chunkImgData, 0, j);\n          }\n        } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n          thisChunkHeight = FULL_CHUNK_HEIGHT;\n          elemsInThisChunk = width * thisChunkHeight;\n          for (i = 0; i < totalChunks; i++) {\n            if (i >= fullChunks) {\n              thisChunkHeight = partialChunkHeight;\n              elemsInThisChunk = width * thisChunkHeight;\n            }\n            destPos = 0;\n            for (j = elemsInThisChunk; j--;) {\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = src[srcPos++];\n              dest[destPos++] = 255;\n            }\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        } else {\n          throw new Error(`bad image kind: ${imgData.kind}`);\n        }\n      }\n      function putBinaryImageMask(ctx, imgData) {\n        var height = imgData.height,\n          width = imgData.width;\n        var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n        var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n        var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n        var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n        var srcPos = 0;\n        var src = imgData.data;\n        var dest = chunkImgData.data;\n        for (var i = 0; i < totalChunks; i++) {\n          var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n          var destPos = 3;\n          for (var j = 0; j < thisChunkHeight; j++) {\n            var mask = 0;\n            for (var k = 0; k < width; k++) {\n              if (!mask) {\n                var elem = src[srcPos++];\n                mask = 128;\n              }\n              dest[destPos] = elem & mask ? 0 : 255;\n              destPos += 4;\n              mask >>= 1;\n            }\n          }\n          ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n        }\n      }\n      function copyCtxState(sourceCtx, destCtx) {\n        var properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n        for (var i = 0, ii = properties.length; i < ii; i++) {\n          var property = properties[i];\n          if (sourceCtx[property] !== undefined) {\n            destCtx[property] = sourceCtx[property];\n          }\n        }\n        if (sourceCtx.setLineDash !== undefined) {\n          destCtx.setLineDash(sourceCtx.getLineDash());\n          destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n        }\n      }\n      function resetCtxToDefault(ctx) {\n        ctx.strokeStyle = \"#000000\";\n        ctx.fillStyle = \"#000000\";\n        ctx.fillRule = \"nonzero\";\n        ctx.globalAlpha = 1;\n        ctx.lineWidth = 1;\n        ctx.lineCap = \"butt\";\n        ctx.lineJoin = \"miter\";\n        ctx.miterLimit = 10;\n        ctx.globalCompositeOperation = \"source-over\";\n        ctx.font = \"10px sans-serif\";\n        if (ctx.setLineDash !== undefined) {\n          ctx.setLineDash([]);\n          ctx.lineDashOffset = 0;\n        }\n      }\n      function composeSMaskBackdrop(bytes, r0, g0, b0) {\n        var length = bytes.length;\n        for (var i = 3; i < length; i += 4) {\n          var alpha = bytes[i];\n          if (alpha === 0) {\n            bytes[i - 3] = r0;\n            bytes[i - 2] = g0;\n            bytes[i - 1] = b0;\n          } else if (alpha < 255) {\n            var alpha_ = 255 - alpha;\n            bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n            bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n            bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n          }\n        }\n      }\n      function composeSMaskAlpha(maskData, layerData, transferMap) {\n        var length = maskData.length;\n        var scale = 1 / 255;\n        for (var i = 3; i < length; i += 4) {\n          var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n          layerData[i] = layerData[i] * alpha * scale | 0;\n        }\n      }\n      function composeSMaskLuminosity(maskData, layerData, transferMap) {\n        var length = maskData.length;\n        for (var i = 3; i < length; i += 4) {\n          var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n          layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n        }\n      }\n      function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n        var hasBackdrop = !!backdrop;\n        var r0 = hasBackdrop ? backdrop[0] : 0;\n        var g0 = hasBackdrop ? backdrop[1] : 0;\n        var b0 = hasBackdrop ? backdrop[2] : 0;\n        var composeFn;\n        if (subtype === \"Luminosity\") {\n          composeFn = composeSMaskLuminosity;\n        } else {\n          composeFn = composeSMaskAlpha;\n        }\n        var PIXELS_TO_PROCESS = 1048576;\n        var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n        for (var row = 0; row < height; row += chunkSize) {\n          var chunkHeight = Math.min(chunkSize, height - row);\n          var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n          var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n          if (hasBackdrop) {\n            composeSMaskBackdrop(maskData.data, r0, g0, b0);\n          }\n          composeFn(maskData.data, layerData.data, transferMap);\n          maskCtx.putImageData(layerData, 0, row);\n        }\n      }\n      function composeSMask(ctx, smask, layerCtx, webGLContext) {\n        var mask = smask.canvas;\n        var maskCtx = smask.context;\n        ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n        var backdrop = smask.backdrop || null;\n        if (!smask.transferMap && webGLContext.isEnabled) {\n          const composed = webGLContext.composeSMask({\n            layer: layerCtx.canvas,\n            mask,\n            properties: {\n              subtype: smask.subtype,\n              backdrop\n            }\n          });\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n          return;\n        }\n        genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\n        ctx.drawImage(mask, 0, 0);\n      }\n      var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n      var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n      var NORMAL_CLIP = {};\n      var EO_CLIP = {};\n      CanvasGraphics.prototype = {\n        beginDrawing({\n          transform,\n          viewport,\n          transparency = false,\n          background = null\n        }) {\n          var width = this.ctx.canvas.width;\n          var height = this.ctx.canvas.height;\n          this.ctx.save();\n          this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n          this.ctx.fillRect(0, 0, width, height);\n          this.ctx.restore();\n          if (transparency) {\n            var transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n            this.compositeCtx = this.ctx;\n            this.transparentCanvas = transparentCanvas.canvas;\n            this.ctx = transparentCanvas.context;\n            this.ctx.save();\n            this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n          }\n          this.ctx.save();\n          resetCtxToDefault(this.ctx);\n          if (transform) {\n            this.ctx.transform.apply(this.ctx, transform);\n          }\n          this.ctx.transform.apply(this.ctx, viewport.transform);\n          this.baseTransform = this.ctx.mozCurrentTransform.slice();\n          if (this.imageLayer) {\n            this.imageLayer.beginLayout();\n          }\n        },\n        executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n          var argsArray = operatorList.argsArray;\n          var fnArray = operatorList.fnArray;\n          var i = executionStartIdx || 0;\n          var argsArrayLen = argsArray.length;\n          if (argsArrayLen === i) {\n            return i;\n          }\n          var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n          var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n          var steps = 0;\n          var commonObjs = this.commonObjs;\n          var objs = this.objs;\n          var fnId;\n          while (true) {\n            if (stepper !== undefined && i === stepper.nextBreakPoint) {\n              stepper.breakIt(i, continueCallback);\n              return i;\n            }\n            fnId = fnArray[i];\n            if (fnId !== _util.OPS.dependency) {\n              this[fnId].apply(this, argsArray[i]);\n            } else {\n              for (const depObjId of argsArray[i]) {\n                const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n                if (!objsPool.has(depObjId)) {\n                  objsPool.get(depObjId, continueCallback);\n                  return i;\n                }\n              }\n            }\n            i++;\n            if (i === argsArrayLen) {\n              return i;\n            }\n            if (chunkOperations && ++steps > EXECUTION_STEPS) {\n              if (Date.now() > endTime) {\n                continueCallback();\n                return i;\n              }\n              steps = 0;\n            }\n          }\n        },\n        endDrawing: function CanvasGraphics_endDrawing() {\n          if (this.current.activeSMask !== null) {\n            this.endSMaskGroup();\n          }\n          this.ctx.restore();\n          if (this.transparentCanvas) {\n            this.ctx = this.compositeCtx;\n            this.ctx.save();\n            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n            this.ctx.drawImage(this.transparentCanvas, 0, 0);\n            this.ctx.restore();\n            this.transparentCanvas = null;\n          }\n          this.cachedCanvases.clear();\n          this.webGLContext.clear();\n          if (this.imageLayer) {\n            this.imageLayer.endLayout();\n          }\n        },\n        setLineWidth: function CanvasGraphics_setLineWidth(width) {\n          this.current.lineWidth = width;\n          this.ctx.lineWidth = width;\n        },\n        setLineCap: function CanvasGraphics_setLineCap(style) {\n          this.ctx.lineCap = LINE_CAP_STYLES[style];\n        },\n        setLineJoin: function CanvasGraphics_setLineJoin(style) {\n          this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n        },\n        setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n          this.ctx.miterLimit = limit;\n        },\n        setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n          var ctx = this.ctx;\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash(dashArray);\n            ctx.lineDashOffset = dashPhase;\n          }\n        },\n        setRenderingIntent(intent) {},\n        setFlatness(flatness) {},\n        setGState: function CanvasGraphics_setGState(states) {\n          for (var i = 0, ii = states.length; i < ii; i++) {\n            var state = states[i];\n            var key = state[0];\n            var value = state[1];\n            switch (key) {\n              case \"LW\":\n                this.setLineWidth(value);\n                break;\n              case \"LC\":\n                this.setLineCap(value);\n                break;\n              case \"LJ\":\n                this.setLineJoin(value);\n                break;\n              case \"ML\":\n                this.setMiterLimit(value);\n                break;\n              case \"D\":\n                this.setDash(value[0], value[1]);\n                break;\n              case \"RI\":\n                this.setRenderingIntent(value);\n                break;\n              case \"FL\":\n                this.setFlatness(value);\n                break;\n              case \"Font\":\n                this.setFont(value[0], value[1]);\n                break;\n              case \"CA\":\n                this.current.strokeAlpha = state[1];\n                break;\n              case \"ca\":\n                this.current.fillAlpha = state[1];\n                this.ctx.globalAlpha = state[1];\n                break;\n              case \"BM\":\n                this.ctx.globalCompositeOperation = value;\n                break;\n              case \"SMask\":\n                if (this.current.activeSMask) {\n                  if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                    this.suspendSMaskGroup();\n                  } else {\n                    this.endSMaskGroup();\n                  }\n                }\n                this.current.activeSMask = value ? this.tempSMask : null;\n                if (this.current.activeSMask) {\n                  this.beginSMaskGroup();\n                }\n                this.tempSMask = null;\n                break;\n            }\n          }\n        },\n        beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n          var activeSMask = this.current.activeSMask;\n          var drawnWidth = activeSMask.canvas.width;\n          var drawnHeight = activeSMask.canvas.height;\n          var cacheId = \"smaskGroupAt\" + this.groupLevel;\n          var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n          var currentCtx = this.ctx;\n          var currentTransform = currentCtx.mozCurrentTransform;\n          this.ctx.save();\n          var groupCtx = scratchCanvas.context;\n          groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n          groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n          groupCtx.transform.apply(groupCtx, currentTransform);\n          activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n          copyCtxState(currentCtx, groupCtx);\n          this.ctx = groupCtx;\n          this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n          this.groupStack.push(currentCtx);\n          this.groupLevel++;\n        },\n        suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n          var groupCtx = this.ctx;\n          this.groupLevel--;\n          this.ctx = this.groupStack.pop();\n          composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n          this.ctx.restore();\n          this.ctx.save();\n          copyCtxState(groupCtx, this.ctx);\n          this.current.resumeSMaskCtx = groupCtx;\n          var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n          this.ctx.transform.apply(this.ctx, deltaTransform);\n          groupCtx.save();\n          groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n          groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n          groupCtx.restore();\n        },\n        resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n          var groupCtx = this.current.resumeSMaskCtx;\n          var currentCtx = this.ctx;\n          this.ctx = groupCtx;\n          this.groupStack.push(currentCtx);\n          this.groupLevel++;\n        },\n        endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n          var groupCtx = this.ctx;\n          this.groupLevel--;\n          this.ctx = this.groupStack.pop();\n          composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n          this.ctx.restore();\n          copyCtxState(groupCtx, this.ctx);\n          var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n          this.ctx.transform.apply(this.ctx, deltaTransform);\n        },\n        save: function CanvasGraphics_save() {\n          this.ctx.save();\n          var old = this.current;\n          this.stateStack.push(old);\n          this.current = old.clone();\n          this.current.resumeSMaskCtx = null;\n        },\n        restore: function CanvasGraphics_restore() {\n          if (this.current.resumeSMaskCtx) {\n            this.resumeSMaskGroup();\n          }\n          if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n            this.endSMaskGroup();\n          }\n          if (this.stateStack.length !== 0) {\n            this.current = this.stateStack.pop();\n            this.ctx.restore();\n            this.pendingClip = null;\n            this._cachedGetSinglePixelWidth = null;\n          }\n        },\n        transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n          this.ctx.transform(a, b, c, d, e, f);\n          this._cachedGetSinglePixelWidth = null;\n        },\n        constructPath: function CanvasGraphics_constructPath(ops, args) {\n          var ctx = this.ctx;\n          var current = this.current;\n          var x = current.x,\n            y = current.y;\n          for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n            switch (ops[i] | 0) {\n              case _util.OPS.rectangle:\n                x = args[j++];\n                y = args[j++];\n                var width = args[j++];\n                var height = args[j++];\n                if (width === 0) {\n                  width = this.getSinglePixelWidth();\n                }\n                if (height === 0) {\n                  height = this.getSinglePixelWidth();\n                }\n                var xw = x + width;\n                var yh = y + height;\n                this.ctx.moveTo(x, y);\n                this.ctx.lineTo(xw, y);\n                this.ctx.lineTo(xw, yh);\n                this.ctx.lineTo(x, yh);\n                this.ctx.lineTo(x, y);\n                this.ctx.closePath();\n                break;\n              case _util.OPS.moveTo:\n                x = args[j++];\n                y = args[j++];\n                ctx.moveTo(x, y);\n                break;\n              case _util.OPS.lineTo:\n                x = args[j++];\n                y = args[j++];\n                ctx.lineTo(x, y);\n                break;\n              case _util.OPS.curveTo:\n                x = args[j + 4];\n                y = args[j + 5];\n                ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                j += 6;\n                break;\n              case _util.OPS.curveTo2:\n                ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                x = args[j + 2];\n                y = args[j + 3];\n                j += 4;\n                break;\n              case _util.OPS.curveTo3:\n                x = args[j + 2];\n                y = args[j + 3];\n                ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                j += 4;\n                break;\n              case _util.OPS.closePath:\n                ctx.closePath();\n                break;\n            }\n          }\n          current.setCurrentPoint(x, y);\n        },\n        closePath: function CanvasGraphics_closePath() {\n          this.ctx.closePath();\n        },\n        stroke: function CanvasGraphics_stroke(consumePath) {\n          consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n          var ctx = this.ctx;\n          var strokeColor = this.current.strokeColor;\n          ctx.globalAlpha = this.current.strokeAlpha;\n          if (strokeColor && strokeColor.hasOwnProperty(\"type\") && strokeColor.type === \"Pattern\") {\n            ctx.save();\n            const transform = ctx.mozCurrentTransform;\n            const scale = _util.Util.singularValueDecompose2dScale(transform)[0];\n            ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n            ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth * scale);\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth);\n            ctx.stroke();\n          }\n          if (consumePath) {\n            this.consumePath();\n          }\n          ctx.globalAlpha = this.current.fillAlpha;\n        },\n        closeStroke: function CanvasGraphics_closeStroke() {\n          this.closePath();\n          this.stroke();\n        },\n        fill: function CanvasGraphics_fill(consumePath) {\n          consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n          var ctx = this.ctx;\n          var fillColor = this.current.fillColor;\n          var isPatternFill = this.current.patternFill;\n          var needRestore = false;\n          if (isPatternFill) {\n            ctx.save();\n            if (this.baseTransform) {\n              ctx.setTransform.apply(ctx, this.baseTransform);\n            }\n            ctx.fillStyle = fillColor.getPattern(ctx, this);\n            needRestore = true;\n          }\n          if (this.pendingEOFill) {\n            ctx.fill(\"evenodd\");\n            this.pendingEOFill = false;\n          } else {\n            ctx.fill();\n          }\n          if (needRestore) {\n            ctx.restore();\n          }\n          if (consumePath) {\n            this.consumePath();\n          }\n        },\n        eoFill: function CanvasGraphics_eoFill() {\n          this.pendingEOFill = true;\n          this.fill();\n        },\n        fillStroke: function CanvasGraphics_fillStroke() {\n          this.fill(false);\n          this.stroke(false);\n          this.consumePath();\n        },\n        eoFillStroke: function CanvasGraphics_eoFillStroke() {\n          this.pendingEOFill = true;\n          this.fillStroke();\n        },\n        closeFillStroke: function CanvasGraphics_closeFillStroke() {\n          this.closePath();\n          this.fillStroke();\n        },\n        closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n          this.pendingEOFill = true;\n          this.closePath();\n          this.fillStroke();\n        },\n        endPath: function CanvasGraphics_endPath() {\n          this.consumePath();\n        },\n        clip: function CanvasGraphics_clip() {\n          this.pendingClip = NORMAL_CLIP;\n        },\n        eoClip: function CanvasGraphics_eoClip() {\n          this.pendingClip = EO_CLIP;\n        },\n        beginText: function CanvasGraphics_beginText() {\n          this.current.textMatrix = _util.IDENTITY_MATRIX;\n          this.current.textMatrixScale = 1;\n          this.current.x = this.current.lineX = 0;\n          this.current.y = this.current.lineY = 0;\n        },\n        endText: function CanvasGraphics_endText() {\n          var paths = this.pendingTextPaths;\n          var ctx = this.ctx;\n          if (paths === undefined) {\n            ctx.beginPath();\n            return;\n          }\n          ctx.save();\n          ctx.beginPath();\n          for (var i = 0; i < paths.length; i++) {\n            var path = paths[i];\n            ctx.setTransform.apply(ctx, path.transform);\n            ctx.translate(path.x, path.y);\n            path.addToPath(ctx, path.fontSize);\n          }\n          ctx.restore();\n          ctx.clip();\n          ctx.beginPath();\n          delete this.pendingTextPaths;\n        },\n        setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n          this.current.charSpacing = spacing;\n        },\n        setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n          this.current.wordSpacing = spacing;\n        },\n        setHScale: function CanvasGraphics_setHScale(scale) {\n          this.current.textHScale = scale / 100;\n        },\n        setLeading: function CanvasGraphics_setLeading(leading) {\n          this.current.leading = -leading;\n        },\n        setFont: function CanvasGraphics_setFont(fontRefName, size) {\n          var fontObj = this.commonObjs.get(fontRefName);\n          var current = this.current;\n          if (!fontObj) {\n            throw new Error(`Can't find font for ${fontRefName}`);\n          }\n          current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n          if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n            (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n          }\n          if (size < 0) {\n            size = -size;\n            current.fontDirection = -1;\n          } else {\n            current.fontDirection = 1;\n          }\n          this.current.font = fontObj;\n          this.current.fontSize = size;\n          if (fontObj.isType3Font) {\n            return;\n          }\n          var name = fontObj.loadedName || \"sans-serif\";\n          let bold = \"normal\";\n          if (fontObj.black) {\n            bold = \"900\";\n          } else if (fontObj.bold) {\n            bold = \"bold\";\n          }\n          var italic = fontObj.italic ? \"italic\" : \"normal\";\n          var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n          let browserFontSize = size;\n          if (size < MIN_FONT_SIZE) {\n            browserFontSize = MIN_FONT_SIZE;\n          } else if (size > MAX_FONT_SIZE) {\n            browserFontSize = MAX_FONT_SIZE;\n          }\n          this.current.fontSizeScale = size / browserFontSize;\n          this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n        },\n        setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n          this.current.textRenderingMode = mode;\n        },\n        setTextRise: function CanvasGraphics_setTextRise(rise) {\n          this.current.textRise = rise;\n        },\n        moveText: function CanvasGraphics_moveText(x, y) {\n          this.current.x = this.current.lineX += x;\n          this.current.y = this.current.lineY += y;\n        },\n        setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n          this.setLeading(-y);\n          this.moveText(x, y);\n        },\n        setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n          this.current.textMatrix = [a, b, c, d, e, f];\n          this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n          this.current.x = this.current.lineX = 0;\n          this.current.y = this.current.lineY = 0;\n        },\n        nextLine: function CanvasGraphics_nextLine() {\n          this.moveText(0, this.current.leading);\n        },\n        paintChar(character, x, y, patternTransform) {\n          var ctx = this.ctx;\n          var current = this.current;\n          var font = current.font;\n          var textRenderingMode = current.textRenderingMode;\n          var fontSize = current.fontSize / current.fontSizeScale;\n          var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n          var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n          const patternFill = current.patternFill && font.data;\n          var addToPath;\n          if (font.disableFontFace || isAddToPathSet || patternFill) {\n            addToPath = font.getPathGenerator(this.commonObjs, character);\n          }\n          if (font.disableFontFace || patternFill) {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.beginPath();\n            addToPath(ctx, fontSize);\n            if (patternTransform) {\n              ctx.setTransform.apply(ctx, patternTransform);\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.fill();\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.stroke();\n            }\n            ctx.restore();\n          } else {\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.fillText(character, x, y);\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              ctx.strokeText(character, x, y);\n            }\n          }\n          if (isAddToPathSet) {\n            var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n            paths.push({\n              transform: ctx.mozCurrentTransform,\n              x,\n              y,\n              fontSize,\n              addToPath\n            });\n          }\n        },\n        get isFontSubpixelAAEnabled() {\n          const {\n            context: ctx\n          } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n          ctx.scale(1.5, 1);\n          ctx.fillText(\"I\", 0, 10);\n          var data = ctx.getImageData(0, 0, 10, 10).data;\n          var enabled = false;\n          for (var i = 3; i < data.length; i += 4) {\n            if (data[i] > 0 && data[i] < 255) {\n              enabled = true;\n              break;\n            }\n          }\n          return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n        },\n        showText: function CanvasGraphics_showText(glyphs) {\n          var current = this.current;\n          var font = current.font;\n          if (font.isType3Font) {\n            return this.showType3Text(glyphs);\n          }\n          var fontSize = current.fontSize;\n          if (fontSize === 0) {\n            return undefined;\n          }\n          var ctx = this.ctx;\n          var fontSizeScale = current.fontSizeScale;\n          var charSpacing = current.charSpacing;\n          var wordSpacing = current.wordSpacing;\n          var fontDirection = current.fontDirection;\n          var textHScale = current.textHScale * fontDirection;\n          var glyphsLength = glyphs.length;\n          var vertical = font.vertical;\n          var spacingDir = vertical ? 1 : -1;\n          var defaultVMetrics = font.defaultVMetrics;\n          var widthAdvanceScale = fontSize * current.fontMatrix[0];\n          var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n          ctx.save();\n          let patternTransform;\n          if (current.patternFill) {\n            ctx.save();\n            const pattern = current.fillColor.getPattern(ctx, this);\n            patternTransform = ctx.mozCurrentTransform;\n            ctx.restore();\n            ctx.fillStyle = pattern;\n          }\n          ctx.transform.apply(ctx, current.textMatrix);\n          ctx.translate(current.x, current.y + current.textRise);\n          if (fontDirection > 0) {\n            ctx.scale(textHScale, -1);\n          } else {\n            ctx.scale(textHScale, 1);\n          }\n          var lineWidth = current.lineWidth;\n          var scale = current.textMatrixScale;\n          if (scale === 0 || lineWidth === 0) {\n            var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              this._cachedGetSinglePixelWidth = null;\n              lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n            }\n          } else {\n            lineWidth /= scale;\n          }\n          if (fontSizeScale !== 1.0) {\n            ctx.scale(fontSizeScale, fontSizeScale);\n            lineWidth /= fontSizeScale;\n          }\n          ctx.lineWidth = lineWidth;\n          var x = 0,\n            i;\n          for (i = 0; i < glyphsLength; ++i) {\n            var glyph = glyphs[i];\n            if ((0, _util.isNum)(glyph)) {\n              x += spacingDir * glyph * fontSize / 1000;\n              continue;\n            }\n            var restoreNeeded = false;\n            var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n            var character = glyph.fontChar;\n            var accent = glyph.accent;\n            var scaledX, scaledY, scaledAccentX, scaledAccentY;\n            var width = glyph.width;\n            if (vertical) {\n              var vmetric, vx, vy;\n              vmetric = glyph.vmetric || defaultVMetrics;\n              vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n              vx = -vx * widthAdvanceScale;\n              vy = vmetric[2] * widthAdvanceScale;\n              width = vmetric ? -vmetric[0] : width;\n              scaledX = vx / fontSizeScale;\n              scaledY = (x + vy) / fontSizeScale;\n            } else {\n              scaledX = x / fontSizeScale;\n              scaledY = 0;\n            }\n            if (font.remeasure && width > 0) {\n              var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n              if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                var characterScaleX = width / measuredWidth;\n                restoreNeeded = true;\n                ctx.save();\n                ctx.scale(characterScaleX, 1);\n                scaledX /= characterScaleX;\n              } else if (width !== measuredWidth) {\n                scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n              }\n            }\n            if (glyph.isInFont || font.missingFile) {\n              if (simpleFillText && !accent) {\n                ctx.fillText(character, scaledX, scaledY);\n              } else {\n                this.paintChar(character, scaledX, scaledY, patternTransform);\n                if (accent) {\n                  scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n                  scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n                  this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                }\n              }\n            }\n            var charWidth;\n            if (vertical) {\n              charWidth = width * widthAdvanceScale - spacing * fontDirection;\n            } else {\n              charWidth = width * widthAdvanceScale + spacing * fontDirection;\n            }\n            x += charWidth;\n            if (restoreNeeded) {\n              ctx.restore();\n            }\n          }\n          if (vertical) {\n            current.y -= x;\n          } else {\n            current.x += x * textHScale;\n          }\n          ctx.restore();\n        },\n        showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n          var ctx = this.ctx;\n          var current = this.current;\n          var font = current.font;\n          var fontSize = current.fontSize;\n          var fontDirection = current.fontDirection;\n          var spacingDir = font.vertical ? 1 : -1;\n          var charSpacing = current.charSpacing;\n          var wordSpacing = current.wordSpacing;\n          var textHScale = current.textHScale * fontDirection;\n          var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n          var glyphsLength = glyphs.length;\n          var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n          var i, glyph, width, spacingLength;\n          if (isTextInvisible || fontSize === 0) {\n            return;\n          }\n          this._cachedGetSinglePixelWidth = null;\n          ctx.save();\n          ctx.transform.apply(ctx, current.textMatrix);\n          ctx.translate(current.x, current.y);\n          ctx.scale(textHScale, fontDirection);\n          for (i = 0; i < glyphsLength; ++i) {\n            glyph = glyphs[i];\n            if ((0, _util.isNum)(glyph)) {\n              spacingLength = spacingDir * glyph * fontSize / 1000;\n              this.ctx.translate(spacingLength, 0);\n              current.x += spacingLength * textHScale;\n              continue;\n            }\n            var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n            var operatorList = font.charProcOperatorList[glyph.operatorListId];\n            if (!operatorList) {\n              (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n              continue;\n            }\n            this.processingType3 = glyph;\n            this.save();\n            ctx.scale(fontSize, fontSize);\n            ctx.transform.apply(ctx, fontMatrix);\n            this.executeOperatorList(operatorList);\n            this.restore();\n            var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n            width = transformed[0] * fontSize + spacing;\n            ctx.translate(width, 0);\n            current.x += width * textHScale;\n          }\n          ctx.restore();\n          this.processingType3 = null;\n        },\n        setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\n        setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n          this.ctx.rect(llx, lly, urx - llx, ury - lly);\n          this.clip();\n          this.endPath();\n        },\n        getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n          var pattern;\n          if (IR[0] === \"TilingPattern\") {\n            var color = IR[1];\n            var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n            var canvasGraphicsFactory = {\n              createCanvasGraphics: ctx => {\n                return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext);\n              }\n            };\n            pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n          } else {\n            pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\n          }\n          return pattern;\n        },\n        setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n          this.current.strokeColor = this.getColorN_Pattern(arguments);\n        },\n        setFillColorN: function CanvasGraphics_setFillColorN() {\n          this.current.fillColor = this.getColorN_Pattern(arguments);\n          this.current.patternFill = true;\n        },\n        setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n          var color = _util.Util.makeCssRgb(r, g, b);\n          this.ctx.strokeStyle = color;\n          this.current.strokeColor = color;\n        },\n        setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n          var color = _util.Util.makeCssRgb(r, g, b);\n          this.ctx.fillStyle = color;\n          this.current.fillColor = color;\n          this.current.patternFill = false;\n        },\n        shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n          var ctx = this.ctx;\n          this.save();\n          var pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\n          ctx.fillStyle = pattern.getPattern(ctx, this, true);\n          var inv = ctx.mozCurrentTransformInverse;\n          if (inv) {\n            var canvas = ctx.canvas;\n            var width = canvas.width;\n            var height = canvas.height;\n            var bl = _util.Util.applyTransform([0, 0], inv);\n            var br = _util.Util.applyTransform([0, height], inv);\n            var ul = _util.Util.applyTransform([width, 0], inv);\n            var ur = _util.Util.applyTransform([width, height], inv);\n            var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n            var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n            var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n            var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n            this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n          } else {\n            this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n          }\n          this.restore();\n        },\n        beginInlineImage: function CanvasGraphics_beginInlineImage() {\n          (0, _util.unreachable)(\"Should not call beginInlineImage\");\n        },\n        beginImageData: function CanvasGraphics_beginImageData() {\n          (0, _util.unreachable)(\"Should not call beginImageData\");\n        },\n        paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\n          this.save();\n          this.baseTransformStack.push(this.baseTransform);\n          if (Array.isArray(matrix) && matrix.length === 6) {\n            this.transform.apply(this, matrix);\n          }\n          this.baseTransform = this.ctx.mozCurrentTransform;\n          if (bbox) {\n            var width = bbox[2] - bbox[0];\n            var height = bbox[3] - bbox[1];\n            this.ctx.rect(bbox[0], bbox[1], width, height);\n            this.clip();\n            this.endPath();\n          }\n        },\n        paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n          this.restore();\n          this.baseTransform = this.baseTransformStack.pop();\n        },\n        beginGroup: function CanvasGraphics_beginGroup(group) {\n          this.save();\n          var currentCtx = this.ctx;\n          if (!group.isolated) {\n            (0, _util.info)(\"TODO: Support non-isolated groups.\");\n          }\n          if (group.knockout) {\n            (0, _util.warn)(\"Knockout groups not supported.\");\n          }\n          var currentTransform = currentCtx.mozCurrentTransform;\n          if (group.matrix) {\n            currentCtx.transform.apply(currentCtx, group.matrix);\n          }\n          if (!group.bbox) {\n            throw new Error(\"Bounding box is required.\");\n          }\n          var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n          var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n          bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n          var offsetX = Math.floor(bounds[0]);\n          var offsetY = Math.floor(bounds[1]);\n          var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n          var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n          var scaleX = 1,\n            scaleY = 1;\n          if (drawnWidth > MAX_GROUP_SIZE) {\n            scaleX = drawnWidth / MAX_GROUP_SIZE;\n            drawnWidth = MAX_GROUP_SIZE;\n          }\n          if (drawnHeight > MAX_GROUP_SIZE) {\n            scaleY = drawnHeight / MAX_GROUP_SIZE;\n            drawnHeight = MAX_GROUP_SIZE;\n          }\n          var cacheId = \"groupAt\" + this.groupLevel;\n          if (group.smask) {\n            cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n          }\n          var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n          var groupCtx = scratchCanvas.context;\n          groupCtx.scale(1 / scaleX, 1 / scaleY);\n          groupCtx.translate(-offsetX, -offsetY);\n          groupCtx.transform.apply(groupCtx, currentTransform);\n          if (group.smask) {\n            this.smaskStack.push({\n              canvas: scratchCanvas.canvas,\n              context: groupCtx,\n              offsetX,\n              offsetY,\n              scaleX,\n              scaleY,\n              subtype: group.smask.subtype,\n              backdrop: group.smask.backdrop,\n              transferMap: group.smask.transferMap || null,\n              startTransformInverse: null\n            });\n          } else {\n            currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n            currentCtx.translate(offsetX, offsetY);\n            currentCtx.scale(scaleX, scaleY);\n          }\n          copyCtxState(currentCtx, groupCtx);\n          this.ctx = groupCtx;\n          this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n          this.groupStack.push(currentCtx);\n          this.groupLevel++;\n          this.current.activeSMask = null;\n        },\n        endGroup: function CanvasGraphics_endGroup(group) {\n          this.groupLevel--;\n          var groupCtx = this.ctx;\n          this.ctx = this.groupStack.pop();\n          if (this.ctx.imageSmoothingEnabled !== undefined) {\n            this.ctx.imageSmoothingEnabled = false;\n          } else {\n            this.ctx.mozImageSmoothingEnabled = false;\n          }\n          if (group.smask) {\n            this.tempSMask = this.smaskStack.pop();\n          } else {\n            this.ctx.drawImage(groupCtx.canvas, 0, 0);\n          }\n          this.restore();\n        },\n        beginAnnotations: function CanvasGraphics_beginAnnotations() {\n          this.save();\n          if (this.baseTransform) {\n            this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n          }\n        },\n        endAnnotations: function CanvasGraphics_endAnnotations() {\n          this.restore();\n        },\n        beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\n          this.save();\n          resetCtxToDefault(this.ctx);\n          this.current = new CanvasExtraState();\n          if (Array.isArray(rect) && rect.length === 4) {\n            var width = rect[2] - rect[0];\n            var height = rect[3] - rect[1];\n            this.ctx.rect(rect[0], rect[1], width, height);\n            this.clip();\n            this.endPath();\n          }\n          this.transform.apply(this, transform);\n          this.transform.apply(this, matrix);\n        },\n        endAnnotation: function CanvasGraphics_endAnnotation() {\n          this.restore();\n        },\n        paintJpegXObject: function CanvasGraphics_paintJpegXObject(objId, w, h) {\n          const domImage = this.processingType3 ? this.commonObjs.get(objId) : this.objs.get(objId);\n          if (!domImage) {\n            (0, _util.warn)(\"Dependent image isn't ready yet\");\n            return;\n          }\n          this.save();\n          var ctx = this.ctx;\n          ctx.scale(1 / w, -1 / h);\n          ctx.drawImage(domImage, 0, 0, domImage.width, domImage.height, 0, -h, w, h);\n          if (this.imageLayer) {\n            var currentTransform = ctx.mozCurrentTransformInverse;\n            var position = this.getCanvasPosition(0, 0);\n            this.imageLayer.appendImage({\n              objId,\n              left: position[0],\n              top: position[1],\n              width: w / currentTransform[0],\n              height: h / currentTransform[3]\n            });\n          }\n          this.restore();\n        },\n        paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n          var ctx = this.ctx;\n          var width = img.width,\n            height = img.height;\n          var fillColor = this.current.fillColor;\n          var isPatternFill = this.current.patternFill;\n          var glyph = this.processingType3;\n          if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n            if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n              glyph.compiled = compileType3Glyph({\n                data: img.data,\n                width,\n                height\n              });\n            } else {\n              glyph.compiled = null;\n            }\n          }\n          if (glyph && glyph.compiled) {\n            glyph.compiled(ctx);\n            return;\n          }\n          var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n          var maskCtx = maskCanvas.context;\n          maskCtx.save();\n          putBinaryImageMask(maskCtx, img);\n          maskCtx.globalCompositeOperation = \"source-in\";\n          maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n          maskCtx.fillRect(0, 0, width, height);\n          maskCtx.restore();\n          this.paintInlineImageXObject(maskCanvas.canvas);\n        },\n        paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(imgData, scaleX, scaleY, positions) {\n          var width = imgData.width;\n          var height = imgData.height;\n          var fillColor = this.current.fillColor;\n          var isPatternFill = this.current.patternFill;\n          var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n          var maskCtx = maskCanvas.context;\n          maskCtx.save();\n          putBinaryImageMask(maskCtx, imgData);\n          maskCtx.globalCompositeOperation = \"source-in\";\n          maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n          maskCtx.fillRect(0, 0, width, height);\n          maskCtx.restore();\n          var ctx = this.ctx;\n          for (var i = 0, ii = positions.length; i < ii; i += 2) {\n            ctx.save();\n            ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n            ctx.scale(1, -1);\n            ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n            ctx.restore();\n          }\n        },\n        paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n          var ctx = this.ctx;\n          var fillColor = this.current.fillColor;\n          var isPatternFill = this.current.patternFill;\n          for (var i = 0, ii = images.length; i < ii; i++) {\n            var image = images[i];\n            var width = image.width,\n              height = image.height;\n            var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            var maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, image);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            ctx.save();\n            ctx.transform.apply(ctx, image.transform);\n            ctx.scale(1, -1);\n            ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n            ctx.restore();\n          }\n        },\n        paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n          const imgData = this.processingType3 ? this.commonObjs.get(objId) : this.objs.get(objId);\n          if (!imgData) {\n            (0, _util.warn)(\"Dependent image isn't ready yet\");\n            return;\n          }\n          this.paintInlineImageXObject(imgData);\n        },\n        paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n          const imgData = this.processingType3 ? this.commonObjs.get(objId) : this.objs.get(objId);\n          if (!imgData) {\n            (0, _util.warn)(\"Dependent image isn't ready yet\");\n            return;\n          }\n          var width = imgData.width;\n          var height = imgData.height;\n          var map = [];\n          for (var i = 0, ii = positions.length; i < ii; i += 2) {\n            map.push({\n              transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n              x: 0,\n              y: 0,\n              w: width,\n              h: height\n            });\n          }\n          this.paintInlineImageXObjectGroup(imgData, map);\n        },\n        paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\n          var width = imgData.width;\n          var height = imgData.height;\n          var ctx = this.ctx;\n          this.save();\n          ctx.scale(1 / width, -1 / height);\n          var currentTransform = ctx.mozCurrentTransformInverse;\n          var a = currentTransform[0],\n            b = currentTransform[1];\n          var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n          var c = currentTransform[2],\n            d = currentTransform[3];\n          var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n          var imgToPaint, tmpCanvas;\n          if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n            imgToPaint = imgData;\n          } else {\n            tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n            var tmpCtx = tmpCanvas.context;\n            putBinaryImageData(tmpCtx, imgData);\n            imgToPaint = tmpCanvas.canvas;\n          }\n          var paintWidth = width,\n            paintHeight = height;\n          var tmpCanvasId = \"prescale1\";\n          while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n            var newWidth = paintWidth,\n              newHeight = paintHeight;\n            if (widthScale > 2 && paintWidth > 1) {\n              newWidth = Math.ceil(paintWidth / 2);\n              widthScale /= paintWidth / newWidth;\n            }\n            if (heightScale > 2 && paintHeight > 1) {\n              newHeight = Math.ceil(paintHeight / 2);\n              heightScale /= paintHeight / newHeight;\n            }\n            tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n            tmpCtx = tmpCanvas.context;\n            tmpCtx.clearRect(0, 0, newWidth, newHeight);\n            tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n            imgToPaint = tmpCanvas.canvas;\n            paintWidth = newWidth;\n            paintHeight = newHeight;\n            tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n          }\n          ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n          if (this.imageLayer) {\n            var position = this.getCanvasPosition(0, -height);\n            this.imageLayer.appendImage({\n              imgData,\n              left: position[0],\n              top: position[1],\n              width: width / currentTransform[0],\n              height: height / currentTransform[3]\n            });\n          }\n          this.restore();\n        },\n        paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n          var ctx = this.ctx;\n          var w = imgData.width;\n          var h = imgData.height;\n          var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n          var tmpCtx = tmpCanvas.context;\n          putBinaryImageData(tmpCtx, imgData);\n          for (var i = 0, ii = map.length; i < ii; i++) {\n            var entry = map[i];\n            ctx.save();\n            ctx.transform.apply(ctx, entry.transform);\n            ctx.scale(1, -1);\n            ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n            if (this.imageLayer) {\n              var position = this.getCanvasPosition(entry.x, entry.y);\n              this.imageLayer.appendImage({\n                imgData,\n                left: position[0],\n                top: position[1],\n                width: w,\n                height: h\n              });\n            }\n            ctx.restore();\n          }\n        },\n        paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n          this.ctx.fillRect(0, 0, 1, 1);\n        },\n        paintXObject: function CanvasGraphics_paintXObject() {\n          (0, _util.warn)(\"Unsupported 'paintXObject' command.\");\n        },\n        markPoint: function CanvasGraphics_markPoint(tag) {},\n        markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\n        beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {},\n        beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {},\n        endMarkedContent: function CanvasGraphics_endMarkedContent() {},\n        beginCompat: function CanvasGraphics_beginCompat() {},\n        endCompat: function CanvasGraphics_endCompat() {},\n        consumePath: function CanvasGraphics_consumePath() {\n          var ctx = this.ctx;\n          if (this.pendingClip) {\n            if (this.pendingClip === EO_CLIP) {\n              ctx.clip(\"evenodd\");\n            } else {\n              ctx.clip();\n            }\n            this.pendingClip = null;\n          }\n          ctx.beginPath();\n        },\n        getSinglePixelWidth(scale) {\n          if (this._cachedGetSinglePixelWidth === null) {\n            const inverse = this.ctx.mozCurrentTransformInverse;\n            this._cachedGetSinglePixelWidth = Math.sqrt(Math.max(inverse[0] * inverse[0] + inverse[1] * inverse[1], inverse[2] * inverse[2] + inverse[3] * inverse[3]));\n          }\n          return this._cachedGetSinglePixelWidth;\n        },\n        getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n          var transform = this.ctx.mozCurrentTransform;\n          return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n        }\n      };\n      for (var op in _util.OPS) {\n        CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n      }\n      return CanvasGraphics;\n    }();\n    exports.CanvasGraphics = CanvasGraphics;\n\n    /***/\n  }), ( /* 9 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.getShadingPatternFromIR = getShadingPatternFromIR;\n    exports.TilingPattern = void 0;\n    var _util = __w_pdfjs_require__(1);\n    var ShadingIRs = {};\n    function applyBoundingBox(ctx, bbox) {\n      if (!bbox || typeof Path2D === \"undefined\") {\n        return;\n      }\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      const region = new Path2D();\n      region.rect(bbox[0], bbox[1], width, height);\n      ctx.clip(region);\n    }\n    ShadingIRs.RadialAxial = {\n      fromIR: function RadialAxial_fromIR(raw) {\n        var type = raw[1];\n        var bbox = raw[2];\n        var colorStops = raw[3];\n        var p0 = raw[4];\n        var p1 = raw[5];\n        var r0 = raw[6];\n        var r1 = raw[7];\n        return {\n          type: \"Pattern\",\n          getPattern: function RadialAxial_getPattern(ctx) {\n            applyBoundingBox(ctx, bbox);\n            var grad;\n            if (type === \"axial\") {\n              grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n            } else if (type === \"radial\") {\n              grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n            }\n            for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n              var c = colorStops[i];\n              grad.addColorStop(c[0], c[1]);\n            }\n            return grad;\n          }\n        };\n      }\n    };\n    var createMeshCanvas = function createMeshCanvasClosure() {\n      function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n        var coords = context.coords,\n          colors = context.colors;\n        var bytes = data.data,\n          rowSize = data.width * 4;\n        var tmp;\n        if (coords[p1 + 1] > coords[p2 + 1]) {\n          tmp = p1;\n          p1 = p2;\n          p2 = tmp;\n          tmp = c1;\n          c1 = c2;\n          c2 = tmp;\n        }\n        if (coords[p2 + 1] > coords[p3 + 1]) {\n          tmp = p2;\n          p2 = p3;\n          p3 = tmp;\n          tmp = c2;\n          c2 = c3;\n          c3 = tmp;\n        }\n        if (coords[p1 + 1] > coords[p2 + 1]) {\n          tmp = p1;\n          p1 = p2;\n          p2 = tmp;\n          tmp = c1;\n          c1 = c2;\n          c2 = tmp;\n        }\n        var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n        var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n        var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n        var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n        var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n        var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n        if (y1 >= y3) {\n          return;\n        }\n        var c1r = colors[c1],\n          c1g = colors[c1 + 1],\n          c1b = colors[c1 + 2];\n        var c2r = colors[c2],\n          c2g = colors[c2 + 1],\n          c2b = colors[c2 + 2];\n        var c3r = colors[c3],\n          c3g = colors[c3 + 1],\n          c3b = colors[c3 + 2];\n        var minY = Math.round(y1),\n          maxY = Math.round(y3);\n        var xa, car, cag, cab;\n        var xb, cbr, cbg, cbb;\n        for (var y = minY; y <= maxY; y++) {\n          if (y < y2) {\n            let k;\n            if (y < y1) {\n              k = 0;\n            } else if (y1 === y2) {\n              k = 1;\n            } else {\n              k = (y1 - y) / (y1 - y2);\n            }\n            xa = x1 - (x1 - x2) * k;\n            car = c1r - (c1r - c2r) * k;\n            cag = c1g - (c1g - c2g) * k;\n            cab = c1b - (c1b - c2b) * k;\n          } else {\n            let k;\n            if (y > y3) {\n              k = 1;\n            } else if (y2 === y3) {\n              k = 0;\n            } else {\n              k = (y2 - y) / (y2 - y3);\n            }\n            xa = x2 - (x2 - x3) * k;\n            car = c2r - (c2r - c3r) * k;\n            cag = c2g - (c2g - c3g) * k;\n            cab = c2b - (c2b - c3b) * k;\n          }\n          let k;\n          if (y < y1) {\n            k = 0;\n          } else if (y > y3) {\n            k = 1;\n          } else {\n            k = (y1 - y) / (y1 - y3);\n          }\n          xb = x1 - (x1 - x3) * k;\n          cbr = c1r - (c1r - c3r) * k;\n          cbg = c1g - (c1g - c3g) * k;\n          cbb = c1b - (c1b - c3b) * k;\n          var x1_ = Math.round(Math.min(xa, xb));\n          var x2_ = Math.round(Math.max(xa, xb));\n          var j = rowSize * y + x1_ * 4;\n          for (var x = x1_; x <= x2_; x++) {\n            let k = (xa - x) / (xa - xb);\n            if (k < 0) {\n              k = 0;\n            } else if (k > 1) {\n              k = 1;\n            }\n            bytes[j++] = car - (car - cbr) * k | 0;\n            bytes[j++] = cag - (cag - cbg) * k | 0;\n            bytes[j++] = cab - (cab - cbb) * k | 0;\n            bytes[j++] = 255;\n          }\n        }\n      }\n      function drawFigure(data, figure, context) {\n        var ps = figure.coords;\n        var cs = figure.colors;\n        var i, ii;\n        switch (figure.type) {\n          case \"lattice\":\n            var verticesPerRow = figure.verticesPerRow;\n            var rows = Math.floor(ps.length / verticesPerRow) - 1;\n            var cols = verticesPerRow - 1;\n            for (i = 0; i < rows; i++) {\n              var q = i * verticesPerRow;\n              for (var j = 0; j < cols; j++, q++) {\n                drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n              }\n            }\n            break;\n          case \"triangles\":\n            for (i = 0, ii = ps.length; i < ii; i += 3) {\n              drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n            }\n            break;\n          default:\n            throw new Error(\"illegal figure\");\n        }\n      }\n      function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {\n        var EXPECTED_SCALE = 1.1;\n        var MAX_PATTERN_SIZE = 3000;\n        var BORDER_SIZE = 2;\n        var offsetX = Math.floor(bounds[0]);\n        var offsetY = Math.floor(bounds[1]);\n        var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n        var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n        var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n        var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n        var scaleX = boundsWidth / width;\n        var scaleY = boundsHeight / height;\n        var context = {\n          coords,\n          colors,\n          offsetX: -offsetX,\n          offsetY: -offsetY,\n          scaleX: 1 / scaleX,\n          scaleY: 1 / scaleY\n        };\n        var paddedWidth = width + BORDER_SIZE * 2;\n        var paddedHeight = height + BORDER_SIZE * 2;\n        var canvas, tmpCanvas, i, ii;\n        if (webGLContext.isEnabled) {\n          canvas = webGLContext.drawFigures({\n            width,\n            height,\n            backgroundColor,\n            figures,\n            context\n          });\n          tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n          tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n          canvas = tmpCanvas.canvas;\n        } else {\n          tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n          var tmpCtx = tmpCanvas.context;\n          var data = tmpCtx.createImageData(width, height);\n          if (backgroundColor) {\n            var bytes = data.data;\n            for (i = 0, ii = bytes.length; i < ii; i += 4) {\n              bytes[i] = backgroundColor[0];\n              bytes[i + 1] = backgroundColor[1];\n              bytes[i + 2] = backgroundColor[2];\n              bytes[i + 3] = 255;\n            }\n          }\n          for (i = 0; i < figures.length; i++) {\n            drawFigure(data, figures[i], context);\n          }\n          tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n          canvas = tmpCanvas.canvas;\n        }\n        return {\n          canvas,\n          offsetX: offsetX - BORDER_SIZE * scaleX,\n          offsetY: offsetY - BORDER_SIZE * scaleY,\n          scaleX,\n          scaleY\n        };\n      }\n      return createMeshCanvas;\n    }();\n    ShadingIRs.Mesh = {\n      fromIR: function Mesh_fromIR(raw) {\n        var coords = raw[2];\n        var colors = raw[3];\n        var figures = raw[4];\n        var bounds = raw[5];\n        var matrix = raw[6];\n        var bbox = raw[7];\n        var background = raw[8];\n        return {\n          type: \"Pattern\",\n          getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n            applyBoundingBox(ctx, bbox);\n            var scale;\n            if (shadingFill) {\n              scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n            } else {\n              scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n              if (matrix) {\n                var matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\n                scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n              }\n            }\n            var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);\n            if (!shadingFill) {\n              ctx.setTransform.apply(ctx, owner.baseTransform);\n              if (matrix) {\n                ctx.transform.apply(ctx, matrix);\n              }\n            }\n            ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n            return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n          }\n        };\n      }\n    };\n    ShadingIRs.Dummy = {\n      fromIR: function Dummy_fromIR() {\n        return {\n          type: \"Pattern\",\n          getPattern: function Dummy_fromIR_getPattern() {\n            return \"hotpink\";\n          }\n        };\n      }\n    };\n    function getShadingPatternFromIR(raw) {\n      var shadingIR = ShadingIRs[raw[0]];\n      if (!shadingIR) {\n        throw new Error(`Unknown IR type: ${raw[0]}`);\n      }\n      return shadingIR.fromIR(raw);\n    }\n    var TilingPattern = function TilingPatternClosure() {\n      var PaintType = {\n        COLORED: 1,\n        UNCOLORED: 2\n      };\n      var MAX_PATTERN_SIZE = 3000;\n      function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n        this.operatorList = IR[2];\n        this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n        this.bbox = IR[4];\n        this.xstep = IR[5];\n        this.ystep = IR[6];\n        this.paintType = IR[7];\n        this.tilingType = IR[8];\n        this.color = color;\n        this.canvasGraphicsFactory = canvasGraphicsFactory;\n        this.baseTransform = baseTransform;\n        this.type = \"Pattern\";\n        this.ctx = ctx;\n      }\n      TilingPattern.prototype = {\n        createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n          var operatorList = this.operatorList;\n          var bbox = this.bbox;\n          var xstep = this.xstep;\n          var ystep = this.ystep;\n          var paintType = this.paintType;\n          var tilingType = this.tilingType;\n          var color = this.color;\n          var canvasGraphicsFactory = this.canvasGraphicsFactory;\n          (0, _util.info)(\"TilingType: \" + tilingType);\n          var x0 = bbox[0],\n            y0 = bbox[1],\n            x1 = bbox[2],\n            y1 = bbox[3];\n          var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n          var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n          var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n          var dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n          var dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n          var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n          var tmpCtx = tmpCanvas.context;\n          var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n          graphics.groupLevel = owner.groupLevel;\n          this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n          graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n          graphics.transform(1, 0, 0, 1, -x0, -y0);\n          this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n          graphics.executeOperatorList(operatorList);\n          this.ctx.transform(1, 0, 0, 1, x0, y0);\n          this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n          return tmpCanvas.canvas;\n        },\n        getSizeAndScale: function TilingPattern_getSizeAndScale(step, realOutputSize, scale) {\n          step = Math.abs(step);\n          var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n          var size = Math.ceil(step * scale);\n          if (size >= maxSize) {\n            size = maxSize;\n          } else {\n            scale = size / step;\n          }\n          return {\n            scale,\n            size\n          };\n        },\n        clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n          if (Array.isArray(bbox) && bbox.length === 4) {\n            var bboxWidth = x1 - x0;\n            var bboxHeight = y1 - y0;\n            graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n            graphics.clip();\n            graphics.endPath();\n          }\n        },\n        setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n          const context = graphics.ctx,\n            current = graphics.current;\n          switch (paintType) {\n            case PaintType.COLORED:\n              var ctx = this.ctx;\n              context.fillStyle = ctx.fillStyle;\n              context.strokeStyle = ctx.strokeStyle;\n              current.fillColor = ctx.fillStyle;\n              current.strokeColor = ctx.strokeStyle;\n              break;\n            case PaintType.UNCOLORED:\n              var cssColor = _util.Util.makeCssRgb(color[0], color[1], color[2]);\n              context.fillStyle = cssColor;\n              context.strokeStyle = cssColor;\n              current.fillColor = cssColor;\n              current.strokeColor = cssColor;\n              break;\n            default:\n              throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n          }\n        },\n        getPattern: function TilingPattern_getPattern(ctx, owner) {\n          ctx = this.ctx;\n          ctx.setTransform.apply(ctx, this.baseTransform);\n          ctx.transform.apply(ctx, this.matrix);\n          var temporaryPatternCanvas = this.createPatternCanvas(owner);\n          return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n        }\n      };\n      return TilingPattern;\n    }();\n    exports.TilingPattern = TilingPattern;\n\n    /***/\n  }), ( /* 10 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.GlobalWorkerOptions = void 0;\n    const GlobalWorkerOptions = Object.create(null);\n    exports.GlobalWorkerOptions = GlobalWorkerOptions;\n    GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n    GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n\n    /***/\n  }), ( /* 11 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.MessageHandler = void 0;\n    var _util = __w_pdfjs_require__(1);\n    const CallbackKind = {\n      UNKNOWN: 0,\n      DATA: 1,\n      ERROR: 2\n    };\n    const StreamKind = {\n      UNKNOWN: 0,\n      CANCEL: 1,\n      CANCEL_COMPLETE: 2,\n      CLOSE: 3,\n      ENQUEUE: 4,\n      ERROR: 5,\n      PULL: 6,\n      PULL_COMPLETE: 7,\n      START_COMPLETE: 8\n    };\n    function wrapReason(reason) {\n      if (typeof reason !== \"object\" || reason === null) {\n        return reason;\n      }\n      switch (reason.name) {\n        case \"AbortException\":\n          return new _util.AbortException(reason.message);\n        case \"MissingPDFException\":\n          return new _util.MissingPDFException(reason.message);\n        case \"UnexpectedResponseException\":\n          return new _util.UnexpectedResponseException(reason.message, reason.status);\n        case \"UnknownErrorException\":\n          return new _util.UnknownErrorException(reason.message, reason.details);\n        default:\n          return new _util.UnknownErrorException(reason.message, reason.toString());\n      }\n    }\n    class MessageHandler {\n      constructor(sourceName, targetName, comObj) {\n        this.sourceName = sourceName;\n        this.targetName = targetName;\n        this.comObj = comObj;\n        this.callbackId = 1;\n        this.streamId = 1;\n        this.postMessageTransfers = true;\n        this.streamSinks = Object.create(null);\n        this.streamControllers = Object.create(null);\n        this.callbackCapabilities = Object.create(null);\n        this.actionHandler = Object.create(null);\n        this._onComObjOnMessage = event => {\n          const data = event.data;\n          if (data.targetName !== this.sourceName) {\n            return;\n          }\n          if (data.stream) {\n            this._processStreamMessage(data);\n            return;\n          }\n          if (data.callback) {\n            const callbackId = data.callbackId;\n            const capability = this.callbackCapabilities[callbackId];\n            if (!capability) {\n              throw new Error(`Cannot resolve callback ${callbackId}`);\n            }\n            delete this.callbackCapabilities[callbackId];\n            if (data.callback === CallbackKind.DATA) {\n              capability.resolve(data.data);\n            } else if (data.callback === CallbackKind.ERROR) {\n              capability.reject(wrapReason(data.reason));\n            } else {\n              throw new Error(\"Unexpected callback case\");\n            }\n            return;\n          }\n          const action = this.actionHandler[data.action];\n          if (!action) {\n            throw new Error(`Unknown action from worker: ${data.action}`);\n          }\n          if (data.callbackId) {\n            const sourceName = this.sourceName;\n            const targetName = data.sourceName;\n            new Promise(function (resolve) {\n              resolve(action(data.data));\n            }).then(function (result) {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                callback: CallbackKind.DATA,\n                callbackId: data.callbackId,\n                data: result\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                callback: CallbackKind.ERROR,\n                callbackId: data.callbackId,\n                reason: wrapReason(reason)\n              });\n            });\n            return;\n          }\n          if (data.streamId) {\n            this._createStreamSink(data);\n            return;\n          }\n          action(data.data);\n        };\n        comObj.addEventListener(\"message\", this._onComObjOnMessage);\n      }\n      on(actionName, handler) {\n        const ah = this.actionHandler;\n        if (ah[actionName]) {\n          throw new Error(`There is already an actionName called \"${actionName}\"`);\n        }\n        ah[actionName] = handler;\n      }\n      send(actionName, data, transfers) {\n        this._postMessage({\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          data\n        }, transfers);\n      }\n      sendWithPromise(actionName, data, transfers) {\n        const callbackId = this.callbackId++;\n        const capability = (0, _util.createPromiseCapability)();\n        this.callbackCapabilities[callbackId] = capability;\n        try {\n          this._postMessage({\n            sourceName: this.sourceName,\n            targetName: this.targetName,\n            action: actionName,\n            callbackId,\n            data\n          }, transfers);\n        } catch (ex) {\n          capability.reject(ex);\n        }\n        return capability.promise;\n      }\n      sendWithStream(actionName, data, queueingStrategy, transfers) {\n        const streamId = this.streamId++;\n        const sourceName = this.sourceName;\n        const targetName = this.targetName;\n        const comObj = this.comObj;\n        return new ReadableStream({\n          start: controller => {\n            const startCapability = (0, _util.createPromiseCapability)();\n            this.streamControllers[streamId] = {\n              controller,\n              startCall: startCapability,\n              pullCall: null,\n              cancelCall: null,\n              isClosed: false\n            };\n            this._postMessage({\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize\n            }, transfers);\n            return startCapability.promise;\n          },\n          pull: controller => {\n            const pullCapability = (0, _util.createPromiseCapability)();\n            this.streamControllers[streamId].pullCall = pullCapability;\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL,\n              streamId,\n              desiredSize: controller.desiredSize\n            });\n            return pullCapability.promise;\n          },\n          cancel: reason => {\n            (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n            const cancelCapability = (0, _util.createPromiseCapability)();\n            this.streamControllers[streamId].cancelCall = cancelCapability;\n            this.streamControllers[streamId].isClosed = true;\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL,\n              streamId,\n              reason: wrapReason(reason)\n            });\n            return cancelCapability.promise;\n          }\n        }, queueingStrategy);\n      }\n      _createStreamSink(data) {\n        const self = this;\n        const action = this.actionHandler[data.action];\n        const streamId = data.streamId;\n        const sourceName = this.sourceName;\n        const targetName = data.sourceName;\n        const comObj = this.comObj;\n        const streamSink = {\n          enqueue(chunk, size = 1, transfers) {\n            if (this.isCancelled) {\n              return;\n            }\n            const lastDesiredSize = this.desiredSize;\n            this.desiredSize -= size;\n            if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n              this.sinkCapability = (0, _util.createPromiseCapability)();\n              this.ready = this.sinkCapability.promise;\n            }\n            self._postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.ENQUEUE,\n              streamId,\n              chunk\n            }, transfers);\n          },\n          close() {\n            if (this.isCancelled) {\n              return;\n            }\n            this.isCancelled = true;\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CLOSE,\n              streamId\n            });\n            delete self.streamSinks[streamId];\n          },\n          error(reason) {\n            (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n            if (this.isCancelled) {\n              return;\n            }\n            this.isCancelled = true;\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.ERROR,\n              streamId,\n              reason: wrapReason(reason)\n            });\n          },\n          sinkCapability: (0, _util.createPromiseCapability)(),\n          onPull: null,\n          onCancel: null,\n          isCancelled: false,\n          desiredSize: data.desiredSize,\n          ready: null\n        };\n        streamSink.sinkCapability.resolve();\n        streamSink.ready = streamSink.sinkCapability.promise;\n        this.streamSinks[streamId] = streamSink;\n        new Promise(function (resolve) {\n          resolve(action(data.data, streamSink));\n        }).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.START_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.START_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n      }\n      _processStreamMessage(data) {\n        const streamId = data.streamId;\n        const sourceName = this.sourceName;\n        const targetName = data.sourceName;\n        const comObj = this.comObj;\n        switch (data.stream) {\n          case StreamKind.START_COMPLETE:\n            if (data.success) {\n              this.streamControllers[streamId].startCall.resolve();\n            } else {\n              this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n            }\n            break;\n          case StreamKind.PULL_COMPLETE:\n            if (data.success) {\n              this.streamControllers[streamId].pullCall.resolve();\n            } else {\n              this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n            }\n            break;\n          case StreamKind.PULL:\n            if (!this.streamSinks[streamId]) {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.PULL_COMPLETE,\n                streamId,\n                success: true\n              });\n              break;\n            }\n            if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n              this.streamSinks[streamId].sinkCapability.resolve();\n            }\n            this.streamSinks[streamId].desiredSize = data.desiredSize;\n            const {\n              onPull\n            } = this.streamSinks[data.streamId];\n            new Promise(function (resolve) {\n              resolve(onPull && onPull());\n            }).then(function () {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.PULL_COMPLETE,\n                streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.PULL_COMPLETE,\n                streamId,\n                reason: wrapReason(reason)\n              });\n            });\n            break;\n          case StreamKind.ENQUEUE:\n            (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n            if (this.streamControllers[streamId].isClosed) {\n              break;\n            }\n            this.streamControllers[streamId].controller.enqueue(data.chunk);\n            break;\n          case StreamKind.CLOSE:\n            (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n            if (this.streamControllers[streamId].isClosed) {\n              break;\n            }\n            this.streamControllers[streamId].isClosed = true;\n            this.streamControllers[streamId].controller.close();\n            this._deleteStreamController(streamId);\n            break;\n          case StreamKind.ERROR:\n            (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n            this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n            this._deleteStreamController(streamId);\n            break;\n          case StreamKind.CANCEL_COMPLETE:\n            if (data.success) {\n              this.streamControllers[streamId].cancelCall.resolve();\n            } else {\n              this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n            }\n            this._deleteStreamController(streamId);\n            break;\n          case StreamKind.CANCEL:\n            if (!this.streamSinks[streamId]) {\n              break;\n            }\n            const {\n              onCancel\n            } = this.streamSinks[data.streamId];\n            new Promise(function (resolve) {\n              resolve(onCancel && onCancel(wrapReason(data.reason)));\n            }).then(function () {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.CANCEL_COMPLETE,\n                streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.CANCEL_COMPLETE,\n                streamId,\n                reason: wrapReason(reason)\n              });\n            });\n            this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n            this.streamSinks[streamId].isCancelled = true;\n            delete this.streamSinks[streamId];\n            break;\n          default:\n            throw new Error(\"Unexpected stream case\");\n        }\n      }\n      async _deleteStreamController(streamId) {\n        await Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n          return capability && capability.promise;\n        }));\n        delete this.streamControllers[streamId];\n      }\n      _postMessage(message, transfers) {\n        if (transfers && this.postMessageTransfers) {\n          this.comObj.postMessage(message, transfers);\n        } else {\n          this.comObj.postMessage(message);\n        }\n      }\n      destroy() {\n        this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n      }\n    }\n    exports.MessageHandler = MessageHandler;\n\n    /***/\n  }), ( /* 12 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.Metadata = void 0;\n    var _util = __w_pdfjs_require__(1);\n    var _xml_parser = __w_pdfjs_require__(13);\n    class Metadata {\n      constructor(data) {\n        (0, _util.assert)(typeof data === \"string\", \"Metadata: input is not a string\");\n        data = this._repair(data);\n        const parser = new _xml_parser.SimpleXMLParser();\n        const xmlDocument = parser.parseFromString(data);\n        this._metadataMap = new Map();\n        if (xmlDocument) {\n          this._parse(xmlDocument);\n        }\n      }\n      _repair(data) {\n        return data.replace(/^[^<]+/, \"\").replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n          const bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n          let chars = \"\";\n          for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n            const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n            if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\n              chars += String.fromCharCode(code);\n            } else {\n              chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n            }\n          }\n          return \">\" + chars;\n        });\n      }\n      _parse(xmlDocument) {\n        let rdf = xmlDocument.documentElement;\n        if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n          rdf = rdf.firstChild;\n          while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n            rdf = rdf.nextSibling;\n          }\n        }\n        const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n        if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n          return;\n        }\n        const children = rdf.childNodes;\n        for (let i = 0, ii = children.length; i < ii; i++) {\n          const desc = children[i];\n          if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n            continue;\n          }\n          for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n            if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n              const entry = desc.childNodes[j];\n              const name = entry.nodeName.toLowerCase();\n              this._metadataMap.set(name, entry.textContent.trim());\n            }\n          }\n        }\n      }\n      get(name) {\n        return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n      }\n      getAll() {\n        const obj = Object.create(null);\n        for (const [key, value] of this._metadataMap) {\n          obj[key] = value;\n        }\n        return obj;\n      }\n      has(name) {\n        return this._metadataMap.has(name);\n      }\n    }\n    exports.Metadata = Metadata;\n\n    /***/\n  }), ( /* 13 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.SimpleXMLParser = void 0;\n    const XMLParserErrorCode = {\n      NoError: 0,\n      EndOfDocument: -1,\n      UnterminatedCdat: -2,\n      UnterminatedXmlDeclaration: -3,\n      UnterminatedDoctypeDeclaration: -4,\n      UnterminatedComment: -5,\n      MalformedElement: -6,\n      OutOfMemory: -7,\n      UnterminatedAttributeValue: -8,\n      UnterminatedElement: -9,\n      ElementNeverBegun: -10\n    };\n    function isWhitespace(s, index) {\n      const ch = s[index];\n      return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n    }\n    function isWhitespaceString(s) {\n      for (let i = 0, ii = s.length; i < ii; i++) {\n        if (!isWhitespace(s, i)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    class XMLParserBase {\n      _resolveEntities(s) {\n        return s.replace(/&([^;]+);/g, (all, entity) => {\n          if (entity.substring(0, 2) === \"#x\") {\n            return String.fromCharCode(parseInt(entity.substring(2), 16));\n          } else if (entity.substring(0, 1) === \"#\") {\n            return String.fromCharCode(parseInt(entity.substring(1), 10));\n          }\n          switch (entity) {\n            case \"lt\":\n              return \"<\";\n            case \"gt\":\n              return \">\";\n            case \"amp\":\n              return \"&\";\n            case \"quot\":\n              return '\"';\n          }\n          return this.onResolveEntity(entity);\n        });\n      }\n      _parseContent(s, start) {\n        const attributes = [];\n        let pos = start;\n        function skipWs() {\n          while (pos < s.length && isWhitespace(s, pos)) {\n            ++pos;\n          }\n        }\n        while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n          ++pos;\n        }\n        const name = s.substring(start, pos);\n        skipWs();\n        while (pos < s.length && s[pos] !== \">\" && s[pos] !== \"/\" && s[pos] !== \"?\") {\n          skipWs();\n          let attrName = \"\",\n            attrValue = \"\";\n          while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n            attrName += s[pos];\n            ++pos;\n          }\n          skipWs();\n          if (s[pos] !== \"=\") {\n            return null;\n          }\n          ++pos;\n          skipWs();\n          const attrEndChar = s[pos];\n          if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n            return null;\n          }\n          const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n          if (attrEndIndex < 0) {\n            return null;\n          }\n          attrValue = s.substring(pos, attrEndIndex);\n          attributes.push({\n            name: attrName,\n            value: this._resolveEntities(attrValue)\n          });\n          pos = attrEndIndex + 1;\n          skipWs();\n        }\n        return {\n          name,\n          attributes,\n          parsed: pos - start\n        };\n      }\n      _parseProcessingInstruction(s, start) {\n        let pos = start;\n        function skipWs() {\n          while (pos < s.length && isWhitespace(s, pos)) {\n            ++pos;\n          }\n        }\n        while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n          ++pos;\n        }\n        const name = s.substring(start, pos);\n        skipWs();\n        const attrStart = pos;\n        while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n          ++pos;\n        }\n        const value = s.substring(attrStart, pos);\n        return {\n          name,\n          value,\n          parsed: pos - start\n        };\n      }\n      parseXml(s) {\n        let i = 0;\n        while (i < s.length) {\n          const ch = s[i];\n          let j = i;\n          if (ch === \"<\") {\n            ++j;\n            const ch2 = s[j];\n            let q;\n            switch (ch2) {\n              case \"/\":\n                ++j;\n                q = s.indexOf(\">\", j);\n                if (q < 0) {\n                  this.onError(XMLParserErrorCode.UnterminatedElement);\n                  return;\n                }\n                this.onEndElement(s.substring(j, q));\n                j = q + 1;\n                break;\n              case \"?\":\n                ++j;\n                const pi = this._parseProcessingInstruction(s, j);\n                if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n                  this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n                  return;\n                }\n                this.onPi(pi.name, pi.value);\n                j += pi.parsed + 2;\n                break;\n              case \"!\":\n                if (s.substring(j + 1, j + 3) === \"--\") {\n                  q = s.indexOf(\"-->\", j + 3);\n                  if (q < 0) {\n                    this.onError(XMLParserErrorCode.UnterminatedComment);\n                    return;\n                  }\n                  this.onComment(s.substring(j + 3, q));\n                  j = q + 3;\n                } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n                  q = s.indexOf(\"]]>\", j + 8);\n                  if (q < 0) {\n                    this.onError(XMLParserErrorCode.UnterminatedCdat);\n                    return;\n                  }\n                  this.onCdata(s.substring(j + 8, q));\n                  j = q + 3;\n                } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n                  const q2 = s.indexOf(\"[\", j + 8);\n                  let complexDoctype = false;\n                  q = s.indexOf(\">\", j + 8);\n                  if (q < 0) {\n                    this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                    return;\n                  }\n                  if (q2 > 0 && q > q2) {\n                    q = s.indexOf(\"]>\", j + 8);\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                      return;\n                    }\n                    complexDoctype = true;\n                  }\n                  const doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\n                  this.onDoctype(doctypeContent);\n                  j = q + (complexDoctype ? 2 : 1);\n                } else {\n                  this.onError(XMLParserErrorCode.MalformedElement);\n                  return;\n                }\n                break;\n              default:\n                const content = this._parseContent(s, j);\n                if (content === null) {\n                  this.onError(XMLParserErrorCode.MalformedElement);\n                  return;\n                }\n                let isClosed = false;\n                if (s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\") {\n                  isClosed = true;\n                } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== \">\") {\n                  this.onError(XMLParserErrorCode.UnterminatedElement);\n                  return;\n                }\n                this.onBeginElement(content.name, content.attributes, isClosed);\n                j += content.parsed + (isClosed ? 2 : 1);\n                break;\n            }\n          } else {\n            while (j < s.length && s[j] !== \"<\") {\n              j++;\n            }\n            const text = s.substring(i, j);\n            this.onText(this._resolveEntities(text));\n          }\n          i = j;\n        }\n      }\n      onResolveEntity(name) {\n        return `&${name};`;\n      }\n      onPi(name, value) {}\n      onComment(text) {}\n      onCdata(text) {}\n      onDoctype(doctypeContent) {}\n      onText(text) {}\n      onBeginElement(name, attributes, isEmpty) {}\n      onEndElement(name) {}\n      onError(code) {}\n    }\n    class SimpleDOMNode {\n      constructor(nodeName, nodeValue) {\n        this.nodeName = nodeName;\n        this.nodeValue = nodeValue;\n        Object.defineProperty(this, \"parentNode\", {\n          value: null,\n          writable: true\n        });\n      }\n      get firstChild() {\n        return this.childNodes && this.childNodes[0];\n      }\n      get nextSibling() {\n        const childNodes = this.parentNode.childNodes;\n        if (!childNodes) {\n          return undefined;\n        }\n        const index = childNodes.indexOf(this);\n        if (index === -1) {\n          return undefined;\n        }\n        return childNodes[index + 1];\n      }\n      get textContent() {\n        if (!this.childNodes) {\n          return this.nodeValue || \"\";\n        }\n        return this.childNodes.map(function (child) {\n          return child.textContent;\n        }).join(\"\");\n      }\n      hasChildNodes() {\n        return this.childNodes && this.childNodes.length > 0;\n      }\n    }\n    class SimpleXMLParser extends XMLParserBase {\n      constructor() {\n        super();\n        this._currentFragment = null;\n        this._stack = null;\n        this._errorCode = XMLParserErrorCode.NoError;\n      }\n      parseFromString(data) {\n        this._currentFragment = [];\n        this._stack = [];\n        this._errorCode = XMLParserErrorCode.NoError;\n        this.parseXml(data);\n        if (this._errorCode !== XMLParserErrorCode.NoError) {\n          return undefined;\n        }\n        const [documentElement] = this._currentFragment;\n        if (!documentElement) {\n          return undefined;\n        }\n        return {\n          documentElement\n        };\n      }\n      onResolveEntity(name) {\n        switch (name) {\n          case \"apos\":\n            return \"'\";\n        }\n        return super.onResolveEntity(name);\n      }\n      onText(text) {\n        if (isWhitespaceString(text)) {\n          return;\n        }\n        const node = new SimpleDOMNode(\"#text\", text);\n        this._currentFragment.push(node);\n      }\n      onCdata(text) {\n        const node = new SimpleDOMNode(\"#text\", text);\n        this._currentFragment.push(node);\n      }\n      onBeginElement(name, attributes, isEmpty) {\n        const node = new SimpleDOMNode(name);\n        node.childNodes = [];\n        this._currentFragment.push(node);\n        if (isEmpty) {\n          return;\n        }\n        this._stack.push(this._currentFragment);\n        this._currentFragment = node.childNodes;\n      }\n      onEndElement(name) {\n        this._currentFragment = this._stack.pop() || [];\n        const lastElement = this._currentFragment[this._currentFragment.length - 1];\n        if (!lastElement) {\n          return;\n        }\n        for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n          lastElement.childNodes[i].parentNode = lastElement;\n        }\n      }\n      onError(code) {\n        this._errorCode = code;\n      }\n    }\n    exports.SimpleXMLParser = SimpleXMLParser;\n\n    /***/\n  }), ( /* 14 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.PDFDataTransportStream = void 0;\n    var _util = __w_pdfjs_require__(1);\n    class PDFDataTransportStream {\n      constructor(params, pdfDataRangeTransport) {\n        (0, _util.assert)(pdfDataRangeTransport);\n        this._queuedChunks = [];\n        this._progressiveDone = params.progressiveDone || false;\n        const initialData = params.initialData;\n        if (initialData && initialData.length > 0) {\n          const buffer = new Uint8Array(initialData).buffer;\n          this._queuedChunks.push(buffer);\n        }\n        this._pdfDataRangeTransport = pdfDataRangeTransport;\n        this._isStreamingSupported = !params.disableStream;\n        this._isRangeSupported = !params.disableRange;\n        this._contentLength = params.length;\n        this._fullRequestReader = null;\n        this._rangeReaders = [];\n        this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n          this._onReceiveData({\n            begin,\n            chunk\n          });\n        });\n        this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n          this._onProgress({\n            loaded,\n            total\n          });\n        });\n        this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n          this._onReceiveData({\n            chunk\n          });\n        });\n        this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n          this._onProgressiveDone();\n        });\n        this._pdfDataRangeTransport.transportReady();\n      }\n      _onReceiveData(args) {\n        const buffer = new Uint8Array(args.chunk).buffer;\n        if (args.begin === undefined) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader._enqueue(buffer);\n          } else {\n            this._queuedChunks.push(buffer);\n          }\n        } else {\n          const found = this._rangeReaders.some(function (rangeReader) {\n            if (rangeReader._begin !== args.begin) {\n              return false;\n            }\n            rangeReader._enqueue(buffer);\n            return true;\n          });\n          (0, _util.assert)(found);\n        }\n      }\n      get _progressiveDataLength() {\n        return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n      }\n      _onProgress(evt) {\n        if (evt.total === undefined) {\n          const firstReader = this._rangeReaders[0];\n          if (firstReader && firstReader.onProgress) {\n            firstReader.onProgress({\n              loaded: evt.loaded\n            });\n          }\n        } else {\n          const fullReader = this._fullRequestReader;\n          if (fullReader && fullReader.onProgress) {\n            fullReader.onProgress({\n              loaded: evt.loaded,\n              total: evt.total\n            });\n          }\n        }\n      }\n      _onProgressiveDone() {\n        if (this._fullRequestReader) {\n          this._fullRequestReader.progressiveDone();\n        }\n        this._progressiveDone = true;\n      }\n      _removeRangeReader(reader) {\n        const i = this._rangeReaders.indexOf(reader);\n        if (i >= 0) {\n          this._rangeReaders.splice(i, 1);\n        }\n      }\n      getFullReader() {\n        (0, _util.assert)(!this._fullRequestReader);\n        const queuedChunks = this._queuedChunks;\n        this._queuedChunks = null;\n        return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone);\n      }\n      getRangeReader(begin, end) {\n        if (end <= this._progressiveDataLength) {\n          return null;\n        }\n        const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n        this._pdfDataRangeTransport.requestDataRange(begin, end);\n        this._rangeReaders.push(reader);\n        return reader;\n      }\n      cancelAllRequests(reason) {\n        if (this._fullRequestReader) {\n          this._fullRequestReader.cancel(reason);\n        }\n        const readers = this._rangeReaders.slice(0);\n        readers.forEach(function (rangeReader) {\n          rangeReader.cancel(reason);\n        });\n        this._pdfDataRangeTransport.abort();\n      }\n    }\n    exports.PDFDataTransportStream = PDFDataTransportStream;\n    class PDFDataTransportStreamReader {\n      constructor(stream, queuedChunks, progressiveDone = false) {\n        this._stream = stream;\n        this._done = progressiveDone || false;\n        this._filename = null;\n        this._queuedChunks = queuedChunks || [];\n        this._loaded = 0;\n        for (const chunk of this._queuedChunks) {\n          this._loaded += chunk.byteLength;\n        }\n        this._requests = [];\n        this._headersReady = Promise.resolve();\n        stream._fullRequestReader = this;\n        this.onProgress = null;\n      }\n      _enqueue(chunk) {\n        if (this._done) {\n          return;\n        }\n        if (this._requests.length > 0) {\n          const requestCapability = this._requests.shift();\n          requestCapability.resolve({\n            value: chunk,\n            done: false\n          });\n        } else {\n          this._queuedChunks.push(chunk);\n        }\n        this._loaded += chunk.byteLength;\n      }\n      get headersReady() {\n        return this._headersReady;\n      }\n      get filename() {\n        return this._filename;\n      }\n      get isRangeSupported() {\n        return this._stream._isRangeSupported;\n      }\n      get isStreamingSupported() {\n        return this._stream._isStreamingSupported;\n      }\n      get contentLength() {\n        return this._stream._contentLength;\n      }\n      async read() {\n        if (this._queuedChunks.length > 0) {\n          const chunk = this._queuedChunks.shift();\n          return {\n            value: chunk,\n            done: false\n          };\n        }\n        if (this._done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        const requestCapability = (0, _util.createPromiseCapability)();\n        this._requests.push(requestCapability);\n        return requestCapability.promise;\n      }\n      cancel(reason) {\n        this._done = true;\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n        this._requests = [];\n      }\n      progressiveDone() {\n        if (this._done) {\n          return;\n        }\n        this._done = true;\n      }\n    }\n    class PDFDataTransportStreamRangeReader {\n      constructor(stream, begin, end) {\n        this._stream = stream;\n        this._begin = begin;\n        this._end = end;\n        this._queuedChunk = null;\n        this._requests = [];\n        this._done = false;\n        this.onProgress = null;\n      }\n      _enqueue(chunk) {\n        if (this._done) {\n          return;\n        }\n        if (this._requests.length === 0) {\n          this._queuedChunk = chunk;\n        } else {\n          const requestsCapability = this._requests.shift();\n          requestsCapability.resolve({\n            value: chunk,\n            done: false\n          });\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n          this._requests = [];\n        }\n        this._done = true;\n        this._stream._removeRangeReader(this);\n      }\n      get isStreamingSupported() {\n        return false;\n      }\n      async read() {\n        if (this._queuedChunk) {\n          const chunk = this._queuedChunk;\n          this._queuedChunk = null;\n          return {\n            value: chunk,\n            done: false\n          };\n        }\n        if (this._done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        const requestCapability = (0, _util.createPromiseCapability)();\n        this._requests.push(requestCapability);\n        return requestCapability.promise;\n      }\n      cancel(reason) {\n        this._done = true;\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n        this._requests = [];\n        this._stream._removeRangeReader(this);\n      }\n    }\n\n    /***/\n  }), ( /* 15 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.WebGLContext = void 0;\n    var _util = __w_pdfjs_require__(1);\n    class WebGLContext {\n      constructor({\n        enable = false\n      }) {\n        this._enabled = enable === true;\n      }\n      get isEnabled() {\n        let enabled = this._enabled;\n        if (enabled) {\n          enabled = WebGLUtils.tryInitGL();\n        }\n        return (0, _util.shadow)(this, \"isEnabled\", enabled);\n      }\n      composeSMask({\n        layer,\n        mask,\n        properties\n      }) {\n        return WebGLUtils.composeSMask(layer, mask, properties);\n      }\n      drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context\n      }) {\n        return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\n      }\n      clear() {\n        WebGLUtils.cleanup();\n      }\n    }\n    exports.WebGLContext = WebGLContext;\n    var WebGLUtils = function WebGLUtilsClosure() {\n      function loadShader(gl, code, shaderType) {\n        var shader = gl.createShader(shaderType);\n        gl.shaderSource(shader, code);\n        gl.compileShader(shader);\n        var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n        if (!compiled) {\n          var errorMsg = gl.getShaderInfoLog(shader);\n          throw new Error(\"Error during shader compilation: \" + errorMsg);\n        }\n        return shader;\n      }\n      function createVertexShader(gl, code) {\n        return loadShader(gl, code, gl.VERTEX_SHADER);\n      }\n      function createFragmentShader(gl, code) {\n        return loadShader(gl, code, gl.FRAGMENT_SHADER);\n      }\n      function createProgram(gl, shaders) {\n        var program = gl.createProgram();\n        for (var i = 0, ii = shaders.length; i < ii; ++i) {\n          gl.attachShader(program, shaders[i]);\n        }\n        gl.linkProgram(program);\n        var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n          var errorMsg = gl.getProgramInfoLog(program);\n          throw new Error(\"Error during program linking: \" + errorMsg);\n        }\n        return program;\n      }\n      function createTexture(gl, image, textureId) {\n        gl.activeTexture(textureId);\n        var texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        return texture;\n      }\n      var currentGL, currentCanvas;\n      function generateGL() {\n        if (currentGL) {\n          return;\n        }\n        currentCanvas = document.createElement(\"canvas\");\n        currentGL = currentCanvas.getContext(\"webgl\", {\n          premultipliedalpha: false\n        });\n      }\n      var smaskVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n      var smaskFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n      var smaskCache = null;\n      function initSmaskGL() {\n        var canvas, gl;\n        generateGL();\n        canvas = currentCanvas;\n        currentCanvas = null;\n        gl = currentGL;\n        currentGL = null;\n        var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n        var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n        var program = createProgram(gl, [vertexShader, fragmentShader]);\n        gl.useProgram(program);\n        var cache = {};\n        cache.gl = gl;\n        cache.canvas = canvas;\n        cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n        cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n        cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n        cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n        var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n        var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n        var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n        var texCoordBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(texCoordLocation);\n        gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform1i(texLayerLocation, 0);\n        gl.uniform1i(texMaskLocation, 1);\n        smaskCache = cache;\n      }\n      function composeSMask(layer, mask, properties) {\n        var width = layer.width,\n          height = layer.height;\n        if (!smaskCache) {\n          initSmaskGL();\n        }\n        var cache = smaskCache,\n          canvas = cache.canvas,\n          gl = cache.gl;\n        canvas.width = width;\n        canvas.height = height;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.uniform2f(cache.resolutionLocation, width, height);\n        if (properties.backdrop) {\n          gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\n        } else {\n          gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n        }\n        gl.uniform1i(cache.subtypeLocation, properties.subtype === \"Luminosity\" ? 1 : 0);\n        var texture = createTexture(gl, layer, gl.TEXTURE0);\n        var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n        var buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(cache.positionLocation);\n        gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.clearColor(0, 0, 0, 0);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        gl.flush();\n        gl.deleteTexture(texture);\n        gl.deleteTexture(maskTexture);\n        gl.deleteBuffer(buffer);\n        return canvas;\n      }\n      var figuresVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n      var figuresFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n      var figuresCache = null;\n      function initFiguresGL() {\n        var canvas, gl;\n        generateGL();\n        canvas = currentCanvas;\n        currentCanvas = null;\n        gl = currentGL;\n        currentGL = null;\n        var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n        var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n        var program = createProgram(gl, [vertexShader, fragmentShader]);\n        gl.useProgram(program);\n        var cache = {};\n        cache.gl = gl;\n        cache.canvas = canvas;\n        cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n        cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n        cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n        cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n        cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n        figuresCache = cache;\n      }\n      function drawFigures(width, height, backgroundColor, figures, context) {\n        if (!figuresCache) {\n          initFiguresGL();\n        }\n        var cache = figuresCache,\n          canvas = cache.canvas,\n          gl = cache.gl;\n        canvas.width = width;\n        canvas.height = height;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.uniform2f(cache.resolutionLocation, width, height);\n        var count = 0;\n        var i, ii, rows;\n        for (i = 0, ii = figures.length; i < ii; i++) {\n          switch (figures[i].type) {\n            case \"lattice\":\n              rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\n              count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n              break;\n            case \"triangles\":\n              count += figures[i].coords.length;\n              break;\n          }\n        }\n        var coords = new Float32Array(count * 2);\n        var colors = new Uint8Array(count * 3);\n        var coordsMap = context.coords,\n          colorsMap = context.colors;\n        var pIndex = 0,\n          cIndex = 0;\n        for (i = 0, ii = figures.length; i < ii; i++) {\n          var figure = figures[i],\n            ps = figure.coords,\n            cs = figure.colors;\n          switch (figure.type) {\n            case \"lattice\":\n              var cols = figure.verticesPerRow;\n              rows = ps.length / cols | 0;\n              for (var row = 1; row < rows; row++) {\n                var offset = row * cols + 1;\n                for (var col = 1; col < cols; col++, offset++) {\n                  coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n                  coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n                  coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n                  coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n                  coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n                  coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n                  colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n                  colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n                  colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n                  colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n                  colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n                  colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n                  colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n                  colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n                  colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n                  coords[pIndex + 6] = coords[pIndex + 2];\n                  coords[pIndex + 7] = coords[pIndex + 3];\n                  coords[pIndex + 8] = coords[pIndex + 4];\n                  coords[pIndex + 9] = coords[pIndex + 5];\n                  coords[pIndex + 10] = coordsMap[ps[offset]];\n                  coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n                  colors[cIndex + 9] = colors[cIndex + 3];\n                  colors[cIndex + 10] = colors[cIndex + 4];\n                  colors[cIndex + 11] = colors[cIndex + 5];\n                  colors[cIndex + 12] = colors[cIndex + 6];\n                  colors[cIndex + 13] = colors[cIndex + 7];\n                  colors[cIndex + 14] = colors[cIndex + 8];\n                  colors[cIndex + 15] = colorsMap[cs[offset]];\n                  colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n                  colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n                  pIndex += 12;\n                  cIndex += 18;\n                }\n              }\n              break;\n            case \"triangles\":\n              for (var j = 0, jj = ps.length; j < jj; j++) {\n                coords[pIndex] = coordsMap[ps[j]];\n                coords[pIndex + 1] = coordsMap[ps[j] + 1];\n                colors[cIndex] = colorsMap[cs[j]];\n                colors[cIndex + 1] = colorsMap[cs[j] + 1];\n                colors[cIndex + 2] = colorsMap[cs[j] + 2];\n                pIndex += 2;\n                cIndex += 3;\n              }\n              break;\n          }\n        }\n        if (backgroundColor) {\n          gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\n        } else {\n          gl.clearColor(0, 0, 0, 0);\n        }\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        var coordsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(cache.positionLocation);\n        gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n        var colorsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(cache.colorLocation);\n        gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\n        gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n        gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n        gl.drawArrays(gl.TRIANGLES, 0, count);\n        gl.flush();\n        gl.deleteBuffer(coordsBuffer);\n        gl.deleteBuffer(colorsBuffer);\n        return canvas;\n      }\n      return {\n        tryInitGL() {\n          try {\n            generateGL();\n            return !!currentGL;\n          } catch (ex) {}\n          return false;\n        },\n        composeSMask,\n        drawFigures,\n        cleanup() {\n          if (smaskCache && smaskCache.canvas) {\n            smaskCache.canvas.width = 0;\n            smaskCache.canvas.height = 0;\n          }\n          if (figuresCache && figuresCache.canvas) {\n            figuresCache.canvas.width = 0;\n            figuresCache.canvas.height = 0;\n          }\n          smaskCache = null;\n          figuresCache = null;\n        }\n      };\n    }();\n\n    /***/\n  }), ( /* 16 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.renderTextLayer = void 0;\n    var _util = __w_pdfjs_require__(1);\n    var renderTextLayer = function renderTextLayerClosure() {\n      var MAX_TEXT_DIVS_TO_RENDER = 100000;\n      var NonWhitespaceRegexp = /\\S/;\n      function isAllWhitespace(str) {\n        return !NonWhitespaceRegexp.test(str);\n      }\n      function appendText(task, geom, styles) {\n        var textDiv = document.createElement(\"span\");\n        var textDivProperties = {\n          angle: 0,\n          canvasWidth: 0,\n          isWhitespace: false,\n          originalTransform: null,\n          paddingBottom: 0,\n          paddingLeft: 0,\n          paddingRight: 0,\n          paddingTop: 0,\n          scale: 1\n        };\n        task._textDivs.push(textDiv);\n        if (isAllWhitespace(geom.str)) {\n          textDivProperties.isWhitespace = true;\n          task._textDivProperties.set(textDiv, textDivProperties);\n          return;\n        }\n        var tx = _util.Util.transform(task._viewport.transform, geom.transform);\n        var angle = Math.atan2(tx[1], tx[0]);\n        var style = styles[geom.fontName];\n        if (style.vertical) {\n          angle += Math.PI / 2;\n        }\n        var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n        var fontAscent = fontHeight;\n        if (style.ascent) {\n          fontAscent = style.ascent * fontAscent;\n        } else if (style.descent) {\n          fontAscent = (1 + style.descent) * fontAscent;\n        }\n        let left, top;\n        if (angle === 0) {\n          left = tx[4];\n          top = tx[5] - fontAscent;\n        } else {\n          left = tx[4] + fontAscent * Math.sin(angle);\n          top = tx[5] - fontAscent * Math.cos(angle);\n        }\n        textDiv.style.left = `${left}px`;\n        textDiv.style.top = `${top}px`;\n        textDiv.style.fontSize = `${fontHeight}px`;\n        textDiv.style.fontFamily = style.fontFamily;\n        textDiv.textContent = geom.str;\n        if (task._fontInspectorEnabled) {\n          textDiv.dataset.fontName = geom.fontName;\n        }\n        if (angle !== 0) {\n          textDivProperties.angle = angle * (180 / Math.PI);\n        }\n        if (geom.str.length > 1) {\n          if (style.vertical) {\n            textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n          } else {\n            textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n          }\n        }\n        task._textDivProperties.set(textDiv, textDivProperties);\n        if (task._textContentStream) {\n          task._layoutText(textDiv);\n        }\n        if (task._enhanceTextSelection) {\n          var angleCos = 1,\n            angleSin = 0;\n          if (angle !== 0) {\n            angleCos = Math.cos(angle);\n            angleSin = Math.sin(angle);\n          }\n          var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n          var divHeight = fontHeight;\n          var m, b;\n          if (angle !== 0) {\n            m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n            b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n          } else {\n            b = [left, top, left + divWidth, top + divHeight];\n          }\n          task._bounds.push({\n            left: b[0],\n            top: b[1],\n            right: b[2],\n            bottom: b[3],\n            div: textDiv,\n            size: [divWidth, divHeight],\n            m\n          });\n        }\n      }\n      function render(task) {\n        if (task._canceled) {\n          return;\n        }\n        var textDivs = task._textDivs;\n        var capability = task._capability;\n        var textDivsLength = textDivs.length;\n        if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n          task._renderingDone = true;\n          capability.resolve();\n          return;\n        }\n        if (!task._textContentStream) {\n          for (var i = 0; i < textDivsLength; i++) {\n            task._layoutText(textDivs[i]);\n          }\n        }\n        task._renderingDone = true;\n        capability.resolve();\n      }\n      function expand(task) {\n        var bounds = task._bounds;\n        var viewport = task._viewport;\n        var expanded = expandBounds(viewport.width, viewport.height, bounds);\n        for (var i = 0; i < expanded.length; i++) {\n          var div = bounds[i].div;\n          var divProperties = task._textDivProperties.get(div);\n          if (divProperties.angle === 0) {\n            divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n            divProperties.paddingTop = bounds[i].top - expanded[i].top;\n            divProperties.paddingRight = expanded[i].right - bounds[i].right;\n            divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n            task._textDivProperties.set(div, divProperties);\n            continue;\n          }\n          var e = expanded[i],\n            b = bounds[i];\n          var m = b.m,\n            c = m[0],\n            s = m[1];\n          var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n          var ts = new Float64Array(64);\n          points.forEach(function (p, i) {\n            var t = _util.Util.applyTransform(p, m);\n            ts[i + 0] = c && (e.left - t[0]) / c;\n            ts[i + 4] = s && (e.top - t[1]) / s;\n            ts[i + 8] = c && (e.right - t[0]) / c;\n            ts[i + 12] = s && (e.bottom - t[1]) / s;\n            ts[i + 16] = s && (e.left - t[0]) / -s;\n            ts[i + 20] = c && (e.top - t[1]) / c;\n            ts[i + 24] = s && (e.right - t[0]) / -s;\n            ts[i + 28] = c && (e.bottom - t[1]) / c;\n            ts[i + 32] = c && (e.left - t[0]) / -c;\n            ts[i + 36] = s && (e.top - t[1]) / -s;\n            ts[i + 40] = c && (e.right - t[0]) / -c;\n            ts[i + 44] = s && (e.bottom - t[1]) / -s;\n            ts[i + 48] = s && (e.left - t[0]) / s;\n            ts[i + 52] = c && (e.top - t[1]) / -c;\n            ts[i + 56] = s && (e.right - t[0]) / s;\n            ts[i + 60] = c && (e.bottom - t[1]) / -c;\n          });\n          var findPositiveMin = function (ts, offset, count) {\n            var result = 0;\n            for (var i = 0; i < count; i++) {\n              var t = ts[offset++];\n              if (t > 0) {\n                result = result ? Math.min(t, result) : t;\n              }\n            }\n            return result;\n          };\n          var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n          divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n          divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n          divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n          divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n          task._textDivProperties.set(div, divProperties);\n        }\n      }\n      function expandBounds(width, height, boxes) {\n        var bounds = boxes.map(function (box, i) {\n          return {\n            x1: box.left,\n            y1: box.top,\n            x2: box.right,\n            y2: box.bottom,\n            index: i,\n            x1New: undefined,\n            x2New: undefined\n          };\n        });\n        expandBoundsLTR(width, bounds);\n        var expanded = new Array(boxes.length);\n        bounds.forEach(function (b) {\n          var i = b.index;\n          expanded[i] = {\n            left: b.x1New,\n            top: 0,\n            right: b.x2New,\n            bottom: 0\n          };\n        });\n        boxes.map(function (box, i) {\n          var e = expanded[i],\n            b = bounds[i];\n          b.x1 = box.top;\n          b.y1 = width - e.right;\n          b.x2 = box.bottom;\n          b.y2 = width - e.left;\n          b.index = i;\n          b.x1New = undefined;\n          b.x2New = undefined;\n        });\n        expandBoundsLTR(height, bounds);\n        bounds.forEach(function (b) {\n          var i = b.index;\n          expanded[i].top = b.x1New;\n          expanded[i].bottom = b.x2New;\n        });\n        return expanded;\n      }\n      function expandBoundsLTR(width, bounds) {\n        bounds.sort(function (a, b) {\n          return a.x1 - b.x1 || a.index - b.index;\n        });\n        var fakeBoundary = {\n          x1: -Infinity,\n          y1: -Infinity,\n          x2: 0,\n          y2: Infinity,\n          index: -1,\n          x1New: 0,\n          x2New: 0\n        };\n        var horizon = [{\n          start: -Infinity,\n          end: Infinity,\n          boundary: fakeBoundary\n        }];\n        bounds.forEach(function (boundary) {\n          var i = 0;\n          while (i < horizon.length && horizon[i].end <= boundary.y1) {\n            i++;\n          }\n          var j = horizon.length - 1;\n          while (j >= 0 && horizon[j].start >= boundary.y2) {\n            j--;\n          }\n          var horizonPart, affectedBoundary;\n          var q,\n            k,\n            maxXNew = -Infinity;\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            var xNew;\n            if (affectedBoundary.x2 > boundary.x1) {\n              xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n            } else if (affectedBoundary.x2New === undefined) {\n              xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n            } else {\n              xNew = affectedBoundary.x2New;\n            }\n            if (xNew > maxXNew) {\n              maxXNew = xNew;\n            }\n          }\n          boundary.x1New = maxXNew;\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            if (affectedBoundary.x2New === undefined) {\n              if (affectedBoundary.x2 > boundary.x1) {\n                if (affectedBoundary.index > boundary.index) {\n                  affectedBoundary.x2New = affectedBoundary.x2;\n                }\n              } else {\n                affectedBoundary.x2New = maxXNew;\n              }\n            } else if (affectedBoundary.x2New > maxXNew) {\n              affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n            }\n          }\n          var changedHorizon = [],\n            lastBoundary = null;\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            var useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n            if (lastBoundary === useBoundary) {\n              changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n            } else {\n              changedHorizon.push({\n                start: horizonPart.start,\n                end: horizonPart.end,\n                boundary: useBoundary\n              });\n              lastBoundary = useBoundary;\n            }\n          }\n          if (horizon[i].start < boundary.y1) {\n            changedHorizon[0].start = boundary.y1;\n            changedHorizon.unshift({\n              start: horizon[i].start,\n              end: boundary.y1,\n              boundary: horizon[i].boundary\n            });\n          }\n          if (boundary.y2 < horizon[j].end) {\n            changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n            changedHorizon.push({\n              start: boundary.y2,\n              end: horizon[j].end,\n              boundary: horizon[j].boundary\n            });\n          }\n          for (q = i; q <= j; q++) {\n            horizonPart = horizon[q];\n            affectedBoundary = horizonPart.boundary;\n            if (affectedBoundary.x2New !== undefined) {\n              continue;\n            }\n            var used = false;\n            for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n              used = horizon[k].boundary === affectedBoundary;\n            }\n            for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n              used = horizon[k].boundary === affectedBoundary;\n            }\n            for (k = 0; !used && k < changedHorizon.length; k++) {\n              used = changedHorizon[k].boundary === affectedBoundary;\n            }\n            if (!used) {\n              affectedBoundary.x2New = maxXNew;\n            }\n          }\n          Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n        });\n        horizon.forEach(function (horizonPart) {\n          var affectedBoundary = horizonPart.boundary;\n          if (affectedBoundary.x2New === undefined) {\n            affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n          }\n        });\n      }\n      function TextLayerRenderTask({\n        textContent,\n        textContentStream,\n        container,\n        viewport,\n        textDivs,\n        textContentItemsStr,\n        enhanceTextSelection\n      }) {\n        this._textContent = textContent;\n        this._textContentStream = textContentStream;\n        this._container = container;\n        this._viewport = viewport;\n        this._textDivs = textDivs || [];\n        this._textContentItemsStr = textContentItemsStr || [];\n        this._enhanceTextSelection = !!enhanceTextSelection;\n        this._fontInspectorEnabled = !!(globalThis.FontInspector && globalThis.FontInspector.enabled);\n        this._reader = null;\n        this._layoutTextLastFontSize = null;\n        this._layoutTextLastFontFamily = null;\n        this._layoutTextCtx = null;\n        this._textDivProperties = new WeakMap();\n        this._renderingDone = false;\n        this._canceled = false;\n        this._capability = (0, _util.createPromiseCapability)();\n        this._renderTimer = null;\n        this._bounds = [];\n        this._capability.promise.finally(() => {\n          if (this._layoutTextCtx) {\n            this._layoutTextCtx.canvas.width = 0;\n            this._layoutTextCtx.canvas.height = 0;\n            this._layoutTextCtx = null;\n          }\n        }).catch(() => {});\n      }\n      TextLayerRenderTask.prototype = {\n        get promise() {\n          return this._capability.promise;\n        },\n        cancel: function TextLayer_cancel() {\n          this._canceled = true;\n          if (this._reader) {\n            this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n            this._reader = null;\n          }\n          if (this._renderTimer !== null) {\n            clearTimeout(this._renderTimer);\n            this._renderTimer = null;\n          }\n          this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n        },\n        _processItems(items, styleCache) {\n          for (let i = 0, len = items.length; i < len; i++) {\n            this._textContentItemsStr.push(items[i].str);\n            appendText(this, items[i], styleCache);\n          }\n        },\n        _layoutText(textDiv) {\n          const textDivProperties = this._textDivProperties.get(textDiv);\n          if (textDivProperties.isWhitespace) {\n            return;\n          }\n          let transform = \"\";\n          if (textDivProperties.canvasWidth !== 0) {\n            const {\n              fontSize,\n              fontFamily\n            } = textDiv.style;\n            if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n              this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n              this._layoutTextLastFontSize = fontSize;\n              this._layoutTextLastFontFamily = fontFamily;\n            }\n            const {\n              width\n            } = this._layoutTextCtx.measureText(textDiv.textContent);\n            if (width > 0) {\n              textDivProperties.scale = textDivProperties.canvasWidth / width;\n              transform = `scaleX(${textDivProperties.scale})`;\n            }\n          }\n          if (textDivProperties.angle !== 0) {\n            transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n          }\n          if (transform.length > 0) {\n            if (this._enhanceTextSelection) {\n              textDivProperties.originalTransform = transform;\n            }\n            textDiv.style.transform = transform;\n          }\n          this._textDivProperties.set(textDiv, textDivProperties);\n          this._container.appendChild(textDiv);\n        },\n        _render: function TextLayer_render(timeout) {\n          const capability = (0, _util.createPromiseCapability)();\n          let styleCache = Object.create(null);\n          const canvas = document.createElement(\"canvas\");\n          canvas.mozOpaque = true;\n          this._layoutTextCtx = canvas.getContext(\"2d\", {\n            alpha: false\n          });\n          if (this._textContent) {\n            const textItems = this._textContent.items;\n            const textStyles = this._textContent.styles;\n            this._processItems(textItems, textStyles);\n            capability.resolve();\n          } else if (this._textContentStream) {\n            const pump = () => {\n              this._reader.read().then(({\n                value,\n                done\n              }) => {\n                if (done) {\n                  capability.resolve();\n                  return;\n                }\n                Object.assign(styleCache, value.styles);\n                this._processItems(value.items, styleCache);\n                pump();\n              }, capability.reject);\n            };\n            this._reader = this._textContentStream.getReader();\n            pump();\n          } else {\n            throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n          }\n          capability.promise.then(() => {\n            styleCache = null;\n            if (!timeout) {\n              render(this);\n            } else {\n              this._renderTimer = setTimeout(() => {\n                render(this);\n                this._renderTimer = null;\n              }, timeout);\n            }\n          }, this._capability.reject);\n        },\n        expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n          if (!this._enhanceTextSelection || !this._renderingDone) {\n            return;\n          }\n          if (this._bounds !== null) {\n            expand(this);\n            this._bounds = null;\n          }\n          const transformBuf = [],\n            paddingBuf = [];\n          for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n            const div = this._textDivs[i];\n            const divProps = this._textDivProperties.get(div);\n            if (divProps.isWhitespace) {\n              continue;\n            }\n            if (expandDivs) {\n              transformBuf.length = 0;\n              paddingBuf.length = 0;\n              if (divProps.originalTransform) {\n                transformBuf.push(divProps.originalTransform);\n              }\n              if (divProps.paddingTop > 0) {\n                paddingBuf.push(`${divProps.paddingTop}px`);\n                transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n              } else {\n                paddingBuf.push(0);\n              }\n              if (divProps.paddingRight > 0) {\n                paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n              } else {\n                paddingBuf.push(0);\n              }\n              if (divProps.paddingBottom > 0) {\n                paddingBuf.push(`${divProps.paddingBottom}px`);\n              } else {\n                paddingBuf.push(0);\n              }\n              if (divProps.paddingLeft > 0) {\n                paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n                transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\n              } else {\n                paddingBuf.push(0);\n              }\n              div.style.padding = paddingBuf.join(\" \");\n              if (transformBuf.length) {\n                div.style.transform = transformBuf.join(\" \");\n              }\n            } else {\n              div.style.padding = null;\n              div.style.transform = divProps.originalTransform;\n            }\n          }\n        }\n      };\n      function renderTextLayer(renderParameters) {\n        var task = new TextLayerRenderTask({\n          textContent: renderParameters.textContent,\n          textContentStream: renderParameters.textContentStream,\n          container: renderParameters.container,\n          viewport: renderParameters.viewport,\n          textDivs: renderParameters.textDivs,\n          textContentItemsStr: renderParameters.textContentItemsStr,\n          enhanceTextSelection: renderParameters.enhanceTextSelection\n        });\n        task._render(renderParameters.timeout);\n        return task;\n      }\n      return renderTextLayer;\n    }();\n    exports.renderTextLayer = renderTextLayer;\n\n    /***/\n  }), ( /* 17 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.AnnotationLayer = void 0;\n    var _display_utils = __w_pdfjs_require__(4);\n    var _util = __w_pdfjs_require__(1);\n    class AnnotationElementFactory {\n      static create(parameters) {\n        const subtype = parameters.data.annotationType;\n        switch (subtype) {\n          case _util.AnnotationType.LINK:\n            return new LinkAnnotationElement(parameters);\n          case _util.AnnotationType.TEXT:\n            return new TextAnnotationElement(parameters);\n          case _util.AnnotationType.WIDGET:\n            const fieldType = parameters.data.fieldType;\n            switch (fieldType) {\n              case \"Tx\":\n                return new TextWidgetAnnotationElement(parameters);\n              case \"Btn\":\n                if (parameters.data.radioButton) {\n                  return new RadioButtonWidgetAnnotationElement(parameters);\n                } else if (parameters.data.checkBox) {\n                  return new CheckboxWidgetAnnotationElement(parameters);\n                }\n                return new PushButtonWidgetAnnotationElement(parameters);\n              case \"Ch\":\n                return new ChoiceWidgetAnnotationElement(parameters);\n            }\n            return new WidgetAnnotationElement(parameters);\n          case _util.AnnotationType.POPUP:\n            return new PopupAnnotationElement(parameters);\n          case _util.AnnotationType.FREETEXT:\n            return new FreeTextAnnotationElement(parameters);\n          case _util.AnnotationType.LINE:\n            return new LineAnnotationElement(parameters);\n          case _util.AnnotationType.SQUARE:\n            return new SquareAnnotationElement(parameters);\n          case _util.AnnotationType.CIRCLE:\n            return new CircleAnnotationElement(parameters);\n          case _util.AnnotationType.POLYLINE:\n            return new PolylineAnnotationElement(parameters);\n          case _util.AnnotationType.CARET:\n            return new CaretAnnotationElement(parameters);\n          case _util.AnnotationType.INK:\n            return new InkAnnotationElement(parameters);\n          case _util.AnnotationType.POLYGON:\n            return new PolygonAnnotationElement(parameters);\n          case _util.AnnotationType.HIGHLIGHT:\n            return new HighlightAnnotationElement(parameters);\n          case _util.AnnotationType.UNDERLINE:\n            return new UnderlineAnnotationElement(parameters);\n          case _util.AnnotationType.SQUIGGLY:\n            return new SquigglyAnnotationElement(parameters);\n          case _util.AnnotationType.STRIKEOUT:\n            return new StrikeOutAnnotationElement(parameters);\n          case _util.AnnotationType.STAMP:\n            return new StampAnnotationElement(parameters);\n          case _util.AnnotationType.FILEATTACHMENT:\n            return new FileAttachmentAnnotationElement(parameters);\n          default:\n            return new AnnotationElement(parameters);\n        }\n      }\n    }\n    class AnnotationElement {\n      constructor(parameters, isRenderable = false, ignoreBorder = false) {\n        this.isRenderable = isRenderable;\n        this.data = parameters.data;\n        this.layer = parameters.layer;\n        this.page = parameters.page;\n        this.viewport = parameters.viewport;\n        this.linkService = parameters.linkService;\n        this.downloadManager = parameters.downloadManager;\n        this.imageResourcesPath = parameters.imageResourcesPath;\n        this.renderInteractiveForms = parameters.renderInteractiveForms;\n        this.svgFactory = parameters.svgFactory;\n        if (isRenderable) {\n          this.container = this._createContainer(ignoreBorder);\n        }\n      }\n      _createContainer(ignoreBorder = false) {\n        const data = this.data,\n          page = this.page,\n          viewport = this.viewport;\n        const container = document.createElement(\"section\");\n        let width = data.rect[2] - data.rect[0];\n        let height = data.rect[3] - data.rect[1];\n        container.setAttribute(\"data-annotation-id\", data.id);\n        const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n        container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n        container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n        if (!ignoreBorder && data.borderStyle.width > 0) {\n          container.style.borderWidth = `${data.borderStyle.width}px`;\n          if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n            width = width - 2 * data.borderStyle.width;\n            height = height - 2 * data.borderStyle.width;\n          }\n          const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n          const verticalRadius = data.borderStyle.verticalCornerRadius;\n          if (horizontalRadius > 0 || verticalRadius > 0) {\n            const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n            container.style.borderRadius = radius;\n          }\n          switch (data.borderStyle.style) {\n            case _util.AnnotationBorderStyleType.SOLID:\n              container.style.borderStyle = \"solid\";\n              break;\n            case _util.AnnotationBorderStyleType.DASHED:\n              container.style.borderStyle = \"dashed\";\n              break;\n            case _util.AnnotationBorderStyleType.BEVELED:\n              (0, _util.warn)(\"Unimplemented border style: beveled\");\n              break;\n            case _util.AnnotationBorderStyleType.INSET:\n              (0, _util.warn)(\"Unimplemented border style: inset\");\n              break;\n            case _util.AnnotationBorderStyleType.UNDERLINE:\n              container.style.borderBottomStyle = \"solid\";\n              break;\n            default:\n              break;\n          }\n          if (data.color) {\n            container.style.borderColor = _util.Util.makeCssRgb(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n          } else {\n            container.style.borderWidth = 0;\n          }\n        }\n        container.style.left = `${rect[0]}px`;\n        container.style.top = `${rect[1]}px`;\n        container.style.width = `${width}px`;\n        container.style.height = `${height}px`;\n        return container;\n      }\n      _createPopup(container, trigger, data) {\n        if (!trigger) {\n          trigger = document.createElement(\"div\");\n          trigger.style.height = container.style.height;\n          trigger.style.width = container.style.width;\n          container.appendChild(trigger);\n        }\n        const popupElement = new PopupElement({\n          container,\n          trigger,\n          color: data.color,\n          title: data.title,\n          modificationDate: data.modificationDate,\n          contents: data.contents,\n          hideWrapper: true\n        });\n        const popup = popupElement.render();\n        popup.style.left = container.style.width;\n        container.appendChild(popup);\n      }\n      render() {\n        (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n      }\n    }\n    class LinkAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action);\n        super(parameters, isRenderable);\n      }\n      render() {\n        this.container.className = \"linkAnnotation\";\n        const {\n          data,\n          linkService\n        } = this;\n        const link = document.createElement(\"a\");\n        if (data.url) {\n          (0, _display_utils.addLinkAttributes)(link, {\n            url: data.url,\n            target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n            rel: linkService.externalLinkRel,\n            enabled: linkService.externalLinkEnabled\n          });\n        } else if (data.action) {\n          this._bindNamedAction(link, data.action);\n        } else {\n          this._bindLink(link, data.dest);\n        }\n        this.container.appendChild(link);\n        return this.container;\n      }\n      _bindLink(link, destination) {\n        link.href = this.linkService.getDestinationHash(destination);\n        link.onclick = () => {\n          if (destination) {\n            this.linkService.navigateTo(destination);\n          }\n          return false;\n        };\n        if (destination) {\n          link.className = \"internalLink\";\n        }\n      }\n      _bindNamedAction(link, action) {\n        link.href = this.linkService.getAnchorUrl(\"\");\n        link.onclick = () => {\n          this.linkService.executeNamedAction(action);\n          return false;\n        };\n        link.className = \"internalLink\";\n      }\n    }\n    class TextAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable);\n      }\n      render() {\n        this.container.className = \"textAnnotation\";\n        const image = document.createElement(\"img\");\n        image.style.height = this.container.style.height;\n        image.style.width = this.container.style.width;\n        image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n        image.alt = \"[{{type}} Annotation]\";\n        image.dataset.l10nId = \"text_annotation_type\";\n        image.dataset.l10nArgs = JSON.stringify({\n          type: this.data.name\n        });\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, image, this.data);\n        }\n        this.container.appendChild(image);\n        return this.container;\n      }\n    }\n    class WidgetAnnotationElement extends AnnotationElement {\n      render() {\n        return this.container;\n      }\n    }\n    class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n      constructor(parameters) {\n        const isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n        super(parameters, isRenderable);\n      }\n      render() {\n        const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n        this.container.className = \"textWidgetAnnotation\";\n        let element = null;\n        if (this.renderInteractiveForms) {\n          if (this.data.multiLine) {\n            element = document.createElement(\"textarea\");\n            element.textContent = this.data.fieldValue;\n          } else {\n            element = document.createElement(\"input\");\n            element.type = \"text\";\n            element.setAttribute(\"value\", this.data.fieldValue);\n          }\n          element.disabled = this.data.readOnly;\n          if (this.data.maxLen !== null) {\n            element.maxLength = this.data.maxLen;\n          }\n          if (this.data.comb) {\n            const fieldWidth = this.data.rect[2] - this.data.rect[0];\n            const combWidth = fieldWidth / this.data.maxLen;\n            element.classList.add(\"comb\");\n            element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n          }\n        } else {\n          element = document.createElement(\"div\");\n          element.textContent = this.data.fieldValue;\n          element.style.verticalAlign = \"middle\";\n          element.style.display = \"table-cell\";\n          let font = null;\n          if (this.data.fontRefName && this.page.commonObjs.has(this.data.fontRefName)) {\n            font = this.page.commonObjs.get(this.data.fontRefName);\n          }\n          this._setTextStyle(element, font);\n        }\n        if (this.data.textAlignment !== null) {\n          element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n        }\n        this.container.appendChild(element);\n        return this.container;\n      }\n      _setTextStyle(element, font) {\n        const style = element.style;\n        style.fontSize = `${this.data.fontSize}px`;\n        style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n        if (!font) {\n          return;\n        }\n        let bold = \"normal\";\n        if (font.black) {\n          bold = \"900\";\n        } else if (font.bold) {\n          bold = \"bold\";\n        }\n        style.fontWeight = bold;\n        style.fontStyle = font.italic ? \"italic\" : \"normal\";\n        const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n        const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n        style.fontFamily = fontFamily + fallbackName;\n      }\n    }\n    class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n      constructor(parameters) {\n        super(parameters, parameters.renderInteractiveForms);\n      }\n      render() {\n        this.container.className = \"buttonWidgetAnnotation checkBox\";\n        const element = document.createElement(\"input\");\n        element.disabled = this.data.readOnly;\n        element.type = \"checkbox\";\n        if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n          element.setAttribute(\"checked\", true);\n        }\n        this.container.appendChild(element);\n        return this.container;\n      }\n    }\n    class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n      constructor(parameters) {\n        super(parameters, parameters.renderInteractiveForms);\n      }\n      render() {\n        this.container.className = \"buttonWidgetAnnotation radioButton\";\n        const element = document.createElement(\"input\");\n        element.disabled = this.data.readOnly;\n        element.type = \"radio\";\n        element.name = this.data.fieldName;\n        if (this.data.fieldValue === this.data.buttonValue) {\n          element.setAttribute(\"checked\", true);\n        }\n        this.container.appendChild(element);\n        return this.container;\n      }\n    }\n    class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n      render() {\n        const container = super.render();\n        container.className = \"buttonWidgetAnnotation pushButton\";\n        return container;\n      }\n    }\n    class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n      constructor(parameters) {\n        super(parameters, parameters.renderInteractiveForms);\n      }\n      render() {\n        this.container.className = \"choiceWidgetAnnotation\";\n        const selectElement = document.createElement(\"select\");\n        selectElement.disabled = this.data.readOnly;\n        if (!this.data.combo) {\n          selectElement.size = this.data.options.length;\n          if (this.data.multiSelect) {\n            selectElement.multiple = true;\n          }\n        }\n        for (const option of this.data.options) {\n          const optionElement = document.createElement(\"option\");\n          optionElement.textContent = option.displayValue;\n          optionElement.value = option.exportValue;\n          if (this.data.fieldValue.includes(option.displayValue)) {\n            optionElement.setAttribute(\"selected\", true);\n          }\n          selectElement.appendChild(optionElement);\n        }\n        this.container.appendChild(selectElement);\n        return this.container;\n      }\n    }\n    class PopupAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable);\n      }\n      render() {\n        const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n        this.container.className = \"popupAnnotation\";\n        if (IGNORE_TYPES.includes(this.data.parentType)) {\n          return this.container;\n        }\n        const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n        const parentElement = this.layer.querySelector(selector);\n        if (!parentElement) {\n          return this.container;\n        }\n        const popup = new PopupElement({\n          container: this.container,\n          trigger: parentElement,\n          color: this.data.color,\n          title: this.data.title,\n          modificationDate: this.data.modificationDate,\n          contents: this.data.contents\n        });\n        const parentLeft = parseFloat(parentElement.style.left);\n        const parentWidth = parseFloat(parentElement.style.width);\n        this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${parentElement.style.top}`;\n        this.container.style.left = `${parentLeft + parentWidth}px`;\n        this.container.appendChild(popup.render());\n        return this.container;\n      }\n    }\n    class PopupElement {\n      constructor(parameters) {\n        this.container = parameters.container;\n        this.trigger = parameters.trigger;\n        this.color = parameters.color;\n        this.title = parameters.title;\n        this.modificationDate = parameters.modificationDate;\n        this.contents = parameters.contents;\n        this.hideWrapper = parameters.hideWrapper || false;\n        this.pinned = false;\n      }\n      render() {\n        const BACKGROUND_ENLIGHT = 0.7;\n        const wrapper = document.createElement(\"div\");\n        wrapper.className = \"popupWrapper\";\n        this.hideElement = this.hideWrapper ? wrapper : this.container;\n        this.hideElement.setAttribute(\"hidden\", true);\n        const popup = document.createElement(\"div\");\n        popup.className = \"popup\";\n        const color = this.color;\n        if (color) {\n          const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n          const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n          const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n          popup.style.backgroundColor = _util.Util.makeCssRgb(r | 0, g | 0, b | 0);\n        }\n        const title = document.createElement(\"h1\");\n        title.textContent = this.title;\n        popup.appendChild(title);\n        const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n        if (dateObject) {\n          const modificationDate = document.createElement(\"span\");\n          modificationDate.textContent = \"{{date}}, {{time}}\";\n          modificationDate.dataset.l10nId = \"annotation_date_string\";\n          modificationDate.dataset.l10nArgs = JSON.stringify({\n            date: dateObject.toLocaleDateString(),\n            time: dateObject.toLocaleTimeString()\n          });\n          popup.appendChild(modificationDate);\n        }\n        const contents = this._formatContents(this.contents);\n        popup.appendChild(contents);\n        this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n        this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n        this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n        popup.addEventListener(\"click\", this._hide.bind(this, true));\n        wrapper.appendChild(popup);\n        return wrapper;\n      }\n      _formatContents(contents) {\n        const p = document.createElement(\"p\");\n        const lines = contents.split(/(?:\\r\\n?|\\n)/);\n        for (let i = 0, ii = lines.length; i < ii; ++i) {\n          const line = lines[i];\n          p.appendChild(document.createTextNode(line));\n          if (i < ii - 1) {\n            p.appendChild(document.createElement(\"br\"));\n          }\n        }\n        return p;\n      }\n      _toggle() {\n        if (this.pinned) {\n          this._hide(true);\n        } else {\n          this._show(true);\n        }\n      }\n      _show(pin = false) {\n        if (pin) {\n          this.pinned = true;\n        }\n        if (this.hideElement.hasAttribute(\"hidden\")) {\n          this.hideElement.removeAttribute(\"hidden\");\n          this.container.style.zIndex += 1;\n        }\n      }\n      _hide(unpin = true) {\n        if (unpin) {\n          this.pinned = false;\n        }\n        if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n          this.hideElement.setAttribute(\"hidden\", true);\n          this.container.style.zIndex -= 1;\n        }\n      }\n    }\n    class FreeTextAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"freeTextAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class LineAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"lineAnnotation\";\n        const data = this.data;\n        const width = data.rect[2] - data.rect[0];\n        const height = data.rect[3] - data.rect[1];\n        const svg = this.svgFactory.create(width, height);\n        const line = this.svgFactory.createElement(\"svg:line\");\n        line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n        line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n        line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n        line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n        line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n        line.setAttribute(\"stroke\", \"transparent\");\n        svg.appendChild(line);\n        this.container.append(svg);\n        this._createPopup(this.container, line, data);\n        return this.container;\n      }\n    }\n    class SquareAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"squareAnnotation\";\n        const data = this.data;\n        const width = data.rect[2] - data.rect[0];\n        const height = data.rect[3] - data.rect[1];\n        const svg = this.svgFactory.create(width, height);\n        const borderWidth = data.borderStyle.width;\n        const square = this.svgFactory.createElement(\"svg:rect\");\n        square.setAttribute(\"x\", borderWidth / 2);\n        square.setAttribute(\"y\", borderWidth / 2);\n        square.setAttribute(\"width\", width - borderWidth);\n        square.setAttribute(\"height\", height - borderWidth);\n        square.setAttribute(\"stroke-width\", borderWidth || 1);\n        square.setAttribute(\"stroke\", \"transparent\");\n        square.setAttribute(\"fill\", \"none\");\n        svg.appendChild(square);\n        this.container.append(svg);\n        this._createPopup(this.container, square, data);\n        return this.container;\n      }\n    }\n    class CircleAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"circleAnnotation\";\n        const data = this.data;\n        const width = data.rect[2] - data.rect[0];\n        const height = data.rect[3] - data.rect[1];\n        const svg = this.svgFactory.create(width, height);\n        const borderWidth = data.borderStyle.width;\n        const circle = this.svgFactory.createElement(\"svg:ellipse\");\n        circle.setAttribute(\"cx\", width / 2);\n        circle.setAttribute(\"cy\", height / 2);\n        circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n        circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n        circle.setAttribute(\"stroke-width\", borderWidth || 1);\n        circle.setAttribute(\"stroke\", \"transparent\");\n        circle.setAttribute(\"fill\", \"none\");\n        svg.appendChild(circle);\n        this.container.append(svg);\n        this._createPopup(this.container, circle, data);\n        return this.container;\n      }\n    }\n    class PolylineAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n        this.containerClassName = \"polylineAnnotation\";\n        this.svgElementName = \"svg:polyline\";\n      }\n      render() {\n        this.container.className = this.containerClassName;\n        const data = this.data;\n        const width = data.rect[2] - data.rect[0];\n        const height = data.rect[3] - data.rect[1];\n        const svg = this.svgFactory.create(width, height);\n        let points = [];\n        for (const coordinate of data.vertices) {\n          const x = coordinate.x - data.rect[0];\n          const y = data.rect[3] - coordinate.y;\n          points.push(x + \",\" + y);\n        }\n        points = points.join(\" \");\n        const polyline = this.svgFactory.createElement(this.svgElementName);\n        polyline.setAttribute(\"points\", points);\n        polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n        polyline.setAttribute(\"stroke\", \"transparent\");\n        polyline.setAttribute(\"fill\", \"none\");\n        svg.appendChild(polyline);\n        this.container.append(svg);\n        this._createPopup(this.container, polyline, data);\n        return this.container;\n      }\n    }\n    class PolygonAnnotationElement extends PolylineAnnotationElement {\n      constructor(parameters) {\n        super(parameters);\n        this.containerClassName = \"polygonAnnotation\";\n        this.svgElementName = \"svg:polygon\";\n      }\n    }\n    class CaretAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"caretAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class InkAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n        this.containerClassName = \"inkAnnotation\";\n        this.svgElementName = \"svg:polyline\";\n      }\n      render() {\n        this.container.className = this.containerClassName;\n        const data = this.data;\n        const width = data.rect[2] - data.rect[0];\n        const height = data.rect[3] - data.rect[1];\n        const svg = this.svgFactory.create(width, height);\n        for (const inkList of data.inkLists) {\n          let points = [];\n          for (const coordinate of inkList) {\n            const x = coordinate.x - data.rect[0];\n            const y = data.rect[3] - coordinate.y;\n            points.push(`${x},${y}`);\n          }\n          points = points.join(\" \");\n          const polyline = this.svgFactory.createElement(this.svgElementName);\n          polyline.setAttribute(\"points\", points);\n          polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n          polyline.setAttribute(\"stroke\", \"transparent\");\n          polyline.setAttribute(\"fill\", \"none\");\n          this._createPopup(this.container, polyline, data);\n          svg.appendChild(polyline);\n        }\n        this.container.append(svg);\n        return this.container;\n      }\n    }\n    class HighlightAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"highlightAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class UnderlineAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"underlineAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class SquigglyAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"squigglyAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class StrikeOutAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"strikeoutAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class StampAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n        super(parameters, isRenderable, true);\n      }\n      render() {\n        this.container.className = \"stampAnnotation\";\n        if (!this.data.hasPopup) {\n          this._createPopup(this.container, null, this.data);\n        }\n        return this.container;\n      }\n    }\n    class FileAttachmentAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n        super(parameters, true);\n        const {\n          filename,\n          content\n        } = this.data.file;\n        this.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n        this.content = content;\n        if (this.linkService.eventBus) {\n          this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n            source: this,\n            id: (0, _util.stringToPDFString)(filename),\n            filename,\n            content\n          });\n        }\n      }\n      render() {\n        this.container.className = \"fileAttachmentAnnotation\";\n        const trigger = document.createElement(\"div\");\n        trigger.style.height = this.container.style.height;\n        trigger.style.width = this.container.style.width;\n        trigger.addEventListener(\"dblclick\", this._download.bind(this));\n        if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n          this._createPopup(this.container, trigger, this.data);\n        }\n        this.container.appendChild(trigger);\n        return this.container;\n      }\n      _download() {\n        if (!this.downloadManager) {\n          (0, _util.warn)(\"Download cannot be started due to unavailable download manager\");\n          return;\n        }\n        this.downloadManager.downloadData(this.content, this.filename, \"\");\n      }\n    }\n    class AnnotationLayer {\n      static render(parameters) {\n        const sortedAnnotations = [],\n          popupAnnotations = [];\n        for (const data of parameters.annotations) {\n          if (!data) {\n            continue;\n          }\n          if (data.annotationType === _util.AnnotationType.POPUP) {\n            popupAnnotations.push(data);\n            continue;\n          }\n          sortedAnnotations.push(data);\n        }\n        if (popupAnnotations.length) {\n          sortedAnnotations.push(...popupAnnotations);\n        }\n        for (const data of sortedAnnotations) {\n          const element = AnnotationElementFactory.create({\n            data,\n            layer: parameters.div,\n            page: parameters.page,\n            viewport: parameters.viewport,\n            linkService: parameters.linkService,\n            downloadManager: parameters.downloadManager,\n            imageResourcesPath: parameters.imageResourcesPath || \"\",\n            renderInteractiveForms: parameters.renderInteractiveForms || false,\n            svgFactory: new _display_utils.DOMSVGFactory()\n          });\n          if (element.isRenderable) {\n            parameters.div.appendChild(element.render());\n          }\n        }\n      }\n      static update(parameters) {\n        for (const data of parameters.annotations) {\n          const element = parameters.div.querySelector(`[data-annotation-id=\"${data.id}\"]`);\n          if (element) {\n            element.style.transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n          }\n        }\n        parameters.div.removeAttribute(\"hidden\");\n      }\n    }\n    exports.AnnotationLayer = AnnotationLayer;\n\n    /***/\n  }), ( /* 18 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.SVGGraphics = void 0;\n    var _util = __w_pdfjs_require__(1);\n    var _display_utils = __w_pdfjs_require__(4);\n    var _is_node = __w_pdfjs_require__(7);\n    let SVGGraphics = function () {\n      throw new Error(\"Not implemented: SVGGraphics\");\n    };\n    exports.SVGGraphics = SVGGraphics;\n    {\n      const SVG_DEFAULTS = {\n        fontStyle: \"normal\",\n        fontWeight: \"normal\",\n        fillColor: \"#000000\"\n      };\n      const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n      const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n      const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n      const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n      const convertImgDataToPng = function () {\n        const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n        const CHUNK_WRAPPER_SIZE = 12;\n        const crcTable = new Int32Array(256);\n        for (let i = 0; i < 256; i++) {\n          let c = i;\n          for (let h = 0; h < 8; h++) {\n            if (c & 1) {\n              c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n            } else {\n              c = c >> 1 & 0x7fffffff;\n            }\n          }\n          crcTable[i] = c;\n        }\n        function crc32(data, start, end) {\n          let crc = -1;\n          for (let i = start; i < end; i++) {\n            const a = (crc ^ data[i]) & 0xff;\n            const b = crcTable[a];\n            crc = crc >>> 8 ^ b;\n          }\n          return crc ^ -1;\n        }\n        function writePngChunk(type, body, data, offset) {\n          let p = offset;\n          const len = body.length;\n          data[p] = len >> 24 & 0xff;\n          data[p + 1] = len >> 16 & 0xff;\n          data[p + 2] = len >> 8 & 0xff;\n          data[p + 3] = len & 0xff;\n          p += 4;\n          data[p] = type.charCodeAt(0) & 0xff;\n          data[p + 1] = type.charCodeAt(1) & 0xff;\n          data[p + 2] = type.charCodeAt(2) & 0xff;\n          data[p + 3] = type.charCodeAt(3) & 0xff;\n          p += 4;\n          data.set(body, p);\n          p += body.length;\n          const crc = crc32(data, offset + 4, p);\n          data[p] = crc >> 24 & 0xff;\n          data[p + 1] = crc >> 16 & 0xff;\n          data[p + 2] = crc >> 8 & 0xff;\n          data[p + 3] = crc & 0xff;\n        }\n        function adler32(data, start, end) {\n          let a = 1;\n          let b = 0;\n          for (let i = start; i < end; ++i) {\n            a = (a + (data[i] & 0xff)) % 65521;\n            b = (b + a) % 65521;\n          }\n          return b << 16 | a;\n        }\n        function deflateSync(literals) {\n          if (!_is_node.isNodeJS) {\n            return deflateSyncUncompressed(literals);\n          }\n          try {\n            let input;\n            if (parseInt(process.versions.node) >= 8) {\n              input = literals;\n            } else {\n              input = Buffer.from(literals);\n            }\n            const output = require(\"zlib\").deflateSync(input, {\n              level: 9\n            });\n            return output instanceof Uint8Array ? output : new Uint8Array(output);\n          } catch (e) {\n            (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n          }\n          return deflateSyncUncompressed(literals);\n        }\n        function deflateSyncUncompressed(literals) {\n          let len = literals.length;\n          const maxBlockLength = 0xffff;\n          const deflateBlocks = Math.ceil(len / maxBlockLength);\n          const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n          let pi = 0;\n          idat[pi++] = 0x78;\n          idat[pi++] = 0x9c;\n          let pos = 0;\n          while (len > maxBlockLength) {\n            idat[pi++] = 0x00;\n            idat[pi++] = 0xff;\n            idat[pi++] = 0xff;\n            idat[pi++] = 0x00;\n            idat[pi++] = 0x00;\n            idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n            pi += maxBlockLength;\n            pos += maxBlockLength;\n            len -= maxBlockLength;\n          }\n          idat[pi++] = 0x01;\n          idat[pi++] = len & 0xff;\n          idat[pi++] = len >> 8 & 0xff;\n          idat[pi++] = ~len & 0xffff & 0xff;\n          idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n          idat.set(literals.subarray(pos), pi);\n          pi += literals.length - pos;\n          const adler = adler32(literals, 0, literals.length);\n          idat[pi++] = adler >> 24 & 0xff;\n          idat[pi++] = adler >> 16 & 0xff;\n          idat[pi++] = adler >> 8 & 0xff;\n          idat[pi++] = adler & 0xff;\n          return idat;\n        }\n        function encode(imgData, kind, forceDataSchema, isMask) {\n          const width = imgData.width;\n          const height = imgData.height;\n          let bitDepth, colorType, lineSize;\n          const bytes = imgData.data;\n          switch (kind) {\n            case _util.ImageKind.GRAYSCALE_1BPP:\n              colorType = 0;\n              bitDepth = 1;\n              lineSize = width + 7 >> 3;\n              break;\n            case _util.ImageKind.RGB_24BPP:\n              colorType = 2;\n              bitDepth = 8;\n              lineSize = width * 3;\n              break;\n            case _util.ImageKind.RGBA_32BPP:\n              colorType = 6;\n              bitDepth = 8;\n              lineSize = width * 4;\n              break;\n            default:\n              throw new Error(\"invalid format\");\n          }\n          const literals = new Uint8Array((1 + lineSize) * height);\n          let offsetLiterals = 0,\n            offsetBytes = 0;\n          for (let y = 0; y < height; ++y) {\n            literals[offsetLiterals++] = 0;\n            literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n            offsetBytes += lineSize;\n            offsetLiterals += lineSize;\n          }\n          if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n            offsetLiterals = 0;\n            for (let y = 0; y < height; y++) {\n              offsetLiterals++;\n              for (let i = 0; i < lineSize; i++) {\n                literals[offsetLiterals++] ^= 0xff;\n              }\n            }\n          }\n          const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n          const idat = deflateSync(literals);\n          const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n          const data = new Uint8Array(pngLength);\n          let offset = 0;\n          data.set(PNG_HEADER, offset);\n          offset += PNG_HEADER.length;\n          writePngChunk(\"IHDR\", ihdr, data, offset);\n          offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n          writePngChunk(\"IDATA\", idat, data, offset);\n          offset += CHUNK_WRAPPER_SIZE + idat.length;\n          writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n          return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n        }\n        return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n          const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n          return encode(imgData, kind, forceDataSchema, isMask);\n        };\n      }();\n      class SVGExtraState {\n        constructor() {\n          this.fontSizeScale = 1;\n          this.fontWeight = SVG_DEFAULTS.fontWeight;\n          this.fontSize = 0;\n          this.textMatrix = _util.IDENTITY_MATRIX;\n          this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n          this.leading = 0;\n          this.textRenderingMode = _util.TextRenderingMode.FILL;\n          this.textMatrixScale = 1;\n          this.x = 0;\n          this.y = 0;\n          this.lineX = 0;\n          this.lineY = 0;\n          this.charSpacing = 0;\n          this.wordSpacing = 0;\n          this.textHScale = 1;\n          this.textRise = 0;\n          this.fillColor = SVG_DEFAULTS.fillColor;\n          this.strokeColor = \"#000000\";\n          this.fillAlpha = 1;\n          this.strokeAlpha = 1;\n          this.lineWidth = 1;\n          this.lineJoin = \"\";\n          this.lineCap = \"\";\n          this.miterLimit = 0;\n          this.dashArray = [];\n          this.dashPhase = 0;\n          this.dependencies = [];\n          this.activeClipUrl = null;\n          this.clipGroup = null;\n          this.maskId = \"\";\n        }\n        clone() {\n          return Object.create(this);\n        }\n        setCurrentPoint(x, y) {\n          this.x = x;\n          this.y = y;\n        }\n      }\n      function opListToTree(opList) {\n        let opTree = [];\n        const tmp = [];\n        for (const opListElement of opList) {\n          if (opListElement.fn === \"save\") {\n            opTree.push({\n              fnId: 92,\n              fn: \"group\",\n              items: []\n            });\n            tmp.push(opTree);\n            opTree = opTree[opTree.length - 1].items;\n            continue;\n          }\n          if (opListElement.fn === \"restore\") {\n            opTree = tmp.pop();\n          } else {\n            opTree.push(opListElement);\n          }\n        }\n        return opTree;\n      }\n      function pf(value) {\n        if (Number.isInteger(value)) {\n          return value.toString();\n        }\n        const s = value.toFixed(10);\n        let i = s.length - 1;\n        if (s[i] !== \"0\") {\n          return s;\n        }\n        do {\n          i--;\n        } while (s[i] === \"0\");\n        return s.substring(0, s[i] === \".\" ? i : i + 1);\n      }\n      function pm(m) {\n        if (m[4] === 0 && m[5] === 0) {\n          if (m[1] === 0 && m[2] === 0) {\n            if (m[0] === 1 && m[3] === 1) {\n              return \"\";\n            }\n            return `scale(${pf(m[0])} ${pf(m[3])})`;\n          }\n          if (m[0] === m[3] && m[1] === -m[2]) {\n            const a = Math.acos(m[0]) * 180 / Math.PI;\n            return `rotate(${pf(a)})`;\n          }\n        } else {\n          if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n            return `translate(${pf(m[4])} ${pf(m[5])})`;\n          }\n        }\n        return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n      }\n      let clipCount = 0;\n      let maskCount = 0;\n      let shadingCount = 0;\n      exports.SVGGraphics = SVGGraphics = class SVGGraphics {\n        constructor(commonObjs, objs, forceDataSchema) {\n          this.svgFactory = new _display_utils.DOMSVGFactory();\n          this.current = new SVGExtraState();\n          this.transformMatrix = _util.IDENTITY_MATRIX;\n          this.transformStack = [];\n          this.extraStack = [];\n          this.commonObjs = commonObjs;\n          this.objs = objs;\n          this.pendingClip = null;\n          this.pendingEOFill = false;\n          this.embedFonts = false;\n          this.embeddedFonts = Object.create(null);\n          this.cssStyle = null;\n          this.forceDataSchema = !!forceDataSchema;\n          this._operatorIdMapping = [];\n          for (const op in _util.OPS) {\n            this._operatorIdMapping[_util.OPS[op]] = op;\n          }\n        }\n        save() {\n          this.transformStack.push(this.transformMatrix);\n          const old = this.current;\n          this.extraStack.push(old);\n          this.current = old.clone();\n        }\n        restore() {\n          this.transformMatrix = this.transformStack.pop();\n          this.current = this.extraStack.pop();\n          this.pendingClip = null;\n          this.tgrp = null;\n        }\n        group(items) {\n          this.save();\n          this.executeOpTree(items);\n          this.restore();\n        }\n        loadDependencies(operatorList) {\n          const fnArray = operatorList.fnArray;\n          const argsArray = operatorList.argsArray;\n          for (let i = 0, ii = fnArray.length; i < ii; i++) {\n            if (fnArray[i] !== _util.OPS.dependency) {\n              continue;\n            }\n            for (const obj of argsArray[i]) {\n              const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n              const promise = new Promise(resolve => {\n                objsPool.get(obj, resolve);\n              });\n              this.current.dependencies.push(promise);\n            }\n          }\n          return Promise.all(this.current.dependencies);\n        }\n        transform(a, b, c, d, e, f) {\n          const transformMatrix = [a, b, c, d, e, f];\n          this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n          this.tgrp = null;\n        }\n        getSVG(operatorList, viewport) {\n          this.viewport = viewport;\n          const svgElement = this._initialize(viewport);\n          return this.loadDependencies(operatorList).then(() => {\n            this.transformMatrix = _util.IDENTITY_MATRIX;\n            this.executeOpTree(this.convertOpList(operatorList));\n            return svgElement;\n          });\n        }\n        convertOpList(operatorList) {\n          const operatorIdMapping = this._operatorIdMapping;\n          const argsArray = operatorList.argsArray;\n          const fnArray = operatorList.fnArray;\n          const opList = [];\n          for (let i = 0, ii = fnArray.length; i < ii; i++) {\n            const fnId = fnArray[i];\n            opList.push({\n              fnId,\n              fn: operatorIdMapping[fnId],\n              args: argsArray[i]\n            });\n          }\n          return opListToTree(opList);\n        }\n        executeOpTree(opTree) {\n          for (const opTreeElement of opTree) {\n            const fn = opTreeElement.fn;\n            const fnId = opTreeElement.fnId;\n            const args = opTreeElement.args;\n            switch (fnId | 0) {\n              case _util.OPS.beginText:\n                this.beginText();\n                break;\n              case _util.OPS.dependency:\n                break;\n              case _util.OPS.setLeading:\n                this.setLeading(args);\n                break;\n              case _util.OPS.setLeadingMoveText:\n                this.setLeadingMoveText(args[0], args[1]);\n                break;\n              case _util.OPS.setFont:\n                this.setFont(args);\n                break;\n              case _util.OPS.showText:\n                this.showText(args[0]);\n                break;\n              case _util.OPS.showSpacedText:\n                this.showText(args[0]);\n                break;\n              case _util.OPS.endText:\n                this.endText();\n                break;\n              case _util.OPS.moveText:\n                this.moveText(args[0], args[1]);\n                break;\n              case _util.OPS.setCharSpacing:\n                this.setCharSpacing(args[0]);\n                break;\n              case _util.OPS.setWordSpacing:\n                this.setWordSpacing(args[0]);\n                break;\n              case _util.OPS.setHScale:\n                this.setHScale(args[0]);\n                break;\n              case _util.OPS.setTextMatrix:\n                this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                break;\n              case _util.OPS.setTextRise:\n                this.setTextRise(args[0]);\n                break;\n              case _util.OPS.setTextRenderingMode:\n                this.setTextRenderingMode(args[0]);\n                break;\n              case _util.OPS.setLineWidth:\n                this.setLineWidth(args[0]);\n                break;\n              case _util.OPS.setLineJoin:\n                this.setLineJoin(args[0]);\n                break;\n              case _util.OPS.setLineCap:\n                this.setLineCap(args[0]);\n                break;\n              case _util.OPS.setMiterLimit:\n                this.setMiterLimit(args[0]);\n                break;\n              case _util.OPS.setFillRGBColor:\n                this.setFillRGBColor(args[0], args[1], args[2]);\n                break;\n              case _util.OPS.setStrokeRGBColor:\n                this.setStrokeRGBColor(args[0], args[1], args[2]);\n                break;\n              case _util.OPS.setStrokeColorN:\n                this.setStrokeColorN(args);\n                break;\n              case _util.OPS.setFillColorN:\n                this.setFillColorN(args);\n                break;\n              case _util.OPS.shadingFill:\n                this.shadingFill(args[0]);\n                break;\n              case _util.OPS.setDash:\n                this.setDash(args[0], args[1]);\n                break;\n              case _util.OPS.setRenderingIntent:\n                this.setRenderingIntent(args[0]);\n                break;\n              case _util.OPS.setFlatness:\n                this.setFlatness(args[0]);\n                break;\n              case _util.OPS.setGState:\n                this.setGState(args[0]);\n                break;\n              case _util.OPS.fill:\n                this.fill();\n                break;\n              case _util.OPS.eoFill:\n                this.eoFill();\n                break;\n              case _util.OPS.stroke:\n                this.stroke();\n                break;\n              case _util.OPS.fillStroke:\n                this.fillStroke();\n                break;\n              case _util.OPS.eoFillStroke:\n                this.eoFillStroke();\n                break;\n              case _util.OPS.clip:\n                this.clip(\"nonzero\");\n                break;\n              case _util.OPS.eoClip:\n                this.clip(\"evenodd\");\n                break;\n              case _util.OPS.paintSolidColorImageMask:\n                this.paintSolidColorImageMask();\n                break;\n              case _util.OPS.paintJpegXObject:\n                this.paintJpegXObject(args[0], args[1], args[2]);\n                break;\n              case _util.OPS.paintImageXObject:\n                this.paintImageXObject(args[0]);\n                break;\n              case _util.OPS.paintInlineImageXObject:\n                this.paintInlineImageXObject(args[0]);\n                break;\n              case _util.OPS.paintImageMaskXObject:\n                this.paintImageMaskXObject(args[0]);\n                break;\n              case _util.OPS.paintFormXObjectBegin:\n                this.paintFormXObjectBegin(args[0], args[1]);\n                break;\n              case _util.OPS.paintFormXObjectEnd:\n                this.paintFormXObjectEnd();\n                break;\n              case _util.OPS.closePath:\n                this.closePath();\n                break;\n              case _util.OPS.closeStroke:\n                this.closeStroke();\n                break;\n              case _util.OPS.closeFillStroke:\n                this.closeFillStroke();\n                break;\n              case _util.OPS.closeEOFillStroke:\n                this.closeEOFillStroke();\n                break;\n              case _util.OPS.nextLine:\n                this.nextLine();\n                break;\n              case _util.OPS.transform:\n                this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                break;\n              case _util.OPS.constructPath:\n                this.constructPath(args[0], args[1]);\n                break;\n              case _util.OPS.endPath:\n                this.endPath();\n                break;\n              case 92:\n                this.group(opTreeElement.items);\n                break;\n              default:\n                (0, _util.warn)(`Unimplemented operator ${fn}`);\n                break;\n            }\n          }\n        }\n        setWordSpacing(wordSpacing) {\n          this.current.wordSpacing = wordSpacing;\n        }\n        setCharSpacing(charSpacing) {\n          this.current.charSpacing = charSpacing;\n        }\n        nextLine() {\n          this.moveText(0, this.current.leading);\n        }\n        setTextMatrix(a, b, c, d, e, f) {\n          const current = this.current;\n          current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n          current.textMatrixScale = Math.sqrt(a * a + b * b);\n          current.x = current.lineX = 0;\n          current.y = current.lineY = 0;\n          current.xcoords = [];\n          current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n          current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n          current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n          current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n          current.txtElement = this.svgFactory.createElement(\"svg:text\");\n          current.txtElement.appendChild(current.tspan);\n        }\n        beginText() {\n          const current = this.current;\n          current.x = current.lineX = 0;\n          current.y = current.lineY = 0;\n          current.textMatrix = _util.IDENTITY_MATRIX;\n          current.lineMatrix = _util.IDENTITY_MATRIX;\n          current.textMatrixScale = 1;\n          current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n          current.txtElement = this.svgFactory.createElement(\"svg:text\");\n          current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n          current.xcoords = [];\n        }\n        moveText(x, y) {\n          const current = this.current;\n          current.x = current.lineX += x;\n          current.y = current.lineY += y;\n          current.xcoords = [];\n          current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n          current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n          current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n          current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n        }\n        showText(glyphs) {\n          const current = this.current;\n          const font = current.font;\n          const fontSize = current.fontSize;\n          if (fontSize === 0) {\n            return;\n          }\n          const charSpacing = current.charSpacing;\n          const wordSpacing = current.wordSpacing;\n          const fontDirection = current.fontDirection;\n          const textHScale = current.textHScale * fontDirection;\n          const vertical = font.vertical;\n          const widthAdvanceScale = fontSize * current.fontMatrix[0];\n          let x = 0;\n          for (const glyph of glyphs) {\n            if (glyph === null) {\n              x += fontDirection * wordSpacing;\n              continue;\n            } else if ((0, _util.isNum)(glyph)) {\n              x += -glyph * fontSize * 0.001;\n              continue;\n            }\n            const width = glyph.width;\n            const character = glyph.fontChar;\n            const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n            const charWidth = width * widthAdvanceScale + spacing * fontDirection;\n            if (!glyph.isInFont && !font.missingFile) {\n              x += charWidth;\n              continue;\n            }\n            current.xcoords.push(current.x + x);\n            current.tspan.textContent += character;\n            x += charWidth;\n          }\n          if (vertical) {\n            current.y -= x * textHScale;\n          } else {\n            current.x += x * textHScale;\n          }\n          current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n          current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n          current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n          current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n          if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n            current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n          }\n          if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n            current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n          }\n          const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n          if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n              current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n            }\n            if (current.fillAlpha < 1) {\n              current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n            }\n          } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n            current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n          } else {\n            current.tspan.setAttributeNS(null, \"fill\", \"none\");\n          }\n          if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            const lineWidthScale = 1 / (current.textMatrixScale || 1);\n            this._setStrokeAttributes(current.tspan, lineWidthScale);\n          }\n          let textMatrix = current.textMatrix;\n          if (current.textRise !== 0) {\n            textMatrix = textMatrix.slice();\n            textMatrix[5] += current.textRise;\n          }\n          current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n          current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n          current.txtElement.appendChild(current.tspan);\n          current.txtgrp.appendChild(current.txtElement);\n          this._ensureTransformGroup().appendChild(current.txtElement);\n        }\n        setLeadingMoveText(x, y) {\n          this.setLeading(-y);\n          this.moveText(x, y);\n        }\n        addFontStyle(fontObj) {\n          if (!this.cssStyle) {\n            this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n            this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n            this.defs.appendChild(this.cssStyle);\n          }\n          const url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n          this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n        }\n        setFont(details) {\n          const current = this.current;\n          const fontObj = this.commonObjs.get(details[0]);\n          let size = details[1];\n          current.font = fontObj;\n          if (this.embedFonts && fontObj.data && !this.embeddedFonts[fontObj.loadedName]) {\n            this.addFontStyle(fontObj);\n            this.embeddedFonts[fontObj.loadedName] = fontObj;\n          }\n          current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n          let bold = \"normal\";\n          if (fontObj.black) {\n            bold = \"900\";\n          } else if (fontObj.bold) {\n            bold = \"bold\";\n          }\n          const italic = fontObj.italic ? \"italic\" : \"normal\";\n          if (size < 0) {\n            size = -size;\n            current.fontDirection = -1;\n          } else {\n            current.fontDirection = 1;\n          }\n          current.fontSize = size;\n          current.fontFamily = fontObj.loadedName;\n          current.fontWeight = bold;\n          current.fontStyle = italic;\n          current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n          current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n          current.xcoords = [];\n        }\n        endText() {\n          const current = this.current;\n          if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) {\n            current.element = current.txtElement;\n            this.clip(\"nonzero\");\n            this.endPath();\n          }\n        }\n        setLineWidth(width) {\n          if (width > 0) {\n            this.current.lineWidth = width;\n          }\n        }\n        setLineCap(style) {\n          this.current.lineCap = LINE_CAP_STYLES[style];\n        }\n        setLineJoin(style) {\n          this.current.lineJoin = LINE_JOIN_STYLES[style];\n        }\n        setMiterLimit(limit) {\n          this.current.miterLimit = limit;\n        }\n        setStrokeAlpha(strokeAlpha) {\n          this.current.strokeAlpha = strokeAlpha;\n        }\n        setStrokeRGBColor(r, g, b) {\n          this.current.strokeColor = _util.Util.makeCssRgb(r, g, b);\n        }\n        setFillAlpha(fillAlpha) {\n          this.current.fillAlpha = fillAlpha;\n        }\n        setFillRGBColor(r, g, b) {\n          this.current.fillColor = _util.Util.makeCssRgb(r, g, b);\n          this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n          this.current.xcoords = [];\n        }\n        setStrokeColorN(args) {\n          this.current.strokeColor = this._makeColorN_Pattern(args);\n        }\n        setFillColorN(args) {\n          this.current.fillColor = this._makeColorN_Pattern(args);\n        }\n        shadingFill(args) {\n          const width = this.viewport.width;\n          const height = this.viewport.height;\n          const inv = _util.Util.inverseTransform(this.transformMatrix);\n          const bl = _util.Util.applyTransform([0, 0], inv);\n          const br = _util.Util.applyTransform([0, height], inv);\n          const ul = _util.Util.applyTransform([width, 0], inv);\n          const ur = _util.Util.applyTransform([width, height], inv);\n          const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n          const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n          const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n          const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n          const rect = this.svgFactory.createElement(\"svg:rect\");\n          rect.setAttributeNS(null, \"x\", x0);\n          rect.setAttributeNS(null, \"y\", y0);\n          rect.setAttributeNS(null, \"width\", x1 - x0);\n          rect.setAttributeNS(null, \"height\", y1 - y0);\n          rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n          this._ensureTransformGroup().appendChild(rect);\n        }\n        _makeColorN_Pattern(args) {\n          if (args[0] === \"TilingPattern\") {\n            return this._makeTilingPattern(args);\n          }\n          return this._makeShadingPattern(args);\n        }\n        _makeTilingPattern(args) {\n          const color = args[1];\n          const operatorList = args[2];\n          const matrix = args[3] || _util.IDENTITY_MATRIX;\n          const [x0, y0, x1, y1] = args[4];\n          const xstep = args[5];\n          const ystep = args[6];\n          const paintType = args[7];\n          const tilingId = `shading${shadingCount++}`;\n          const [tx0, ty0] = _util.Util.applyTransform([x0, y0], matrix);\n          const [tx1, ty1] = _util.Util.applyTransform([x1, y1], matrix);\n          const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n          const txstep = xstep * xscale;\n          const tystep = ystep * yscale;\n          const tiling = this.svgFactory.createElement(\"svg:pattern\");\n          tiling.setAttributeNS(null, \"id\", tilingId);\n          tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n          tiling.setAttributeNS(null, \"width\", txstep);\n          tiling.setAttributeNS(null, \"height\", tystep);\n          tiling.setAttributeNS(null, \"x\", `${tx0}`);\n          tiling.setAttributeNS(null, \"y\", `${ty0}`);\n          const svg = this.svg;\n          const transformMatrix = this.transformMatrix;\n          const fillColor = this.current.fillColor;\n          const strokeColor = this.current.strokeColor;\n          const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n          this.svg = bbox;\n          this.transformMatrix = matrix;\n          if (paintType === 2) {\n            const cssColor = _util.Util.makeCssRgb(...color);\n            this.current.fillColor = cssColor;\n            this.current.strokeColor = cssColor;\n          }\n          this.executeOpTree(this.convertOpList(operatorList));\n          this.svg = svg;\n          this.transformMatrix = transformMatrix;\n          this.current.fillColor = fillColor;\n          this.current.strokeColor = strokeColor;\n          tiling.appendChild(bbox.childNodes[0]);\n          this.defs.appendChild(tiling);\n          return `url(#${tilingId})`;\n        }\n        _makeShadingPattern(args) {\n          switch (args[0]) {\n            case \"RadialAxial\":\n              const shadingId = `shading${shadingCount++}`;\n              const colorStops = args[3];\n              let gradient;\n              switch (args[1]) {\n                case \"axial\":\n                  const point0 = args[4];\n                  const point1 = args[5];\n                  gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                  gradient.setAttributeNS(null, \"id\", shadingId);\n                  gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                  gradient.setAttributeNS(null, \"x1\", point0[0]);\n                  gradient.setAttributeNS(null, \"y1\", point0[1]);\n                  gradient.setAttributeNS(null, \"x2\", point1[0]);\n                  gradient.setAttributeNS(null, \"y2\", point1[1]);\n                  break;\n                case \"radial\":\n                  const focalPoint = args[4];\n                  const circlePoint = args[5];\n                  const focalRadius = args[6];\n                  const circleRadius = args[7];\n                  gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                  gradient.setAttributeNS(null, \"id\", shadingId);\n                  gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                  gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                  gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                  gradient.setAttributeNS(null, \"r\", circleRadius);\n                  gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                  gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                  gradient.setAttributeNS(null, \"fr\", focalRadius);\n                  break;\n                default:\n                  throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n              }\n              for (const colorStop of colorStops) {\n                const stop = this.svgFactory.createElement(\"svg:stop\");\n                stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                gradient.appendChild(stop);\n              }\n              this.defs.appendChild(gradient);\n              return `url(#${shadingId})`;\n            case \"Mesh\":\n              (0, _util.warn)(\"Unimplemented pattern Mesh\");\n              return null;\n            case \"Dummy\":\n              return \"hotpink\";\n            default:\n              throw new Error(`Unknown IR type: ${args[0]}`);\n          }\n        }\n        setDash(dashArray, dashPhase) {\n          this.current.dashArray = dashArray;\n          this.current.dashPhase = dashPhase;\n        }\n        constructPath(ops, args) {\n          const current = this.current;\n          let x = current.x,\n            y = current.y;\n          let d = [];\n          let j = 0;\n          for (const op of ops) {\n            switch (op | 0) {\n              case _util.OPS.rectangle:\n                x = args[j++];\n                y = args[j++];\n                const width = args[j++];\n                const height = args[j++];\n                const xw = x + width;\n                const yh = y + height;\n                d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                break;\n              case _util.OPS.moveTo:\n                x = args[j++];\n                y = args[j++];\n                d.push(\"M\", pf(x), pf(y));\n                break;\n              case _util.OPS.lineTo:\n                x = args[j++];\n                y = args[j++];\n                d.push(\"L\", pf(x), pf(y));\n                break;\n              case _util.OPS.curveTo:\n                x = args[j + 4];\n                y = args[j + 5];\n                d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                j += 6;\n                break;\n              case _util.OPS.curveTo2:\n                d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                x = args[j + 2];\n                y = args[j + 3];\n                j += 4;\n                break;\n              case _util.OPS.curveTo3:\n                x = args[j + 2];\n                y = args[j + 3];\n                d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                j += 4;\n                break;\n              case _util.OPS.closePath:\n                d.push(\"Z\");\n                break;\n            }\n          }\n          d = d.join(\" \");\n          if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n            d = current.path.getAttributeNS(null, \"d\") + d;\n          } else {\n            current.path = this.svgFactory.createElement(\"svg:path\");\n            this._ensureTransformGroup().appendChild(current.path);\n          }\n          current.path.setAttributeNS(null, \"d\", d);\n          current.path.setAttributeNS(null, \"fill\", \"none\");\n          current.element = current.path;\n          current.setCurrentPoint(x, y);\n        }\n        endPath() {\n          const current = this.current;\n          current.path = null;\n          if (!this.pendingClip) {\n            return;\n          }\n          if (!current.element) {\n            this.pendingClip = null;\n            return;\n          }\n          const clipId = `clippath${clipCount++}`;\n          const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n          clipPath.setAttributeNS(null, \"id\", clipId);\n          clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n          const clipElement = current.element.cloneNode(true);\n          if (this.pendingClip === \"evenodd\") {\n            clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n          } else {\n            clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n          }\n          this.pendingClip = null;\n          clipPath.appendChild(clipElement);\n          this.defs.appendChild(clipPath);\n          if (current.activeClipUrl) {\n            current.clipGroup = null;\n            this.extraStack.forEach(function (prev) {\n              prev.clipGroup = null;\n            });\n            clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n          }\n          current.activeClipUrl = `url(#${clipId})`;\n          this.tgrp = null;\n        }\n        clip(type) {\n          this.pendingClip = type;\n        }\n        closePath() {\n          const current = this.current;\n          if (current.path) {\n            const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n            current.path.setAttributeNS(null, \"d\", d);\n          }\n        }\n        setLeading(leading) {\n          this.current.leading = -leading;\n        }\n        setTextRise(textRise) {\n          this.current.textRise = textRise;\n        }\n        setTextRenderingMode(textRenderingMode) {\n          this.current.textRenderingMode = textRenderingMode;\n        }\n        setHScale(scale) {\n          this.current.textHScale = scale / 100;\n        }\n        setRenderingIntent(intent) {}\n        setFlatness(flatness) {}\n        setGState(states) {\n          for (const [key, value] of states) {\n            switch (key) {\n              case \"LW\":\n                this.setLineWidth(value);\n                break;\n              case \"LC\":\n                this.setLineCap(value);\n                break;\n              case \"LJ\":\n                this.setLineJoin(value);\n                break;\n              case \"ML\":\n                this.setMiterLimit(value);\n                break;\n              case \"D\":\n                this.setDash(value[0], value[1]);\n                break;\n              case \"RI\":\n                this.setRenderingIntent(value);\n                break;\n              case \"FL\":\n                this.setFlatness(value);\n                break;\n              case \"Font\":\n                this.setFont(value);\n                break;\n              case \"CA\":\n                this.setStrokeAlpha(value);\n                break;\n              case \"ca\":\n                this.setFillAlpha(value);\n                break;\n              default:\n                (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n                break;\n            }\n          }\n        }\n        fill() {\n          const current = this.current;\n          if (current.element) {\n            current.element.setAttributeNS(null, \"fill\", current.fillColor);\n            current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n            this.endPath();\n          }\n        }\n        stroke() {\n          const current = this.current;\n          if (current.element) {\n            this._setStrokeAttributes(current.element);\n            current.element.setAttributeNS(null, \"fill\", \"none\");\n            this.endPath();\n          }\n        }\n        _setStrokeAttributes(element, lineWidthScale = 1) {\n          const current = this.current;\n          let dashArray = current.dashArray;\n          if (lineWidthScale !== 1 && dashArray.length > 0) {\n            dashArray = dashArray.map(function (value) {\n              return lineWidthScale * value;\n            });\n          }\n          element.setAttributeNS(null, \"stroke\", current.strokeColor);\n          element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n          element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n          element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n          element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n          element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n          element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n          element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n        }\n        eoFill() {\n          if (this.current.element) {\n            this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n          }\n          this.fill();\n        }\n        fillStroke() {\n          this.stroke();\n          this.fill();\n        }\n        eoFillStroke() {\n          if (this.current.element) {\n            this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n          }\n          this.fillStroke();\n        }\n        closeStroke() {\n          this.closePath();\n          this.stroke();\n        }\n        closeFillStroke() {\n          this.closePath();\n          this.fillStroke();\n        }\n        closeEOFillStroke() {\n          this.closePath();\n          this.eoFillStroke();\n        }\n        paintSolidColorImageMask() {\n          const rect = this.svgFactory.createElement(\"svg:rect\");\n          rect.setAttributeNS(null, \"x\", \"0\");\n          rect.setAttributeNS(null, \"y\", \"0\");\n          rect.setAttributeNS(null, \"width\", \"1px\");\n          rect.setAttributeNS(null, \"height\", \"1px\");\n          rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n          this._ensureTransformGroup().appendChild(rect);\n        }\n        paintJpegXObject(objId, w, h) {\n          const imgObj = this.objs.get(objId);\n          const imgEl = this.svgFactory.createElement(\"svg:image\");\n          imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgObj.src);\n          imgEl.setAttributeNS(null, \"width\", pf(w));\n          imgEl.setAttributeNS(null, \"height\", pf(h));\n          imgEl.setAttributeNS(null, \"x\", \"0\");\n          imgEl.setAttributeNS(null, \"y\", pf(-h));\n          imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / w)} ${pf(-1 / h)})`);\n          this._ensureTransformGroup().appendChild(imgEl);\n        }\n        paintImageXObject(objId) {\n          const imgData = this.objs.get(objId);\n          if (!imgData) {\n            (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n            return;\n          }\n          this.paintInlineImageXObject(imgData);\n        }\n        paintInlineImageXObject(imgData, mask) {\n          const width = imgData.width;\n          const height = imgData.height;\n          const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n          const cliprect = this.svgFactory.createElement(\"svg:rect\");\n          cliprect.setAttributeNS(null, \"x\", \"0\");\n          cliprect.setAttributeNS(null, \"y\", \"0\");\n          cliprect.setAttributeNS(null, \"width\", pf(width));\n          cliprect.setAttributeNS(null, \"height\", pf(height));\n          this.current.element = cliprect;\n          this.clip(\"nonzero\");\n          const imgEl = this.svgFactory.createElement(\"svg:image\");\n          imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n          imgEl.setAttributeNS(null, \"x\", \"0\");\n          imgEl.setAttributeNS(null, \"y\", pf(-height));\n          imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n          imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n          imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n          if (mask) {\n            mask.appendChild(imgEl);\n          } else {\n            this._ensureTransformGroup().appendChild(imgEl);\n          }\n        }\n        paintImageMaskXObject(imgData) {\n          const current = this.current;\n          const width = imgData.width;\n          const height = imgData.height;\n          const fillColor = current.fillColor;\n          current.maskId = `mask${maskCount++}`;\n          const mask = this.svgFactory.createElement(\"svg:mask\");\n          mask.setAttributeNS(null, \"id\", current.maskId);\n          const rect = this.svgFactory.createElement(\"svg:rect\");\n          rect.setAttributeNS(null, \"x\", \"0\");\n          rect.setAttributeNS(null, \"y\", \"0\");\n          rect.setAttributeNS(null, \"width\", pf(width));\n          rect.setAttributeNS(null, \"height\", pf(height));\n          rect.setAttributeNS(null, \"fill\", fillColor);\n          rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n          this.defs.appendChild(mask);\n          this._ensureTransformGroup().appendChild(rect);\n          this.paintInlineImageXObject(imgData, mask);\n        }\n        paintFormXObjectBegin(matrix, bbox) {\n          if (Array.isArray(matrix) && matrix.length === 6) {\n            this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n          }\n          if (bbox) {\n            const width = bbox[2] - bbox[0];\n            const height = bbox[3] - bbox[1];\n            const cliprect = this.svgFactory.createElement(\"svg:rect\");\n            cliprect.setAttributeNS(null, \"x\", bbox[0]);\n            cliprect.setAttributeNS(null, \"y\", bbox[1]);\n            cliprect.setAttributeNS(null, \"width\", pf(width));\n            cliprect.setAttributeNS(null, \"height\", pf(height));\n            this.current.element = cliprect;\n            this.clip(\"nonzero\");\n            this.endPath();\n          }\n        }\n        paintFormXObjectEnd() {}\n        _initialize(viewport) {\n          const svg = this.svgFactory.create(viewport.width, viewport.height);\n          const definitions = this.svgFactory.createElement(\"svg:defs\");\n          svg.appendChild(definitions);\n          this.defs = definitions;\n          const rootGroup = this.svgFactory.createElement(\"svg:g\");\n          rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n          svg.appendChild(rootGroup);\n          this.svg = rootGroup;\n          return svg;\n        }\n        _ensureClipGroup() {\n          if (!this.current.clipGroup) {\n            const clipGroup = this.svgFactory.createElement(\"svg:g\");\n            clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n            this.svg.appendChild(clipGroup);\n            this.current.clipGroup = clipGroup;\n          }\n          return this.current.clipGroup;\n        }\n        _ensureTransformGroup() {\n          if (!this.tgrp) {\n            this.tgrp = this.svgFactory.createElement(\"svg:g\");\n            this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n            if (this.current.activeClipUrl) {\n              this._ensureClipGroup().appendChild(this.tgrp);\n            } else {\n              this.svg.appendChild(this.tgrp);\n            }\n          }\n          return this.tgrp;\n        }\n      };\n    }\n\n    /***/\n  }), ( /* 19 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.PDFNodeStream = void 0;\n    var _util = __w_pdfjs_require__(1);\n    var _network_utils = __w_pdfjs_require__(20);\n    const fs = require(\"fs\");\n    const http = require(\"http\");\n    const https = require(\"https\");\n    const url = require(\"url\");\n    const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n    function parseUrl(sourceUrl) {\n      const parsedUrl = url.parse(sourceUrl);\n      if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n        return parsedUrl;\n      }\n      if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n        return url.parse(`file:///${sourceUrl}`);\n      }\n      if (!parsedUrl.host) {\n        parsedUrl.protocol = \"file:\";\n      }\n      return parsedUrl;\n    }\n    class PDFNodeStream {\n      constructor(source) {\n        this.source = source;\n        this.url = parseUrl(source.url);\n        this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n        this.isFsUrl = this.url.protocol === \"file:\";\n        this.httpHeaders = this.isHttp && source.httpHeaders || {};\n        this._fullRequestReader = null;\n        this._rangeRequestReaders = [];\n      }\n      get _progressiveDataLength() {\n        return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n      }\n      getFullReader() {\n        (0, _util.assert)(!this._fullRequestReader);\n        this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n        return this._fullRequestReader;\n      }\n      getRangeReader(start, end) {\n        if (end <= this._progressiveDataLength) {\n          return null;\n        }\n        const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n        this._rangeRequestReaders.push(rangeReader);\n        return rangeReader;\n      }\n      cancelAllRequests(reason) {\n        if (this._fullRequestReader) {\n          this._fullRequestReader.cancel(reason);\n        }\n        const readers = this._rangeRequestReaders.slice(0);\n        readers.forEach(function (reader) {\n          reader.cancel(reason);\n        });\n      }\n    }\n    exports.PDFNodeStream = PDFNodeStream;\n    class BaseFullReader {\n      constructor(stream) {\n        this._url = stream.url;\n        this._done = false;\n        this._storedError = null;\n        this.onProgress = null;\n        const source = stream.source;\n        this._contentLength = source.length;\n        this._loaded = 0;\n        this._filename = null;\n        this._disableRange = source.disableRange || false;\n        this._rangeChunkSize = source.rangeChunkSize;\n        if (!this._rangeChunkSize && !this._disableRange) {\n          this._disableRange = true;\n        }\n        this._isStreamingSupported = !source.disableStream;\n        this._isRangeSupported = !source.disableRange;\n        this._readableStream = null;\n        this._readCapability = (0, _util.createPromiseCapability)();\n        this._headersCapability = (0, _util.createPromiseCapability)();\n      }\n      get headersReady() {\n        return this._headersCapability.promise;\n      }\n      get filename() {\n        return this._filename;\n      }\n      get contentLength() {\n        return this._contentLength;\n      }\n      get isRangeSupported() {\n        return this._isRangeSupported;\n      }\n      get isStreamingSupported() {\n        return this._isStreamingSupported;\n      }\n      async read() {\n        await this._readCapability.promise;\n        if (this._done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        if (this._storedError) {\n          throw this._storedError;\n        }\n        const chunk = this._readableStream.read();\n        if (chunk === null) {\n          this._readCapability = (0, _util.createPromiseCapability)();\n          return this.read();\n        }\n        this._loaded += chunk.length;\n        if (this.onProgress) {\n          this.onProgress({\n            loaded: this._loaded,\n            total: this._contentLength\n          });\n        }\n        const buffer = new Uint8Array(chunk).buffer;\n        return {\n          value: buffer,\n          done: false\n        };\n      }\n      cancel(reason) {\n        if (!this._readableStream) {\n          this._error(reason);\n          return;\n        }\n        this._readableStream.destroy(reason);\n      }\n      _error(reason) {\n        this._storedError = reason;\n        this._readCapability.resolve();\n      }\n      _setReadableStream(readableStream) {\n        this._readableStream = readableStream;\n        readableStream.on(\"readable\", () => {\n          this._readCapability.resolve();\n        });\n        readableStream.on(\"end\", () => {\n          readableStream.destroy();\n          this._done = true;\n          this._readCapability.resolve();\n        });\n        readableStream.on(\"error\", reason => {\n          this._error(reason);\n        });\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this._error(new _util.AbortException(\"streaming is disabled\"));\n        }\n        if (this._storedError) {\n          this._readableStream.destroy(this._storedError);\n        }\n      }\n    }\n    class BaseRangeReader {\n      constructor(stream) {\n        this._url = stream.url;\n        this._done = false;\n        this._storedError = null;\n        this.onProgress = null;\n        this._loaded = 0;\n        this._readableStream = null;\n        this._readCapability = (0, _util.createPromiseCapability)();\n        const source = stream.source;\n        this._isStreamingSupported = !source.disableStream;\n      }\n      get isStreamingSupported() {\n        return this._isStreamingSupported;\n      }\n      async read() {\n        await this._readCapability.promise;\n        if (this._done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        if (this._storedError) {\n          throw this._storedError;\n        }\n        const chunk = this._readableStream.read();\n        if (chunk === null) {\n          this._readCapability = (0, _util.createPromiseCapability)();\n          return this.read();\n        }\n        this._loaded += chunk.length;\n        if (this.onProgress) {\n          this.onProgress({\n            loaded: this._loaded\n          });\n        }\n        const buffer = new Uint8Array(chunk).buffer;\n        return {\n          value: buffer,\n          done: false\n        };\n      }\n      cancel(reason) {\n        if (!this._readableStream) {\n          this._error(reason);\n          return;\n        }\n        this._readableStream.destroy(reason);\n      }\n      _error(reason) {\n        this._storedError = reason;\n        this._readCapability.resolve();\n      }\n      _setReadableStream(readableStream) {\n        this._readableStream = readableStream;\n        readableStream.on(\"readable\", () => {\n          this._readCapability.resolve();\n        });\n        readableStream.on(\"end\", () => {\n          readableStream.destroy();\n          this._done = true;\n          this._readCapability.resolve();\n        });\n        readableStream.on(\"error\", reason => {\n          this._error(reason);\n        });\n        if (this._storedError) {\n          this._readableStream.destroy(this._storedError);\n        }\n      }\n    }\n    function createRequestOptions(url, headers) {\n      return {\n        protocol: url.protocol,\n        auth: url.auth,\n        host: url.hostname,\n        port: url.port,\n        path: url.path,\n        method: \"GET\",\n        headers\n      };\n    }\n    class PDFNodeStreamFullReader extends BaseFullReader {\n      constructor(stream) {\n        super(stream);\n        const handleResponse = response => {\n          if (response.statusCode === 404) {\n            const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n            this._storedError = error;\n            this._headersCapability.reject(error);\n            return;\n          }\n          this._headersCapability.resolve();\n          this._setReadableStream(response);\n          const getResponseHeader = name => {\n            return this._readableStream.headers[name.toLowerCase()];\n          };\n          const {\n            allowRangeRequests,\n            suggestedLength\n          } = (0, _network_utils.validateRangeRequestCapabilities)({\n            getResponseHeader,\n            isHttp: stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange\n          });\n          this._isRangeSupported = allowRangeRequests;\n          this._contentLength = suggestedLength || this._contentLength;\n          this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n        };\n        this._request = null;\n        if (this._url.protocol === \"http:\") {\n          this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n        } else {\n          this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n        }\n        this._request.on(\"error\", reason => {\n          this._storedError = reason;\n          this._headersCapability.reject(reason);\n        });\n        this._request.end();\n      }\n    }\n    class PDFNodeStreamRangeReader extends BaseRangeReader {\n      constructor(stream, start, end) {\n        super(stream);\n        this._httpHeaders = {};\n        for (const property in stream.httpHeaders) {\n          const value = stream.httpHeaders[property];\n          if (typeof value === \"undefined\") {\n            continue;\n          }\n          this._httpHeaders[property] = value;\n        }\n        this._httpHeaders[\"Range\"] = `bytes=${start}-${end - 1}`;\n        const handleResponse = response => {\n          if (response.statusCode === 404) {\n            const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n            this._storedError = error;\n            return;\n          }\n          this._setReadableStream(response);\n        };\n        this._request = null;\n        if (this._url.protocol === \"http:\") {\n          this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n        } else {\n          this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n        }\n        this._request.on(\"error\", reason => {\n          this._storedError = reason;\n        });\n        this._request.end();\n      }\n    }\n    class PDFNodeStreamFsFullReader extends BaseFullReader {\n      constructor(stream) {\n        super(stream);\n        let path = decodeURIComponent(this._url.path);\n        if (fileUriRegex.test(this._url.href)) {\n          path = path.replace(/^\\//, \"\");\n        }\n        fs.lstat(path, (error, stat) => {\n          if (error) {\n            if (error.code === \"ENOENT\") {\n              error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n            }\n            this._storedError = error;\n            this._headersCapability.reject(error);\n            return;\n          }\n          this._contentLength = stat.size;\n          this._setReadableStream(fs.createReadStream(path));\n          this._headersCapability.resolve();\n        });\n      }\n    }\n    class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n      constructor(stream, start, end) {\n        super(stream);\n        let path = decodeURIComponent(this._url.path);\n        if (fileUriRegex.test(this._url.href)) {\n          path = path.replace(/^\\//, \"\");\n        }\n        this._setReadableStream(fs.createReadStream(path, {\n          start,\n          end: end - 1\n        }));\n      }\n    }\n\n    /***/\n  }), ( /* 20 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.createResponseStatusError = createResponseStatusError;\n    exports.extractFilenameFromHeader = extractFilenameFromHeader;\n    exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n    exports.validateResponseStatus = validateResponseStatus;\n    var _util = __w_pdfjs_require__(1);\n    var _content_disposition = __w_pdfjs_require__(21);\n    function validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp,\n      rangeChunkSize,\n      disableRange\n    }) {\n      (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n      const returnValues = {\n        allowRangeRequests: false,\n        suggestedLength: undefined\n      };\n      const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n      if (!Number.isInteger(length)) {\n        return returnValues;\n      }\n      returnValues.suggestedLength = length;\n      if (length <= 2 * rangeChunkSize) {\n        return returnValues;\n      }\n      if (disableRange || !isHttp) {\n        return returnValues;\n      }\n      if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n        return returnValues;\n      }\n      const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n      if (contentEncoding !== \"identity\") {\n        return returnValues;\n      }\n      returnValues.allowRangeRequests = true;\n      return returnValues;\n    }\n    function extractFilenameFromHeader(getResponseHeader) {\n      const contentDisposition = getResponseHeader(\"Content-Disposition\");\n      if (contentDisposition) {\n        let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n        if (filename.includes(\"%\")) {\n          try {\n            filename = decodeURIComponent(filename);\n          } catch (ex) {}\n        }\n        if (/\\.pdf$/i.test(filename)) {\n          return filename;\n        }\n      }\n      return null;\n    }\n    function createResponseStatusError(status, url) {\n      if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n        return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n      }\n      return new _util.UnexpectedResponseException(\"Unexpected server response (\" + status + ') while retrieving PDF \"' + url + '\".', status);\n    }\n    function validateResponseStatus(status) {\n      return status === 200 || status === 206;\n    }\n\n    /***/\n  }), ( /* 21 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n    function getFilenameFromContentDispositionHeader(contentDisposition) {\n      let needsEncodingFixup = true;\n      let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n      if (tmp) {\n        tmp = tmp[1];\n        let filename = rfc2616unquote(tmp);\n        filename = unescape(filename);\n        filename = rfc5987decode(filename);\n        filename = rfc2047decode(filename);\n        return fixupEncoding(filename);\n      }\n      tmp = rfc2231getparam(contentDisposition);\n      if (tmp) {\n        const filename = rfc2047decode(tmp);\n        return fixupEncoding(filename);\n      }\n      tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n      if (tmp) {\n        tmp = tmp[1];\n        let filename = rfc2616unquote(tmp);\n        filename = rfc2047decode(filename);\n        return fixupEncoding(filename);\n      }\n      function toParamRegExp(attributePattern, flags) {\n        return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n      }\n      function textdecode(encoding, value) {\n        if (encoding) {\n          if (!/^[\\x00-\\xFF]+$/.test(value)) {\n            return value;\n          }\n          try {\n            const decoder = new TextDecoder(encoding, {\n              fatal: true\n            });\n            const bytes = Array.from(value, function (ch) {\n              return ch.charCodeAt(0) & 0xff;\n            });\n            value = decoder.decode(new Uint8Array(bytes));\n            needsEncodingFixup = false;\n          } catch (e) {\n            if (/^utf-?8$/i.test(encoding)) {\n              try {\n                value = decodeURIComponent(escape(value));\n                needsEncodingFixup = false;\n              } catch (err) {}\n            }\n          }\n        }\n        return value;\n      }\n      function fixupEncoding(value) {\n        if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n          value = textdecode(\"utf-8\", value);\n          if (needsEncodingFixup) {\n            value = textdecode(\"iso-8859-1\", value);\n          }\n        }\n        return value;\n      }\n      function rfc2231getparam(contentDisposition) {\n        const matches = [];\n        let match;\n        const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n        while ((match = iter.exec(contentDisposition)) !== null) {\n          let [, n, quot, part] = match;\n          n = parseInt(n, 10);\n          if (n in matches) {\n            if (n === 0) {\n              break;\n            }\n            continue;\n          }\n          matches[n] = [quot, part];\n        }\n        const parts = [];\n        for (let n = 0; n < matches.length; ++n) {\n          if (!(n in matches)) {\n            break;\n          }\n          let [quot, part] = matches[n];\n          part = rfc2616unquote(part);\n          if (quot) {\n            part = unescape(part);\n            if (n === 0) {\n              part = rfc5987decode(part);\n            }\n          }\n          parts.push(part);\n        }\n        return parts.join(\"\");\n      }\n      function rfc2616unquote(value) {\n        if (value.startsWith('\"')) {\n          const parts = value.slice(1).split('\\\\\"');\n          for (let i = 0; i < parts.length; ++i) {\n            const quotindex = parts[i].indexOf('\"');\n            if (quotindex !== -1) {\n              parts[i] = parts[i].slice(0, quotindex);\n              parts.length = i + 1;\n            }\n            parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n          }\n          value = parts.join('\"');\n        }\n        return value;\n      }\n      function rfc5987decode(extvalue) {\n        const encodingend = extvalue.indexOf(\"'\");\n        if (encodingend === -1) {\n          return extvalue;\n        }\n        const encoding = extvalue.slice(0, encodingend);\n        const langvalue = extvalue.slice(encodingend + 1);\n        const value = langvalue.replace(/^[^']*'/, \"\");\n        return textdecode(encoding, value);\n      }\n      function rfc2047decode(value) {\n        if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n          return value;\n        }\n        return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (_, charset, encoding, text) {\n          if (encoding === \"q\" || encoding === \"Q\") {\n            text = text.replace(/_/g, \" \");\n            text = text.replace(/=([0-9a-fA-F]{2})/g, function (_, hex) {\n              return String.fromCharCode(parseInt(hex, 16));\n            });\n            return textdecode(charset, text);\n          }\n          try {\n            text = atob(text);\n          } catch (e) {}\n          return textdecode(charset, text);\n        });\n      }\n      return \"\";\n    }\n\n    /***/\n  }), ( /* 22 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.PDFNetworkStream = void 0;\n    var _util = __w_pdfjs_require__(1);\n    var _network_utils = __w_pdfjs_require__(20);\n    ;\n    const OK_RESPONSE = 200;\n    const PARTIAL_CONTENT_RESPONSE = 206;\n    function getArrayBuffer(xhr) {\n      const data = xhr.response;\n      if (typeof data !== \"string\") {\n        return data;\n      }\n      const array = (0, _util.stringToBytes)(data);\n      return array.buffer;\n    }\n    class NetworkManager {\n      constructor(url, args) {\n        this.url = url;\n        args = args || {};\n        this.isHttp = /^https?:/i.test(url);\n        this.httpHeaders = this.isHttp && args.httpHeaders || {};\n        this.withCredentials = args.withCredentials || false;\n        this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n          return new XMLHttpRequest();\n        };\n        this.currXhrId = 0;\n        this.pendingRequests = Object.create(null);\n      }\n      requestRange(begin, end, listeners) {\n        const args = {\n          begin,\n          end\n        };\n        for (const prop in listeners) {\n          args[prop] = listeners[prop];\n        }\n        return this.request(args);\n      }\n      requestFull(listeners) {\n        return this.request(listeners);\n      }\n      request(args) {\n        const xhr = this.getXhr();\n        const xhrId = this.currXhrId++;\n        const pendingRequest = this.pendingRequests[xhrId] = {\n          xhr\n        };\n        xhr.open(\"GET\", this.url);\n        xhr.withCredentials = this.withCredentials;\n        for (const property in this.httpHeaders) {\n          const value = this.httpHeaders[property];\n          if (typeof value === \"undefined\") {\n            continue;\n          }\n          xhr.setRequestHeader(property, value);\n        }\n        if (this.isHttp && \"begin\" in args && \"end\" in args) {\n          xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n          pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n        } else {\n          pendingRequest.expectedStatus = OK_RESPONSE;\n        }\n        xhr.responseType = \"arraybuffer\";\n        if (args.onError) {\n          xhr.onerror = function (evt) {\n            args.onError(xhr.status);\n          };\n        }\n        xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n        xhr.onprogress = this.onProgress.bind(this, xhrId);\n        pendingRequest.onHeadersReceived = args.onHeadersReceived;\n        pendingRequest.onDone = args.onDone;\n        pendingRequest.onError = args.onError;\n        pendingRequest.onProgress = args.onProgress;\n        xhr.send(null);\n        return xhrId;\n      }\n      onProgress(xhrId, evt) {\n        const pendingRequest = this.pendingRequests[xhrId];\n        if (!pendingRequest) {\n          return;\n        }\n        if (pendingRequest.onProgress) {\n          pendingRequest.onProgress(evt);\n        }\n      }\n      onStateChange(xhrId, evt) {\n        const pendingRequest = this.pendingRequests[xhrId];\n        if (!pendingRequest) {\n          return;\n        }\n        const xhr = pendingRequest.xhr;\n        if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n          pendingRequest.onHeadersReceived();\n          delete pendingRequest.onHeadersReceived;\n        }\n        if (xhr.readyState !== 4) {\n          return;\n        }\n        if (!(xhrId in this.pendingRequests)) {\n          return;\n        }\n        delete this.pendingRequests[xhrId];\n        if (xhr.status === 0 && this.isHttp) {\n          if (pendingRequest.onError) {\n            pendingRequest.onError(xhr.status);\n          }\n          return;\n        }\n        const xhrStatus = xhr.status || OK_RESPONSE;\n        const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n        if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n          if (pendingRequest.onError) {\n            pendingRequest.onError(xhr.status);\n          }\n          return;\n        }\n        const chunk = getArrayBuffer(xhr);\n        if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n          const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n          const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n          pendingRequest.onDone({\n            begin: parseInt(matches[1], 10),\n            chunk\n          });\n        } else if (chunk) {\n          pendingRequest.onDone({\n            begin: 0,\n            chunk\n          });\n        } else if (pendingRequest.onError) {\n          pendingRequest.onError(xhr.status);\n        }\n      }\n      hasPendingRequests() {\n        for (const xhrId in this.pendingRequests) {\n          return true;\n        }\n        return false;\n      }\n      getRequestXhr(xhrId) {\n        return this.pendingRequests[xhrId].xhr;\n      }\n      isPendingRequest(xhrId) {\n        return xhrId in this.pendingRequests;\n      }\n      abortAllRequests() {\n        for (const xhrId in this.pendingRequests) {\n          this.abortRequest(xhrId | 0);\n        }\n      }\n      abortRequest(xhrId) {\n        const xhr = this.pendingRequests[xhrId].xhr;\n        delete this.pendingRequests[xhrId];\n        xhr.abort();\n      }\n    }\n    class PDFNetworkStream {\n      constructor(source) {\n        this._source = source;\n        this._manager = new NetworkManager(source.url, {\n          httpHeaders: source.httpHeaders,\n          withCredentials: source.withCredentials\n        });\n        this._rangeChunkSize = source.rangeChunkSize;\n        this._fullRequestReader = null;\n        this._rangeRequestReaders = [];\n      }\n      _onRangeRequestReaderClosed(reader) {\n        const i = this._rangeRequestReaders.indexOf(reader);\n        if (i >= 0) {\n          this._rangeRequestReaders.splice(i, 1);\n        }\n      }\n      getFullReader() {\n        (0, _util.assert)(!this._fullRequestReader);\n        this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n        return this._fullRequestReader;\n      }\n      getRangeReader(begin, end) {\n        const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n        reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n        this._rangeRequestReaders.push(reader);\n        return reader;\n      }\n      cancelAllRequests(reason) {\n        if (this._fullRequestReader) {\n          this._fullRequestReader.cancel(reason);\n        }\n        const readers = this._rangeRequestReaders.slice(0);\n        readers.forEach(function (reader) {\n          reader.cancel(reason);\n        });\n      }\n    }\n    exports.PDFNetworkStream = PDFNetworkStream;\n    class PDFNetworkStreamFullRequestReader {\n      constructor(manager, source) {\n        this._manager = manager;\n        const args = {\n          onHeadersReceived: this._onHeadersReceived.bind(this),\n          onDone: this._onDone.bind(this),\n          onError: this._onError.bind(this),\n          onProgress: this._onProgress.bind(this)\n        };\n        this._url = source.url;\n        this._fullRequestId = manager.requestFull(args);\n        this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n        this._disableRange = source.disableRange || false;\n        this._contentLength = source.length;\n        this._rangeChunkSize = source.rangeChunkSize;\n        if (!this._rangeChunkSize && !this._disableRange) {\n          this._disableRange = true;\n        }\n        this._isStreamingSupported = false;\n        this._isRangeSupported = false;\n        this._cachedChunks = [];\n        this._requests = [];\n        this._done = false;\n        this._storedError = undefined;\n        this._filename = null;\n        this.onProgress = null;\n      }\n      _onHeadersReceived() {\n        const fullRequestXhrId = this._fullRequestId;\n        const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n        const getResponseHeader = name => {\n          return fullRequestXhr.getResponseHeader(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength\n        } = (0, _network_utils.validateRangeRequestCapabilities)({\n          getResponseHeader,\n          isHttp: this._manager.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange\n        });\n        if (allowRangeRequests) {\n          this._isRangeSupported = true;\n        }\n        this._contentLength = suggestedLength || this._contentLength;\n        this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n        if (this._isRangeSupported) {\n          this._manager.abortRequest(fullRequestXhrId);\n        }\n        this._headersReceivedCapability.resolve();\n      }\n      _onDone(args) {\n        if (args) {\n          if (this._requests.length > 0) {\n            const requestCapability = this._requests.shift();\n            requestCapability.resolve({\n              value: args.chunk,\n              done: false\n            });\n          } else {\n            this._cachedChunks.push(args.chunk);\n          }\n        }\n        this._done = true;\n        if (this._cachedChunks.length > 0) {\n          return;\n        }\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n        this._requests = [];\n      }\n      _onError(status) {\n        const url = this._url;\n        const exception = (0, _network_utils.createResponseStatusError)(status, url);\n        this._storedError = exception;\n        this._headersReceivedCapability.reject(exception);\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.reject(exception);\n        });\n        this._requests = [];\n        this._cachedChunks = [];\n      }\n      _onProgress(data) {\n        if (this.onProgress) {\n          this.onProgress({\n            loaded: data.loaded,\n            total: data.lengthComputable ? data.total : this._contentLength\n          });\n        }\n      }\n      get filename() {\n        return this._filename;\n      }\n      get isRangeSupported() {\n        return this._isRangeSupported;\n      }\n      get isStreamingSupported() {\n        return this._isStreamingSupported;\n      }\n      get contentLength() {\n        return this._contentLength;\n      }\n      get headersReady() {\n        return this._headersReceivedCapability.promise;\n      }\n      async read() {\n        if (this._storedError) {\n          throw this._storedError;\n        }\n        if (this._cachedChunks.length > 0) {\n          const chunk = this._cachedChunks.shift();\n          return {\n            value: chunk,\n            done: false\n          };\n        }\n        if (this._done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        const requestCapability = (0, _util.createPromiseCapability)();\n        this._requests.push(requestCapability);\n        return requestCapability.promise;\n      }\n      cancel(reason) {\n        this._done = true;\n        this._headersReceivedCapability.reject(reason);\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n        this._requests = [];\n        if (this._manager.isPendingRequest(this._fullRequestId)) {\n          this._manager.abortRequest(this._fullRequestId);\n        }\n        this._fullRequestReader = null;\n      }\n    }\n    class PDFNetworkStreamRangeRequestReader {\n      constructor(manager, begin, end) {\n        this._manager = manager;\n        const args = {\n          onDone: this._onDone.bind(this),\n          onProgress: this._onProgress.bind(this)\n        };\n        this._requestId = manager.requestRange(begin, end, args);\n        this._requests = [];\n        this._queuedChunk = null;\n        this._done = false;\n        this.onProgress = null;\n        this.onClosed = null;\n      }\n      _close() {\n        if (this.onClosed) {\n          this.onClosed(this);\n        }\n      }\n      _onDone(data) {\n        const chunk = data.chunk;\n        if (this._requests.length > 0) {\n          const requestCapability = this._requests.shift();\n          requestCapability.resolve({\n            value: chunk,\n            done: false\n          });\n        } else {\n          this._queuedChunk = chunk;\n        }\n        this._done = true;\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n        this._requests = [];\n        this._close();\n      }\n      _onProgress(evt) {\n        if (!this.isStreamingSupported && this.onProgress) {\n          this.onProgress({\n            loaded: evt.loaded\n          });\n        }\n      }\n      get isStreamingSupported() {\n        return false;\n      }\n      async read() {\n        if (this._queuedChunk !== null) {\n          const chunk = this._queuedChunk;\n          this._queuedChunk = null;\n          return {\n            value: chunk,\n            done: false\n          };\n        }\n        if (this._done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        const requestCapability = (0, _util.createPromiseCapability)();\n        this._requests.push(requestCapability);\n        return requestCapability.promise;\n      }\n      cancel(reason) {\n        this._done = true;\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n        this._requests = [];\n        if (this._manager.isPendingRequest(this._requestId)) {\n          this._manager.abortRequest(this._requestId);\n        }\n        this._close();\n      }\n    }\n\n    /***/\n  }), ( /* 23 */\n  /***/function (module, exports, __w_pdfjs_require__) {\n    \"use strict\";\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.PDFFetchStream = void 0;\n    var _util = __w_pdfjs_require__(1);\n    var _network_utils = __w_pdfjs_require__(20);\n    function createFetchOptions(headers, withCredentials, abortController) {\n      return {\n        method: \"GET\",\n        headers,\n        signal: abortController && abortController.signal,\n        mode: \"cors\",\n        credentials: withCredentials ? \"include\" : \"same-origin\",\n        redirect: \"follow\"\n      };\n    }\n    function createHeaders(httpHeaders) {\n      const headers = new Headers();\n      for (const property in httpHeaders) {\n        const value = httpHeaders[property];\n        if (typeof value === \"undefined\") {\n          continue;\n        }\n        headers.append(property, value);\n      }\n      return headers;\n    }\n    class PDFFetchStream {\n      constructor(source) {\n        this.source = source;\n        this.isHttp = /^https?:/i.test(source.url);\n        this.httpHeaders = this.isHttp && source.httpHeaders || {};\n        this._fullRequestReader = null;\n        this._rangeRequestReaders = [];\n      }\n      get _progressiveDataLength() {\n        return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n      }\n      getFullReader() {\n        (0, _util.assert)(!this._fullRequestReader);\n        this._fullRequestReader = new PDFFetchStreamReader(this);\n        return this._fullRequestReader;\n      }\n      getRangeReader(begin, end) {\n        if (end <= this._progressiveDataLength) {\n          return null;\n        }\n        const reader = new PDFFetchStreamRangeReader(this, begin, end);\n        this._rangeRequestReaders.push(reader);\n        return reader;\n      }\n      cancelAllRequests(reason) {\n        if (this._fullRequestReader) {\n          this._fullRequestReader.cancel(reason);\n        }\n        const readers = this._rangeRequestReaders.slice(0);\n        readers.forEach(function (reader) {\n          reader.cancel(reason);\n        });\n      }\n    }\n    exports.PDFFetchStream = PDFFetchStream;\n    class PDFFetchStreamReader {\n      constructor(stream) {\n        this._stream = stream;\n        this._reader = null;\n        this._loaded = 0;\n        this._filename = null;\n        const source = stream.source;\n        this._withCredentials = source.withCredentials || false;\n        this._contentLength = source.length;\n        this._headersCapability = (0, _util.createPromiseCapability)();\n        this._disableRange = source.disableRange || false;\n        this._rangeChunkSize = source.rangeChunkSize;\n        if (!this._rangeChunkSize && !this._disableRange) {\n          this._disableRange = true;\n        }\n        if (typeof AbortController !== \"undefined\") {\n          this._abortController = new AbortController();\n        }\n        this._isStreamingSupported = !source.disableStream;\n        this._isRangeSupported = !source.disableRange;\n        this._headers = createHeaders(this._stream.httpHeaders);\n        const url = source.url;\n        fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n          if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n            throw (0, _network_utils.createResponseStatusError)(response.status, url);\n          }\n          this._reader = response.body.getReader();\n          this._headersCapability.resolve();\n          const getResponseHeader = name => {\n            return response.headers.get(name);\n          };\n          const {\n            allowRangeRequests,\n            suggestedLength\n          } = (0, _network_utils.validateRangeRequestCapabilities)({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange\n          });\n          this._isRangeSupported = allowRangeRequests;\n          this._contentLength = suggestedLength || this._contentLength;\n          this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n          if (!this._isStreamingSupported && this._isRangeSupported) {\n            this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n          }\n        }).catch(this._headersCapability.reject);\n        this.onProgress = null;\n      }\n      get headersReady() {\n        return this._headersCapability.promise;\n      }\n      get filename() {\n        return this._filename;\n      }\n      get contentLength() {\n        return this._contentLength;\n      }\n      get isRangeSupported() {\n        return this._isRangeSupported;\n      }\n      get isStreamingSupported() {\n        return this._isStreamingSupported;\n      }\n      async read() {\n        await this._headersCapability.promise;\n        const {\n          value,\n          done\n        } = await this._reader.read();\n        if (done) {\n          return {\n            value,\n            done\n          };\n        }\n        this._loaded += value.byteLength;\n        if (this.onProgress) {\n          this.onProgress({\n            loaded: this._loaded,\n            total: this._contentLength\n          });\n        }\n        const buffer = new Uint8Array(value).buffer;\n        return {\n          value: buffer,\n          done: false\n        };\n      }\n      cancel(reason) {\n        if (this._reader) {\n          this._reader.cancel(reason);\n        }\n        if (this._abortController) {\n          this._abortController.abort();\n        }\n      }\n    }\n    class PDFFetchStreamRangeReader {\n      constructor(stream, begin, end) {\n        this._stream = stream;\n        this._reader = null;\n        this._loaded = 0;\n        const source = stream.source;\n        this._withCredentials = source.withCredentials || false;\n        this._readCapability = (0, _util.createPromiseCapability)();\n        this._isStreamingSupported = !source.disableStream;\n        if (typeof AbortController !== \"undefined\") {\n          this._abortController = new AbortController();\n        }\n        this._headers = createHeaders(this._stream.httpHeaders);\n        this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n        const url = source.url;\n        fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n          if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n            throw (0, _network_utils.createResponseStatusError)(response.status, url);\n          }\n          this._readCapability.resolve();\n          this._reader = response.body.getReader();\n        });\n        this.onProgress = null;\n      }\n      get isStreamingSupported() {\n        return this._isStreamingSupported;\n      }\n      async read() {\n        await this._readCapability.promise;\n        const {\n          value,\n          done\n        } = await this._reader.read();\n        if (done) {\n          return {\n            value,\n            done\n          };\n        }\n        this._loaded += value.byteLength;\n        if (this.onProgress) {\n          this.onProgress({\n            loaded: this._loaded\n          });\n        }\n        const buffer = new Uint8Array(value).buffer;\n        return {\n          value: buffer,\n          done: false\n        };\n      }\n      cancel(reason) {\n        if (this._reader) {\n          this._reader.cancel(reason);\n        }\n        if (this._abortController) {\n          this._abortController.abort();\n        }\n      }\n    }\n\n    /***/\n  }\n  /******/)]);\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","installedModules","__w_pdfjs_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","pdfjsVersion","pdfjsBuild","pdfjsSharedUtil","pdfjsDisplayAPI","pdfjsDisplayTextLayer","pdfjsDisplayAnnotationLayer","pdfjsDisplayDisplayUtils","pdfjsDisplaySVG","pdfjsDisplayWorkerOptions","pdfjsDisplayAPICompatibility","isNodeJS","PDFNodeStream","setPDFNetworkStreamFactory","params","PDFNetworkStream","PDFFetchStream","isFetchSupported","isValidFetchUrl","url","build","version","getDocument","LoopbackPort","PDFDataRangeTransport","PDFWorker","renderTextLayer","AnnotationLayer","createPromiseCapability","PasswordResponses","InvalidPDFException","MissingPDFException","SVGGraphics","NativeImageDecoding","CMapCompressionType","PermissionFlag","UnexpectedResponseException","OPS","VerbosityLevel","UNSUPPORTED_FEATURES","createValidAbsoluteUrl","createObjectURL","removeNullCharacters","shadow","Util","RenderingCancelledException","getFilenameFromUrl","LinkTarget","addLinkAttributes","loadScript","PDFDateString","GlobalWorkerOptions","apiCompatibilityParams","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","NONE","DECODE","DISPLAY","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","INFOS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","msg","console","log","warn","unreachable","Error","assert","cond","isSameOrigin","baseUrl","otherUrl","base","URL","origin","e","other","_isValidProtocol","protocol","absoluteUrl","ex","obj","prop","configurable","writable","BaseException","BaseExceptionClosure","message","constructor","PasswordException","code","UnknownErrorException","details","status","FormatError","AbortException","NullCharactersRegExp","str","replace","bytesToString","bytes","length","undefined","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","resultLength","pos","data","item","itemLength","set","string32","isLittleEndian","buffer8","view32","Uint32Array","buffer","IsLittleEndianCached","isEvalSupported","Function","IsEvalSupportedCached","rgbBuf","makeCssRgb","g","b","m1","m2","applyTransform","xt","yt","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","PDFStringTranslateTable","stringToPDFString","charAt","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isEmptyObj","isBool","isNum","isString","isArrayBuffer","isArrayEqual","arr1","arr2","every","element","index","capability","isSettled","promise","Promise","resolve","reject","reason","createObjectURLClosure","digits","contentType","forceDataSchema","blob","Blob","type","ii","b1","b2","b3","d1","d2","d3","d4","_util","_display_utils","_font_loader","_api_compatibility","_canvas","_worker_options","_is_node","_message_handler","_metadata","_transport_stream","_webgl","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","createPDFNetworkStream","pdfNetworkStreamFactory","src","task","PDFDocumentLoadingTask","source","range","rangeTransport","worker","window","location","href","pdfBytes","isNaN","rangeChunkSize","CMapReaderFactory","DOMCMapReaderFactory","ignoreErrors","stopAtErrors","pdfBug","NativeImageDecoderValues","values","nativeImageDecoderSupport","includes","maxImageSize","disableFontFace","disableRange","disableStream","disableAutoFetch","disableCreateObjectURL","workerParams","port","workerPort","fromPort","_worker","docId","then","destroyed","_fetchDocument","workerId","networkStream","PDFDataTransportStream","initialData","progressiveDone","httpHeaders","withCredentials","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","_transport","send","catch","_capability","pdfDataRangeTransport","sendWithPromise","apiVersion","password","docBaseUrl","PDFDocumentLoadingTaskClosure","nextDocumentId","onPassword","onProgress","onUnsupportedFeature","destroy","transportDestroyed","onFulfilled","onRejected","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","begin","onDataProgress","loaded","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","end","abort","PDFDocumentProxy","pdfInfo","_pdfInfo","numPages","fingerprint","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getOpenActionDestination","deprecated","openAction","dest","getAttachments","getJavaScript","getOutline","getPermissions","getMetadata","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","startCleanup","loadingTask","loadingParams","PDFPageProxy","pageIndex","pageInfo","_pageIndex","_pageInfo","_stats","StatTimer","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","intentStates","rotate","userUnit","view","getViewport","scale","rotation","offsetX","offsetY","dontFlip","arguments","PageViewport","viewBox","getAnnotations","intent","annotationsPromise","annotationsIntent","render","canvasContext","viewport","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","time","renderingIntent","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","DOMCanvasFactory","webGLContext","WebGLContext","enable","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","renderTasks","indexOf","internalRenderTask","splice","_tryCleanup","_abortOperatorList","timeEnd","InternalRenderTask","callback","useRequestAnimationFrame","renderTask","transparency","initializeGraphics","operatorListChanged","getOperatorList","opListReadCapability","opListTask","streamTextContent","normalizeWhitespace","disableCombineTextItems","TEXT_CONTENT_CHUNK_SIZE","sendWithStream","combineTextItems","highWaterMark","size","textContent","items","getTextContent","readableStream","pump","reader","read","done","assign","styles","getReader","_destroy","pageCache","waitOn","keys","forEach","force","renderCompleted","cancel","clear","all","resetStats","some","_startRenderPage","_renderPageChunk","operatorListChunk","args","streamReader","setTimeout","stats","defer","_listeners","_defer","_deferred","postMessage","transfers","cloneValue","cloned","has","transferable","byteOffset","Array","isArray","desc","getOwnPropertyDescriptor","getPrototypeOf","WeakMap","addEventListener","removeEventListener","terminate","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","require","document","pdfjsFilePath","currentScript","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","globalThis","pdfjsWorker","WorkerMessageHandler","setupFakeWorkerGlobal","loader","eval","createCDNWrapper","wrapper","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","workerHandler","setup","delete","fontLoader","FontLoader","_onUnsupportedFeature","_params","cMapUrl","isCompressed","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","page","terminated","cancelAllRequests","sink","getFullReader","evt","onPull","close","enqueue","onCancel","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_numPages","exception","updatePassword","exportedData","exportedError","fontRegistry","FontInspector","enabled","registerFont","fontAdded","FontFaceObject","finally","imageData","pageProxy","img","Image","onload","onerror","releaseImageResources","MAX_IMAGE_SIZE_TO_STORE","imageUrl","components","width","height","rgbaLength","buf","Uint8ClampedArray","tmpCanvas","createElement","tmpCtx","getContext","drawImage","getImageData","j","fetched","fetch","builtInCMap","cMapData","featureId","results","metadata","Metadata","contentDispositionFilename","filename","cleanupSuccessful","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","InternalRenderTaskClosure","canvasInRendering","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","canvas","add","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","requestAnimationFrame","executeOperatorList","DEFAULT_LINK_REL","SVG_NS","context","reset","canvasAndContext","compressionType","baseURI","response","ok","statusText","arrayBuffer","text","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","responseText","DOMSVGFactory","svg","createElementNS","setAttribute","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","abs","clone","convertToViewportPoint","x","y","convertToViewportRectangle","topLeft","bottomRight","convertToPdfPoint","SELF","BLANK","PARENT","TOP","link","target","rel","urlNullRemoved","title","onclick","targetStr","anchor","query","substring","lastIndexOf","started","times","Date","now","start","toString","outBuf","longest","duration","padEnd","Response","ReadableStream","script","head","documentElement","appendChild","startsWith","revokeObjectURL","removeAttribute","pdfDateStringRegex","toDateObject","input","RegExp","matches","exec","year","parseInt","month","day","hour","minute","universalTimeRelation","offsetHour","offsetMinute","UTC","BaseFontLoader","nativeFontFaces","styleElement","addNativeFontFace","nativeFontFace","fonts","insertRule","rule","getElementsByTagName","styleSheet","sheet","cssRules","remove","attached","missingFile","isFontLoadingAPISupported","createNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","supported","_loadTestFont","rules","fontsToLoad","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","navigator","userAgent","completeRequest","otherRequest","shift","getLoadTestFont","atob","int32","offset","spliceString","insert","chunk1","chunk2","ctx","called","isFontReady","fillText","COMMENT_OFFSET","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","btoa","names","loadedName","div","style","visibility","position","top","left","span","fontFamily","body","removeChild","translatedData","compiledGlyphs","FontFace","mimetype","getPathGenerator","character","cmds","current","js","cmd","compatibilityParams","isIE","test","isIOSChrome","checkOnBlobSupport","checkFontFaceAndImage","freeze","process","versions","_pattern_helper","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","MIN_WIDTH_FACTOR","COMPILE_TYPE3_GLYPHS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","_originalSave","_originalRestore","_originalRotate","_originalScale","_originalTranslate","translate","_originalTransform","_originalSetTransform","setTransform","_transformMatrix","_transformStack","getCurrentTransform","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","ctxRestore","prev","pop","ctxTranslate","ctxScale","ctxTransform","ctxSetTransform","ctxRotate","angle","cosValue","cos","sinValue","sin","CachedCanvases","CachedCanvasesClosure","cache","getCanvas","CachedCanvases_getCanvas","trackTransform","canvasEntry","compileType3Glyph","imgData","POINT_TO_PROCESS_LIMIT","j0","width1","points","POINT_TYPES","lineSize","data0","mask","elem","count","sum","steps","Int32Array","outlines","coords","p0","pp","step","drawOutline","beginPath","jj","CanvasExtraState","CanvasExtraStateClosure","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","CanvasExtraState_clone","setCurrentPoint","CanvasExtraState_setCurrentPoint","CanvasGraphicsClosure","EXECUTION_TIME","EXECUTION_STEPS","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","srcPos","destPos","thisChunkHeight","elemsInThisChunk","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","srcByte","putBinaryImageMask","copyCtxState","sourceCtx","destCtx","properties","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","genericComposeSMask","maskCtx","layerCtx","subtype","backdrop","hasBackdrop","composeFn","PIXELS_TO_PROCESS","chunkSize","ceil","row","chunkHeight","composeSMask","scaleX","scaleY","isEnabled","composed","layer","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","fillRect","transparentCanvas","compositeCtx","beginLayout","CanvasGraphics_executeOperatorList","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","fnId","breakIt","depObjId","objsPool","CanvasGraphics_endDrawing","endSMaskGroup","endLayout","CanvasGraphics_setLineWidth","CanvasGraphics_setLineCap","CanvasGraphics_setLineJoin","CanvasGraphics_setMiterLimit","limit","CanvasGraphics_setDash","dashArray","dashPhase","flatness","CanvasGraphics_setGState","states","state","suspendSMaskGroup","beginSMaskGroup","CanvasGraphics_beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","startTransformInverse","mozCurrentTransformInverse","CanvasGraphics_endSMaskGroup","deltaTransform","clearRect","resumeSMaskGroup","CanvasGraphics_save","CanvasGraphics_restore","CanvasGraphics_transform","CanvasGraphics_constructPath","ops","getSinglePixelWidth","xw","yh","bezierCurveTo","CanvasGraphics_closePath","CanvasGraphics_stroke","consumePath","getPattern","CanvasGraphics_closeStroke","CanvasGraphics_fill","isPatternFill","needRestore","CanvasGraphics_eoFill","CanvasGraphics_fillStroke","CanvasGraphics_eoFillStroke","CanvasGraphics_closeFillStroke","CanvasGraphics_closeEOFillStroke","CanvasGraphics_endPath","CanvasGraphics_clip","CanvasGraphics_eoClip","CanvasGraphics_beginText","CanvasGraphics_endText","paths","pendingTextPaths","path","addToPath","CanvasGraphics_setCharSpacing","spacing","CanvasGraphics_setWordSpacing","CanvasGraphics_setHScale","CanvasGraphics_setLeading","CanvasGraphics_setFont","fontRefName","fontObj","fontDirection","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","CanvasGraphics_setTextRenderingMode","CanvasGraphics_setTextRise","rise","CanvasGraphics_moveText","CanvasGraphics_setLeadingMoveText","CanvasGraphics_setTextMatrix","CanvasGraphics_nextLine","paintChar","patternTransform","fillStrokeMode","isAddToPathSet","strokeText","isFontSubpixelAAEnabled","CanvasGraphics_showText","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","scaledAccentX","scaledAccentY","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","charWidth","CanvasGraphics_showType3Text","isTextInvisible","spacingLength","charProcOperatorList","operatorListId","transformed","CanvasGraphics_setCharWidth","xWidth","yWidth","CanvasGraphics_setCharWidthAndBounds","llx","lly","urx","ury","getColorN_Pattern","CanvasGraphics_getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","CanvasGraphics_setStrokeColorN","CanvasGraphics_setFillColorN","CanvasGraphics_setStrokeRGBColor","CanvasGraphics_setFillRGBColor","CanvasGraphics_shadingFill","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","CanvasGraphics_beginInlineImage","CanvasGraphics_beginImageData","CanvasGraphics_paintFormXObjectBegin","matrix","bbox","CanvasGraphics_paintFormXObjectEnd","CanvasGraphics_beginGroup","group","isolated","knockout","bounds","canvasBounds","floor","CanvasGraphics_endGroup","imageSmoothingEnabled","mozImageSmoothingEnabled","CanvasGraphics_beginAnnotations","CanvasGraphics_endAnnotations","CanvasGraphics_beginAnnotation","CanvasGraphics_endAnnotation","CanvasGraphics_paintJpegXObject","w","h","domImage","getCanvasPosition","appendImage","CanvasGraphics_paintImageMaskXObject","compiled","maskCanvas","CanvasGraphics_paintImageMaskXObjectRepeat","positions","CanvasGraphics_paintImageMaskXObjectGroup","images","image","CanvasGraphics_paintImageXObject","CanvasGraphics_paintImageXObjectRepeat","map","CanvasGraphics_paintInlineImageXObject","widthScale","heightScale","imgToPaint","HTMLElement","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","CanvasGraphics_paintInlineImageXObjectGroup","entry","CanvasGraphics_paintSolidColorImageMask","CanvasGraphics_paintXObject","CanvasGraphics_markPoint","tag","CanvasGraphics_markPointProps","CanvasGraphics_beginMarkedContent","CanvasGraphics_beginMarkedContentProps","CanvasGraphics_endMarkedContent","CanvasGraphics_beginCompat","CanvasGraphics_endCompat","CanvasGraphics_consumePath","inverse","CanvasGraphics_getCanvasPosition","op","ShadingIRs","applyBoundingBox","Path2D","region","RadialAxial","fromIR","RadialAxial_fromIR","raw","colorStops","r1","RadialAxial_getPattern","grad","createLinearGradient","createRadialGradient","addColorStop","createMeshCanvas","createMeshCanvasClosure","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","round","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","paddedWidth","paddedHeight","drawFigures","Mesh","Mesh_fromIR","Mesh_getPattern","owner","matrixScale","temporaryPatternCanvas","createPattern","Dummy","Dummy_fromIR","Dummy_fromIR_getPattern","shadingIR","TilingPatternClosure","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","TilinPattern_createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","TilingPattern_getSizeAndScale","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","TilingPattern_getPattern","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","action","_createStreamSink","actionName","handler","ah","_postMessage","queueingStrategy","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","self","streamSink","isCancelled","lastDesiredSize","sinkCapability","ready","success","_deleteStreamController","allSettled","_xml_parser","_repair","parser","SimpleXMLParser","xmlDocument","parseFromString","_metadataMap","Map","_parse","codes","chars","rdf","nodeName","toLowerCase","firstChild","nextSibling","hasChildNodes","children","childNodes","trim","getAll","XMLParserErrorCode","NoError","EndOfDocument","UnterminatedCdat","UnterminatedXmlDeclaration","UnterminatedDoctypeDeclaration","UnterminatedComment","MalformedElement","OutOfMemory","UnterminatedAttributeValue","UnterminatedElement","ElementNeverBegun","isWhitespace","ch","isWhitespaceString","XMLParserBase","_resolveEntities","entity","onResolveEntity","_parseContent","attributes","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","parsed","_parseProcessingInstruction","attrStart","parseXml","ch2","onError","onEndElement","pi","onPi","onComment","onCdata","q2","complexDoctype","doctypeContent","onDoctype","content","onBeginElement","onText","isEmpty","SimpleDOMNode","nodeValue","parentNode","child","_currentFragment","_stack","_errorCode","node","lastElement","_queuedChunks","_progressiveDone","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","_begin","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","readers","_stream","_done","_filename","_requests","_headersReady","requestCapability","_end","_queuedChunk","requestsCapability","_enabled","WebGLUtils","tryInitGL","WebGLUtilsClosure","loadShader","gl","shaderType","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorMsg","getShaderInfoLog","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","attachShader","linkProgram","linked","getProgramParameter","LINK_STATUS","getProgramInfoLog","createTexture","textureId","activeTexture","texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskVertexShaderCode","smaskFragmentShaderCode","smaskCache","initSmaskGL","vertexShader","fragmentShader","useProgram","resolutionLocation","getUniformLocation","positionLocation","getAttribLocation","backdropLocation","subtypeLocation","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform1i","drawingBufferWidth","drawingBufferHeight","uniform2f","uniform4f","TEXTURE0","maskTexture","TEXTURE1","clearColor","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","flush","deleteTexture","deleteBuffer","figuresVertexShaderCode","figuresFragmentShaderCode","figuresCache","initFiguresGL","scaleLocation","offsetLocation","colorLocation","coordsMap","colorsMap","pIndex","cIndex","col","coordsBuffer","colorsBuffer","renderTextLayerClosure","MAX_TEXT_DIVS_TO_RENDER","NonWhitespaceRegexp","isAllWhitespace","appendText","geom","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","_textDivs","_textDivProperties","tx","_viewport","atan2","fontName","PI","fontHeight","fontAscent","ascent","descent","_fontInspectorEnabled","dataset","_textContentStream","_layoutText","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","_bounds","right","bottom","_canceled","textDivs","textDivsLength","_renderingDone","expand","expanded","expandBounds","divProperties","ts","Float64Array","findPositiveMin","boxScale","boxes","box","x1New","x2New","expandBoundsLTR","fakeBoundary","Infinity","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","unshift","used","concat","TextLayerRenderTask","textContentStream","container","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_renderTimer","TextLayer_cancel","_processItems","styleCache","len","_render","TextLayer_render","timeout","mozOpaque","textItems","textStyles","expandTextDivs","TextLayer_expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","padding","renderParameters","AnnotationElementFactory","parameters","annotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","linkService","downloadManager","imageResourcesPath","svgFactory","_createContainer","transformOrigin","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","_createPopup","trigger","popupElement","PopupElement","modificationDate","contents","hideWrapper","popup","className","newWindow","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","destination","getDestinationHash","navigateTo","getAnchorUrl","executeNamedAction","hasPopup","alt","l10nId","l10nArgs","JSON","stringify","hasAppearance","fieldValue","TEXT_ALIGNMENT","multiLine","disabled","readOnly","maxLen","maxLength","comb","fieldWidth","combWidth","classList","letterSpacing","verticalAlign","display","_setTextStyle","textAlignment","textAlign","direction","fontWeight","fontStyle","fieldName","buttonValue","selectElement","combo","options","multiSelect","multiple","option","optionElement","displayValue","exportValue","IGNORE_TYPES","parentType","selector","parentId","parentElement","querySelector","parentLeft","parseFloat","parentWidth","pinned","BACKGROUND_ENLIGHT","hideElement","dateObject","date","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","split","line","createTextNode","pin","hasAttribute","zIndex","unpin","lineCoordinates","append","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","file","eventBus","dispatch","_download","downloadData","sortedAnnotations","popupAnnotations","annotations","update","SVG_DEFAULTS","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc32","crc","writePngChunk","adler32","deflateSync","literals","deflateSyncUncompressed","Buffer","from","output","maxBlockLength","deflateBlocks","idat","adler","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","toFixed","pm","acos","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","lineMatrix","xcoords","tspan","setAttributeNS","txtElement","txtgrp","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","addFontStyle","defs","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","colorStop","stop","getAttributeNS","clipId","clipPath","clipElement","cloneNode","imgObj","imgEl","imgSrc","cliprect","definitions","rootGroup","_ensureClipGroup","_network_utils","fs","http","https","fileUriRegex","parseUrl","sourceUrl","parsedUrl","parse","host","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","_setReadableStream","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","statusCode","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","lstat","stat","createReadStream","_content_disposition","returnValues","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","createResponseStatusError","validateResponseStatus","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","decode","err","match","iter","quot","part","parts","quotindex","extvalue","encodingend","langvalue","_","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","getArrayBuffer","xhr","array","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhrId","pendingRequest","setRequestHeader","expectedStatus","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","ok_response_on_range_request","rangeHeader","hasPendingRequests","getRequestXhr","isPendingRequest","abortAllRequests","abortRequest","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","lengthComputable","_requestId","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers"],"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/xml_parser.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/webgl.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-unused-vars */\n\n\"use strict\";\n\nvar pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\nvar pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nvar pdfjsSharedUtil = require(\"./shared/util.js\");\nvar pdfjsDisplayAPI = require(\"./display/api.js\");\nvar pdfjsDisplayTextLayer = require(\"./display/text_layer.js\");\nvar pdfjsDisplayAnnotationLayer = require(\"./display/annotation_layer.js\");\nvar pdfjsDisplayDisplayUtils = require(\"./display/display_utils.js\");\nvar pdfjsDisplaySVG = require(\"./display/svg.js\");\nconst pdfjsDisplayWorkerOptions = require(\"./display/worker_options.js\");\nconst pdfjsDisplayAPICompatibility = require(\"./display/api_compatibility.js\");\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"./shared/is_node.js\");\n  if (isNodeJS) {\n    const PDFNodeStream = require(\"./display/node_stream.js\").PDFNodeStream;\n    pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n    let PDFFetchStream;\n    if (pdfjsDisplayDisplayUtils.isFetchSupported()) {\n      PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    }\n    pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n      if (\n        PDFFetchStream &&\n        pdfjsDisplayDisplayUtils.isValidFetchUrl(params.url)\n      ) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n} else if (PDFJSDev.test(\"CHROME\")) {\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  const isChromeWithFetchCredentials = function() {\n    // fetch does not include credentials until Chrome 61.0.3138.0 and later.\n    // https://chromium.googlesource.com/chromium/src/+/2e231cf052ca5e68e22baf0008ac9e5e29121707\n    try {\n      // Indexed properties on window are read-only in Chrome 61.0.3151.0+\n      // https://chromium.googlesource.com/chromium/src.git/+/58ab4a971b06dec13e4edf9de8382ca6847f6190\n      window[999] = 123; // should throw. Note: JS strict mode MUST be enabled.\n      delete window[999];\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  if (\n    pdfjsDisplayDisplayUtils.isFetchSupported() &&\n    isChromeWithFetchCredentials()\n  ) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n  }\n  pdfjsDisplayAPI.setPDFNetworkStreamFactory(params => {\n    if (\n      PDFFetchStream &&\n      pdfjsDisplayDisplayUtils.isValidFetchUrl(params.url)\n    ) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexports.build = pdfjsDisplayAPI.build;\nexports.version = pdfjsDisplayAPI.version;\nexports.getDocument = pdfjsDisplayAPI.getDocument;\nexports.LoopbackPort = pdfjsDisplayAPI.LoopbackPort;\nexports.PDFDataRangeTransport = pdfjsDisplayAPI.PDFDataRangeTransport;\nexports.PDFWorker = pdfjsDisplayAPI.PDFWorker;\nexports.renderTextLayer = pdfjsDisplayTextLayer.renderTextLayer;\nexports.AnnotationLayer = pdfjsDisplayAnnotationLayer.AnnotationLayer;\nexports.createPromiseCapability = pdfjsSharedUtil.createPromiseCapability;\nexports.PasswordResponses = pdfjsSharedUtil.PasswordResponses;\nexports.InvalidPDFException = pdfjsSharedUtil.InvalidPDFException;\nexports.MissingPDFException = pdfjsSharedUtil.MissingPDFException;\nexports.SVGGraphics = pdfjsDisplaySVG.SVGGraphics;\nexports.NativeImageDecoding = pdfjsSharedUtil.NativeImageDecoding;\nexports.CMapCompressionType = pdfjsSharedUtil.CMapCompressionType;\nexports.PermissionFlag = pdfjsSharedUtil.PermissionFlag;\nexports.UnexpectedResponseException =\n  pdfjsSharedUtil.UnexpectedResponseException;\nexports.OPS = pdfjsSharedUtil.OPS;\nexports.VerbosityLevel = pdfjsSharedUtil.VerbosityLevel;\nexports.UNSUPPORTED_FEATURES = pdfjsSharedUtil.UNSUPPORTED_FEATURES;\nexports.createValidAbsoluteUrl = pdfjsSharedUtil.createValidAbsoluteUrl;\nexports.createObjectURL = pdfjsSharedUtil.createObjectURL;\nexports.removeNullCharacters = pdfjsSharedUtil.removeNullCharacters;\nexports.shadow = pdfjsSharedUtil.shadow;\nexports.Util = pdfjsSharedUtil.Util;\nexports.RenderingCancelledException =\n  pdfjsDisplayDisplayUtils.RenderingCancelledException;\nexports.getFilenameFromUrl = pdfjsDisplayDisplayUtils.getFilenameFromUrl;\nexports.LinkTarget = pdfjsDisplayDisplayUtils.LinkTarget;\nexports.addLinkAttributes = pdfjsDisplayDisplayUtils.addLinkAttributes;\nexports.loadScript = pdfjsDisplayDisplayUtils.loadScript;\nexports.PDFDateString = pdfjsDisplayDisplayUtils.PDFDateString;\nexports.GlobalWorkerOptions = pdfjsDisplayWorkerOptions.GlobalWorkerOptions;\nexports.apiCompatibilityParams =\n  pdfjsDisplayAPICompatibility.apiCompatibilityParams;\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\nconst NativeImageDecoding = {\n  NONE: \"none\",\n  DECODE: \"decode\",\n  DISPLAY: \"display\",\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  font: \"font\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the whitelisted protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\nconst BaseException = (function BaseExceptionClosure() {\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array} arr - the array of the arrays (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  // makeCssRgb() can be called thousands of times. Using ´rgbBuf` avoids\n  // creating many intermediate strings.\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function(element, index) {\n    return element === arr2[index];\n  });\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function(resolve, reject) {\n    capability.resolve = function(data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function(reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nexport {\n  BaseException,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  OPS,\n  VerbosityLevel,\n  UNSUPPORTED_FEATURES,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  FontType,\n  ImageKind,\n  CMapCompressionType,\n  AbortException,\n  InvalidPDFException,\n  MissingPDFException,\n  NativeImageDecoding,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  StreamType,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  Util,\n  FormatError,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  bytesToString,\n  createPromiseCapability,\n  createObjectURL,\n  getVerbosityLevel,\n  info,\n  isArrayBuffer,\n  isArrayEqual,\n  isBool,\n  isEmptyObj,\n  isNum,\n  isString,\n  isSameOrigin,\n  createValidAbsoluteUrl,\n  IsLittleEndianCached,\n  IsEvalSupportedCached,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  utf8StringToString,\n  warn,\n  unreachable,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n// Skip compatibility checks for modern builds (unless we're running the\n// unit-tests in Node.js/Travis) and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!SKIP_BABEL || (LIB && TESTING)\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for globalThis in legacy browsers.\n  // Support: IE11/Edge, Opera\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  const { isNodeJS } = require(\"./is_node.js\");\n\n  const hasDOM = typeof window === \"object\" && typeof document === \"object\";\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const isIE = /Trident/.test(userAgent);\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function(chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function(input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Provides support for ChildNode.remove in legacy browsers.\n  // Support: IE.\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== \"undefined\") {\n      return;\n    }\n    Element.prototype.remove = function() {\n      if (this.parentNode) {\n        // eslint-disable-next-line mozilla/avoid-removeChild\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.{add, remove}, with more than\n  // one parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListAddRemove() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    div.classList.add(\"testOne\", \"testTwo\");\n\n    if (\n      div.classList.contains(\"testOne\") === true &&\n      div.classList.contains(\"testTwo\") === true\n    ) {\n      return;\n    }\n    const OriginalDOMTokenListAdd = DOMTokenList.prototype.add;\n    const OriginalDOMTokenListRemove = DOMTokenList.prototype.remove;\n\n    DOMTokenList.prototype.add = function(...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListAdd.call(this, token);\n      }\n    };\n    DOMTokenList.prototype.remove = function(...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListRemove.call(this, token);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.toggle, with the optional\n  // \"force\" parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListToggle() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    if (div.classList.toggle(\"test\", 0) === false) {\n      return;\n    }\n\n    DOMTokenList.prototype.toggle = function(token) {\n      const force =\n        arguments.length > 1 ? !!arguments[1] : !this.contains(token);\n      return this[force ? \"add\" : \"remove\"](token), force;\n    };\n  })();\n\n  // Provides support for window.history.{pushState, replaceState}, with the\n  // `url` parameter set to `undefined`, without breaking the document URL.\n  // Support: IE\n  (function checkWindowHistoryPushStateReplaceState() {\n    if (!hasDOM || !isIE) {\n      return;\n    }\n    const OriginalPushState = window.history.pushState;\n    const OriginalReplaceState = window.history.replaceState;\n\n    window.history.pushState = function(state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalPushState.apply(this, args);\n    };\n    window.history.replaceState = function(state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalReplaceState.apply(this, args);\n    };\n  })();\n\n  // Provides support for String.prototype.startsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringStartsWith() {\n    if (String.prototype.startsWith) {\n      return;\n    }\n    require(\"core-js/es/string/starts-with.js\");\n  })();\n\n  // Provides support for String.prototype.endsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringEndsWith() {\n    if (String.prototype.endsWith) {\n      return;\n    }\n    require(\"core-js/es/string/ends-with.js\");\n  })();\n\n  // Provides support for String.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/string/includes.js\");\n  })();\n\n  // Provides support for Array.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<47\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/array/includes.js\");\n  })();\n\n  // Provides support for Array.from in legacy browsers.\n  // Support: IE\n  (function checkArrayFrom() {\n    if (Array.from) {\n      return;\n    }\n    require(\"core-js/es/array/from.js\");\n  })();\n\n  // Provides support for Object.assign in legacy browsers.\n  // Support: IE\n  (function checkObjectAssign() {\n    if (Object.assign) {\n      return;\n    }\n    require(\"core-js/es/object/assign.js\");\n  })();\n\n  // Provides support for Math.log2 in legacy browsers.\n  // Support: IE, Chrome<38\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = require(\"core-js/es/math/log2.js\");\n  })();\n\n  // Provides support for Number.isNaN in legacy browsers.\n  // Support: IE.\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = require(\"core-js/es/number/is-nan.js\");\n  })();\n\n  // Provides support for Number.isInteger in legacy browsers.\n  // Support: IE, Chrome<34\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = require(\"core-js/es/number/is-integer.js\");\n  })();\n\n  // Support: IE, Safari<11, Chrome<63\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise && globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: IE\n  (function checkURL() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders don't use the `URL` constructor, so it\n      // doesn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n      // The `URL` constructor is assumed to be available in the extension\n      // builds.\n      return;\n    }\n    globalThis.URL = require(\"core-js/web/url.js\");\n  })();\n\n  // Support: IE, Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    let isReadableStreamSupported = false;\n\n    if (typeof ReadableStream !== \"undefined\") {\n      // MS Edge may say it has ReadableStream but they are not up to spec yet.\n      try {\n        // eslint-disable-next-line no-new\n        new ReadableStream({\n          start(controller) {\n            controller.close();\n          },\n        });\n        isReadableStreamSupported = true;\n      } catch (e) {\n        // The ReadableStream constructor cannot be used.\n      }\n    }\n    if (isReadableStreamSupported) {\n      return;\n    }\n    globalThis.ReadableStream = require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n\n  // We want to support Map iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkMapEntries() {\n    if (globalThis.Map && globalThis.Map.prototype.entries) {\n      return;\n    }\n    globalThis.Map = require(\"core-js/es/map/index.js\");\n  })();\n\n  // We want to support Set iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkSetEntries() {\n    if (globalThis.Set && globalThis.Set.prototype.entries) {\n      return;\n    }\n    globalThis.Set = require(\"core-js/es/set/index.js\");\n  })();\n\n  // Support: IE<11, Safari<8, Chrome<36\n  (function checkWeakMap() {\n    if (globalThis.WeakMap) {\n      return;\n    }\n    globalThis.WeakMap = require(\"core-js/es/weak-map/index.js\");\n  })();\n\n  // Support: IE11\n  (function checkWeakSet() {\n    if (globalThis.WeakSet) {\n      return;\n    }\n    globalThis.WeakSet = require(\"core-js/es/weak-set/index.js\");\n  })();\n\n  // Provides support for String.codePointAt in legacy browsers.\n  // Support: IE11.\n  (function checkStringCodePointAt() {\n    if (String.prototype.codePointAt) {\n      return;\n    }\n    require(\"core-js/es/string/code-point-at.js\");\n  })();\n\n  // Provides support for String.fromCodePoint in legacy browsers.\n  // Support: IE11.\n  (function checkStringFromCodePoint() {\n    if (String.fromCodePoint) {\n      return;\n    }\n    String.fromCodePoint = require(\"core-js/es/string/from-code-point.js\");\n  })();\n\n  // Support: IE\n  (function checkSymbol() {\n    if (globalThis.Symbol) {\n      return;\n    }\n    require(\"core-js/es/symbol/index.js\");\n  })();\n\n  // Provides support for String.prototype.padStart in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadStart() {\n    if (String.prototype.padStart) {\n      return;\n    }\n    require(\"core-js/es/string/pad-start.js\");\n  })();\n\n  // Provides support for String.prototype.padEnd in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadEnd() {\n    if (String.prototype.padEnd) {\n      return;\n    }\n    require(\"core-js/es/string/pad-end.js\");\n  })();\n\n  // Provides support for Object.values in legacy browsers.\n  // Support: IE, Chrome<54\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = require(\"core-js/es/object/values.js\");\n  })();\n}\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  NativeImageDecoding,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  releaseImageResources,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params The document initialization\n * parameters. The \"url\" key is always present.\n * @returns {IPDFStream}\n */\n\n/** @type IPDFStreamFactory */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates a IPDFStream as an alternative PDF data\n * transport.\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - the factory function\n * that takes document initialization parameters (including a \"url\") and returns\n * an instance of IPDFStream.\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string}     [url] - The URL of the PDF.\n * @property {TypedArray|Array|string} [data] - Binary PDF data. Use typed\n *    arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use atob() to convert it to a binary string first.\n * @property {Object}     [httpHeaders] - Basic authentication headers.\n * @property {boolean}    [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is false.\n * @property {string}     [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number}     [length] - The PDF file length. It's used for\n *   progress reports and range requests operations.\n * @property {PDFDataRangeTransport} [range]\n * @property {number}     [rangeChunkSize] - Specify maximum number of bytes\n *   fetched per range request. The default value is 2^16 = 65536.\n * @property {PDFWorker}  [worker] - The worker that will be used for\n *   the loading and parsing of the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document,\n *   used when attempting to recover valid absolute URLs for annotations, and\n *   outline items, that (incorrectly) only specify relative URLs.\n * @property {string} [nativeImageDecoderSupport] - Strategy for\n *   decoding certain (simple) JPEG images in the browser. This is useful for\n *   environments without DOM image and canvas support, such as e.g. Node.js.\n *   Valid values are 'decode', 'display' or 'none'; where 'decode' is intended\n *   for browsers with full image/canvas support, 'display' for environments\n *   with limited image support through stubs (useful for SVG conversion),\n *   and 'none' where JPEG images will be decoded entirely by PDF.js.\n *   The default value is 'decode'.\n * @property {string} [cMapUrl] - The URL where the predefined\n *   Adobe CMaps are located. Include trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are\n *   binary packed.\n * @property {Object} [CMapReaderFactory] - The factory that will be\n *   used when reading built-in CMap files. Providing a custom factory is useful\n *   for environments without `XMLHttpRequest` support, such as e.g. Node.js.\n *   The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size\n *   in total pixels, i.e. width * height. Images above this value will not be\n *   rendered. Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can eval\n *   strings as JS. Primarily used to improve performance of font rendering,\n *   and when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are\n *   converted to OpenType fonts and loaded via font face rules. If disabled,\n *   fonts will be rendered using a built-in font renderer that constructs the\n *   glyphs with primitive path commands. The default value is `false`.\n * @property {boolean} [disableRange] - Disable range request loading\n *   of PDF files. When enabled, and if the server supports partial content\n *   requests, then the PDF will be fetched in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file\n *   data. By default PDF.js attempts to load PDFs in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF\n *   file data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *   NOTE: It is also necessary to disable streaming, see above,\n *         in order for disabling of pre-fetching to work correctly.\n * @property {boolean} [disableCreateObjectURL] - Disable the use of\n *   `URL.createObjectURL`, for compatibility with older browsers.\n *   The default value is `false`.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging\n *   PDF.js (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object} streamTypes - Used stream types in the document (an item\n *   is set to true if specific stream ID was used in the document).\n * @property {Object} fontTypes - Used font types in the document (an item\n *   is set to true if specific font ID was used in the document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n * NOTE: If a URL is used to fetch the PDF data a standard XMLHttpRequest(XHR)\n * is used, which means it must follow the same origin rules that any XHR does\n * e.g. No cross domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src\n * Can be a url to where a PDF is located, a typed array (Uint8Array)\n * already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory = params.CMapReaderFactory || DOMCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.pdfBug = params.pdfBug === true;\n\n  const NativeImageDecoderValues = Object.values(NativeImageDecoding);\n  if (\n    params.nativeImageDecoderSupport === undefined ||\n    !NativeImageDecoderValues.includes(params.nativeImageDecoderSupport)\n  ) {\n    params.nativeImageDecoderSupport =\n      apiCompatibilityParams.nativeImageDecoderSupport ||\n      NativeImageDecoding.DECODE;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n  if (typeof params.disableCreateObjectURL !== \"boolean\") {\n    params.disableCreateObjectURL =\n      apiCompatibilityParams.disableCreateObjectURL || false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function() {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n      return _fetchDocument(worker, params, rangeTransport, docId).then(\n        function(workerId) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          let networkStream;\n          if (rangeTransport) {\n            networkStream = new PDFDataTransportStream(\n              {\n                length: params.length,\n                initialData: params.initialData,\n                progressiveDone: params.progressiveDone,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream,\n              },\n              rangeTransport\n            );\n          } else if (!params.data) {\n            networkStream = createPDFNetworkStream({\n              url: params.url,\n              length: params.length,\n              httpHeaders: params.httpHeaders,\n              withCredentials: params.withCredentials,\n              rangeChunkSize: params.rangeChunkSize,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            });\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId Unique document id, used as MessageHandler id.\n * @returns {Promise} The promise, which is resolved when worker id of\n *                    MessageHandler is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      disableCreateObjectURL: source.disableCreateObjectURL,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      nativeImageDecoderSupport: source.nativeImageDecoderSupport,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n    })\n    .then(function(workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique document loading task id -- used in MessageHandlers.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Shows if loading task is destroyed.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if wrong or no password was provided.\n       * The callback receives two parameters: function that needs to be called\n       * with new password and reason (see {PasswordResponses}).\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties: {number} loaded and {number} total.\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback to when unsupported feature is used. The callback receives\n       * an {UNSUPPORTED_FEATURES} argument.\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * Aborts all network requests and destroys worker.\n     * @returns {Promise} A promise that is resolved after destruction activity\n     *                    is completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n\n    /**\n     * Registers callbacks to indicate the document loading completion.\n     * @ignore\n     */\n    then(onFulfilled, onRejected) {\n      throw new Error(\n        \"Removed API method: \" +\n          \"PDFDocumentLoadingTask.then, use the `promise` getter instead.\"\n      );\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n * @param {number} length\n * @param {Uint8Array} initialData\n * @param {boolean} progressiveDone\n */\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a PDFDocument in the worker thread. Also, contains commonly used\n * properties that can be read synchronously.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {number} Total number of pages the PDF contains.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise} A promise that is resolved with a {@link PDFPageProxy}\n   *   object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise} A promise that is resolved with the page index (starting\n   *   from zero) that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named destinations to reference numbers.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise} A promise that is resolved with all information\n   *   of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} containing\n   *   the page labels that correspond to the page indexes, or `null` when\n   *   no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the viewer preferences.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the currently supported actions, or `null` when no OpenAction exists.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  getOpenActionDestination() {\n    deprecated(\"getOpenActionDestination, use getOpenAction instead.\");\n    return this.getOpenAction().then(function(openAction) {\n      return openAction && openAction.dest ? openAction.dest : null;\n    });\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} of all the\n   *   JavaScript strings in the name tree, or `null` if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that is a\n   * tree outline (if it has one) of the PDF. The tree is in the format of:\n   * [\n   *   {\n   *     title: string,\n   *     bold: boolean,\n   *     italic: boolean,\n   *     color: rgb Uint8ClampedArray,\n   *     count: integer or undefined,\n   *     dest: dest obj,\n   *     url: string,\n   *     items: array of more items like this\n   *   },\n   *   ...\n   * ]\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that contains\n   *   the permission flags for the PDF document, or `null` when\n   *   no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} that has\n   *   `info` and `metadata` properties. `info` is an {Object} filled with\n   *   anything available in the information dictionary and similarly\n   *   `metadata` is a {Metadata} object with information from the metadata\n   *   section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {TypedArray} that has\n   *   the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved when the document's data\n   *   is loaded. It is resolved with an {Object} that contains the `length`\n   *   property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise} A promise this is resolved with current statistics about\n   *   document structures (see {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document, on both the main- and\n   * worker-threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   *       currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {Object} A subset of the current {DocumentInitParameters}, which are\n   *   either needed in the viewer and/or whose default values may be affected\n   *   by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {array} items - array of {@link TextItem}\n * @property {Object} styles - {@link TextStyle} objects, indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - text content.\n * @property {string} dir - text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {array} transform - transformation matrix.\n * @property {number} width - width in device space.\n * @property {number} height - height in device space.\n * @property {string} fontName - font name used by pdf.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - font ascent.\n * @property {number} descent - font descent.\n * @property {boolean} vertical - text is in vertical mode.\n * @property {string} fontFamily - possible font family\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *                    can be either 'display' (viewable annotations) or 'print'\n *                    (printable annotations).\n *                    If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by\n *                          calling the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'\n *                    (default value is 'display').\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering\n *                     for some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not\n *                     interactive form elements are rendered in the display\n *                     layer. If so, we do not render them on canvas as well.\n * @property {Array}  [transform] - Additional transform, applied\n *                    just before viewport transform.\n * @property {Object} [imageLayer] - An object that has beginLayout,\n *                    endLayout and appendImage functions.\n * @property {Object} [canvasFactory] - The factory that will be used\n *                    when creating canvases. The default value is\n *                    {DOMCanvasFactory}.\n * @property {Object} [background] - Background to use for the canvas.\n *                    Can use any valid canvas.fillStyle: A DOMString parsed as\n *                    CSS <color> value, a CanvasGradient object (a linear or\n *                    radial gradient) or a CanvasPattern object (a repetitive\n *                    image). The default value is 'rgb(255,255,255)'.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array} fnArray - Array containing the operator functions.\n * @property {Array} argsArray - Array containing the arguments of the\n *                               functions.\n */\n\n/**\n * Proxy to a PDFPage in the worker thread.\n * @alias PDFPageProxy\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this.intentStates = Object.create(null);\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array} An array of the visible portion of the PDF page in user\n   *   space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"GENERIC\") &&\n      (arguments.length > 1 || typeof arguments[0] === \"number\")\n    ) {\n      throw new Error(\n        \"PDFPageProxy.getViewport is called with obsolete arguments.\"\n      );\n    }\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise} A promise that is resolved with an {Array} of the\n   *   annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains the promise, which\n   *                       is resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance = canvasFactory || new DOMCanvasFactory();\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    intentState.displayReadyCapability.promise\n      .then(transparency => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics(transparency);\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise} A promise resolved with an {@link PDFOperatorList}\n   *   object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = {};\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} ReadableStream to read textContent chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise} That is resolved a {@link TextContent}\n   *   object that represent the page text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function(resolve, reject) {\n      function pump() {\n        reader.read().then(function({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    Object.keys(this.intentStates).forEach(intent => {\n      const intentState = this.intentStates[intent];\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        return;\n      }\n      intentState.renderTasks.forEach(function(renderTask) {\n        const renderCompleted = renderTask.capability.promise.catch(\n          function() {}\n        ); // ignoring failures\n        waitOn.push(renderCompleted);\n        renderTask.cancel();\n      });\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicating if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (\n      !this.pendingCleanup ||\n      Object.keys(this.intentStates).some(intent => {\n        const intentState = this.intentStates[intent];\n        return (\n          intentState.renderTasks.length !== 0 ||\n          !intentState.operatorList.lastChunk\n        );\n      })\n    ) {\n      return false;\n    }\n\n    Object.keys(this.intentStates).forEach(intent => {\n      delete this.intentStates[intent];\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this.intentStates[intent];\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this.intentStates[args.intent];\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(\n      new AbortException(reason && reason.message)\n    );\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    Object.keys(this.intentStates).some(intent => {\n      if (this.intentStates[intent] === intentState) {\n        delete this.intentStates[intent];\n        return true;\n      }\n      return false;\n    });\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        const transferable = transfers && transfers.includes(buffer);\n        if (transferable) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort`.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n */\n\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath =\n        document.currentScript && document.currentScript.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler =\n        globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function() {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        if (typeof SystemJS !== \"object\") {\n          throw new Error(\"SystemJS must be used to load fake worker.\");\n        }\n        const worker = await SystemJS.import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction, which controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function() {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *                                       parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function(page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(this._networkStream);\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(isArrayBuffer(value));\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(this._networkStream);\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(isArrayBuffer(value));\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function(ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")\n      ) {\n        assert(reason instanceof Error, \"DocException: expected an Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (\n            params.pdfBug &&\n            globalThis.FontInspector &&\n            globalThis.FontInspector.enabled\n          ) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader.bind(font).then(\n            () => {\n              this.commonObjs.resolve(id, font);\n            },\n            reason => {\n              messageHandler\n                .sendWithPromise(\"FontFallback\", {\n                  id,\n                })\n                .finally(() => {\n                  this.commonObjs.resolve(id, font);\n                });\n            }\n          );\n          break;\n        case \"FontPath\":\n        case \"FontType3Res\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"JpegStream\":\n          return new Promise((resolve, reject) => {\n            const img = new Image();\n            img.onload = function() {\n              resolve(img);\n            };\n            img.onerror = function() {\n              // Note that when the browser image loading/decoding fails,\n              // we'll fallback to the built-in PDF.js JPEG decoder; see\n              // `PartialEvaluator.buildPaintImageXObject` in the\n              // `src/core/evaluator.js` file.\n              reject(new Error(\"Error during JPEG image loading\"));\n\n              // Always remember to release the image data if errors occurred.\n              releaseImageResources(img);\n            };\n            img.src = imageData;\n          }).then(img => {\n            pageProxy.objs.resolve(id, img);\n          });\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (\n            imageData &&\n            \"data\" in imageData &&\n            imageData.data.length > MAX_IMAGE_SIZE_TO_STORE\n          ) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"JpegDecode\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed\"));\n      }\n\n      if (typeof document === \"undefined\") {\n        // Make sure that this code is not executing in node.js, as\n        // it's using DOM image, and there is no library to support that.\n        return Promise.reject(new Error('\"document\" is not defined.'));\n      }\n\n      const [imageUrl, components] = data;\n      if (components !== 3 && components !== 1) {\n        return Promise.reject(\n          new Error(\"Only 3 components or 1 component can be returned\")\n        );\n      }\n\n      return new Promise(function(resolve, reject) {\n        const img = new Image();\n        img.onload = function() {\n          const { width, height } = img;\n          const size = width * height;\n          const rgbaLength = size * 4;\n          const buf = new Uint8ClampedArray(size * components);\n          let tmpCanvas = document.createElement(\"canvas\");\n          tmpCanvas.width = width;\n          tmpCanvas.height = height;\n          let tmpCtx = tmpCanvas.getContext(\"2d\");\n          tmpCtx.drawImage(img, 0, 0);\n          const data = tmpCtx.getImageData(0, 0, width, height).data;\n\n          if (components === 3) {\n            for (let i = 0, j = 0; i < rgbaLength; i += 4, j += 3) {\n              buf[j] = data[i];\n              buf[j + 1] = data[i + 1];\n              buf[j + 2] = data[i + 2];\n            }\n          } else if (components === 1) {\n            for (let i = 0, j = 0; i < rgbaLength; i += 4, j++) {\n              buf[j] = data[i];\n            }\n          }\n          resolve({ data: buf, width, height });\n\n          // Immediately release the image data once decoding has finished.\n          releaseImageResources(img);\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          tmpCanvas.width = 0;\n          tmpCanvas.height = 0;\n          tmpCanvas = null;\n          tmpCtx = null;\n        };\n        img.onerror = function() {\n          reject(new Error(\"JpegDecode failed to load image\"));\n\n          // Always remember to release the image data if errors occurred.\n          releaseImageResources(img);\n        };\n        img.src = imageUrl;\n      });\n    });\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function(builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function(reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function(reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader\n            ? this._fullReader.filename\n            : null,\n        };\n      });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableCreateObjectURL: params.disableCreateObjectURL,\n      disableFontFace: params.disableFontFace,\n      nativeImageDecoderSupport: params.nativeImageDecoderSupport,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    for (const objId in this._objs) {\n      const { data } = this._objs[objId];\n\n      if (typeof Image !== \"undefined\" && data instanceof Image) {\n        // Always release the image data when clearing out the cached objects.\n        releaseImageResources(data);\n      }\n    }\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n * @alias RenderTask\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n\n  /**\n   * Registers callbacks to indicate the rendering task completion.\n   * @ignore\n   */\n  then(onFulfilled, onRejected) {\n    throw new Error(\n      \"Removed API method: \" +\n        \"RenderTask.then, use the `promise` getter instead.\"\n    );\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    initializeGraphics(transparency = false) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (\n        this._pdfBug &&\n        globalThis.StepperManager &&\n        globalThis.StepperManager.enabled\n      ) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve()\n          .then(this._nextBound)\n          .catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  setPDFNetworkStreamFactory,\n  version,\n  build,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory {\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url)\n        .then(async response => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          let cMapData;\n          if (this.isCompressed) {\n            cMapData = new Uint8Array(await response.arrayBuffer());\n          } else {\n            cMapData = stringToBytes(await response.text());\n          }\n          return { cMapData, compressionType };\n        })\n        .catch(reason => {\n          throw new Error(\n            `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n              `CMap at: ${url}`\n          );\n        });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    }).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n          `CMap at: ${url}`\n      );\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array} viewBox - The xMin, yMin, xMax and yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      // case 0:\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n// Gets the file name from a given URL.\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = resolve;\n    script.onerror = function() {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nfunction releaseImageResources(img) {\n  assert(img instanceof Image, \"Invalid `img` parameter.\");\n\n  const url = img.src;\n  if (\n    typeof url === \"string\" &&\n    url.startsWith(\"blob:\") &&\n    URL.revokeObjectURL\n  ) {\n    URL.revokeObjectURL(url);\n  }\n  img.removeAttribute(\"src\");\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  PageViewport,\n  RenderingCancelledException,\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  DEFAULT_LINK_REL,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  StatTimer,\n  isFetchSupported,\n  isValidFetchUrl,\n  loadScript,\n  deprecated,\n  releaseImageResources,\n  PDFDateString,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({ docId, onUnsupportedFeature }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(function(nativeFontFace) {\n      document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({ featureId: UNSUPPORTED_FEATURES.font });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported = typeof document !== \"undefined\" && !!document.fonts;\n    return shadow(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(docId) {\n      super(docId);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m && m[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function() {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, function() {\n        document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({ featureId: UNSUPPORTED_FEATURES.font });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function(c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function(c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"../shared/is_node.js\");\n\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const isIE = /Trident/.test(userAgent);\n  const isIOSChrome = /CriOS/.test(userAgent);\n\n  // Checks if possible to use URL.createObjectURL()\n  // Support: IE, Chrome on iOS\n  (function checkOnBlobSupport() {\n    // Sometimes IE and Chrome on iOS losing the data created with\n    // createObjectURL(), see issues #3977 and #8081.\n    if (isIE || isIOSChrome) {\n      compatibilityParams.disableCreateObjectURL = true;\n    }\n  })();\n\n  // Support: Node.js\n  (function checkFontFaceAndImage() {\n    // Node.js is missing native support for `@font-face` and `Image`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n      compatibilityParams.nativeImageDecoderSupport = \"none\";\n    }\n  })();\n}\n\nexports.apiCompatibilityParams = Object.freeze(compatibilityParams);\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://electronjs.org/docs/api/process#processversionselectron\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions[\"nw\"] &&\n  !process.versions[\"electron\"];\n\nexport { isNodeJS };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nvar MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\n\n// Heuristic value used when enforcing minimum line widths.\nvar MIN_WIDTH_FACTOR = 0.65;\n\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\n\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        var m = this._transformMatrix;\n        var a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = (function CachedCanvasesClosure() {\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      var canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (var id in this.cache) {\n        var canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n\n  var width = imgData.width,\n    height = imgData.height;\n  var i,\n    j,\n    j0,\n    width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  var POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  var lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height),\n    pos = 0,\n    ii;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128,\n      elem = data0[i];\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  var count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    var coords = [p % width1, i];\n\n    var type = points[p],\n      p0 = p,\n      pp;\n    do {\n      var step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function(c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (var i = 0, ii = outlines.length; i < ii; i++) {\n      var o = outlines[i];\n      c.moveTo(o[0], o[1]);\n      for (var j = 2, jj = o.length; j < jj; j += 2) {\n        c.lineTo(o[j], o[j + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = (function CanvasExtraStateClosure() {\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\nvar CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  var EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  var EXECUTION_STEPS = 10;\n\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0,\n      destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      var srcLength = src.byteLength;\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = (width + 7) >> 3;\n      var white = 0xffffffff;\n      var black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          var k = 0;\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      var destPos = 3; // alpha component offset\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    for (var i = 3; i < length; i += 4) {\n      var y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n\n    var composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    var backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        var transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      if (this.current.activeSMask !== null) {\n        this.endSMaskGroup();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = \"smaskGroupAt\" + this.groupLevel;\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      var groupCtx = this.current.resumeSMaskCtx;\n      var currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x,\n        y = current.y;\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n            if (width === 0) {\n              width = this.getSinglePixelWidth();\n            }\n            if (height === 0) {\n              height = this.getSinglePixelWidth();\n            }\n            var xw = x + width;\n            var yh = y + height;\n            this.ctx.moveTo(x, y);\n            this.ctx.lineTo(xw, y);\n            this.ctx.lineTo(xw, yh);\n            this.ctx.lineTo(x, yh);\n            this.ctx.lineTo(x, y);\n            this.ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (\n        strokeColor &&\n        strokeColor.hasOwnProperty(\"type\") &&\n        strokeColor.type === \"Pattern\"\n      ) {\n        // for patterns, we transform to pattern space, calculate\n        // the pattern, call stroke, and restore to user space\n        ctx.save();\n        // The current transform will be replaced while building the pattern,\n        // but the line width needs to be adjusted by the current transform, so\n        // we must scale it. To properly fix this we should be using a pattern\n        // transform instead (see #10955).\n        const transform = ctx.mozCurrentTransform;\n        const scale = Util.singularValueDecompose2dScale(transform)[0];\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth * scale\n        );\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth\n        );\n        ctx.stroke();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      var name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      var italic = fontObj.italic ? \"italic\" : \"normal\";\n      var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && font.data;\n\n      var addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var spacingDir = vertical ? 1 : -1;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      var simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      var x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          var measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            var characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (glyph.isInFont || font.missingFile) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n            if (accent) {\n              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform\n              );\n            }\n          }\n        }\n\n        var charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var spacingDir = font.vertical ? 1 : -1;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      var i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n\n        var transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n      if (IR[0] === \"TilingPattern\") {\n        var color = IR[1];\n        var baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        var canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      var ctx = this.ctx;\n\n      this.save();\n      var pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      var inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = Util.applyTransform([0, 0], inv);\n        var br = Util.applyTransform([0, height], inv);\n        var ul = Util.applyTransform([width, 0], inv);\n        var ur = Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      this.save();\n      var currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      var bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      var canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      var groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintJpegXObject: function CanvasGraphics_paintJpegXObject(objId, w, h) {\n      const domImage = this.processingType3\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!domImage) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.save();\n\n      var ctx = this.ctx;\n      // scale the image to the unit square\n      ctx.scale(1 / w, -1 / h);\n\n      ctx.drawImage(\n        domImage,\n        0,\n        0,\n        domImage.width,\n        domImage.height,\n        0,\n        -h,\n        w,\n        h\n      );\n      if (this.imageLayer) {\n        var currentTransform = ctx.mozCurrentTransformInverse;\n        var position = this.getCanvasPosition(0, 0);\n        this.imageLayer.appendImage({\n          objId,\n          left: position[0],\n          top: position[1],\n          width: w / currentTransform[0],\n          height: h / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      var ctx = this.ctx;\n      var width = img.width,\n        height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      var ctx = this.ctx;\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      var ctx = this.ctx;\n\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width,\n          height = image.height;\n\n        var maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      const imgData = this.processingType3\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      const imgData = this.processingType3\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0],\n        b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2],\n        d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      var imgToPaint, tmpCanvas;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width,\n        paintHeight = height;\n      var tmpCanvasId = \"prescale1\";\n      // Vertial or horizontal scaling shall not be more than 2 to not loose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        var newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n\n      var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    paintXObject: function CanvasGraphics_paintXObject() {\n      warn(\"Unsupported 'paintXObject' command.\");\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      // TODO Marked content.\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      // TODO Marked content.\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      // TODO Marked content.\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        // max of the current horizontal and vertical scale\n        this._cachedGetSinglePixelWidth = Math.sqrt(\n          Math.max(\n            inverse[0] * inverse[0] + inverse[1] * inverse[1],\n            inverse[2] * inverse[2] + inverse[3] * inverse[3]\n          )\n        );\n      }\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      var transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n  };\n\n  for (var op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nvar ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var bbox = raw[2];\n    var colorStops = raw[3];\n    var p0 = raw[4];\n    var p1 = raw[5];\n    var r0 = raw[6];\n    var r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        var grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nvar createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    var coords = context.coords,\n      colors = context.colors;\n    var bytes = data.data,\n      rowSize = data.width * 4;\n    var tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    var c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    var c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    var c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    var minY = Math.round(y1),\n      maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n      for (var x = x1_; x <= x2_; x++) {\n        let k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    var EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    var BORDER_SIZE = 2;\n\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    var width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n\n    var context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    var paddedWidth = width + BORDER_SIZE * 2;\n    var paddedHeight = height + BORDER_SIZE * 2;\n\n    var canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      var tmpCtx = tmpCanvas.context;\n\n      var data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        var bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        var scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            var matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        var temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\nvar TilingPattern = (function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      var x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      var curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      var combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      var dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      var dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      var tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      var tmpCtx = tmpCanvas.context;\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      var size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          var cssColor = Util.makeCssRgb(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst GlobalWorkerOptions = Object.create(null);\n\n/**\n * Defines global port for worker process. Overrides the `workerSrc` option.\n * @var {Object}\n */\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\n/**\n * A string containing the path and filename of the worker file.\n *\n * NOTE: The `workerSrc` option should always be set, in order to prevent any\n *       issues when using the PDF.js library.\n * @var {string}\n */\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error, prefer-const: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const sourceName = this.sourceName;\n        const targetName = data.sourceName;\n        new Promise(function(resolve) {\n          resolve(action(data.data));\n        }).then(\n          function(result) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function(reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function(resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function() {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function(reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function(resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function() {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function(reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function(resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function() {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function(reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function(capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"./xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function(all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function(code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function(str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    const obj = Object.create(null);\n    for (const [key, value] of this._metadataMap) {\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCharCode(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCharCode(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function(child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor() {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleXMLParser };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(pdfDataRangeTransport);\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function(rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(found);\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(!this._fullRequestReader);\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function(rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function(requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nvar WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  var smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  var smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    var cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  var figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  var figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    var cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    var count = 0;\n    var i, ii, rows;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          rows = (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords,\n      colorsMap = context.colors;\n    var pIndex = 0,\n      cIndex = 0;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          var cols = figure.verticesPerRow;\n          rows = (ps.length / cols) | 0;\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {TextContent} [textContent] - Text content to render (the object\n *   is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {PageViewport} viewport - The target viewport to properly\n *   layout the text runs.\n * @property {Array} [textDivs] - HTML elements that are correspond to the\n *   text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array} [textContentItemsStr] - Strings that correspond to the\n *   `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\nvar renderTextLayer = (function renderTextLayerClosure() {\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  var NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    var textDiv = document.createElement(\"span\");\n    var textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    var tx = Util.transform(task._viewport.transform, geom.transform);\n    var angle = Math.atan2(tx[1], tx[0]);\n    var style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    var fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    if (geom.str.length > 1) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      var angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      var divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      var divHeight = fontHeight;\n\n      var m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    var textDivs = task._textDivs;\n    var capability = task._capability;\n    var textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (var i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function expand(task) {\n    var bounds = task._bounds;\n    var viewport = task._viewport;\n\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (var i = 0; i < expanded.length; i++) {\n      var div = bounds[i].div;\n      var divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      var e = expanded[i],\n        b = bounds[i];\n      var m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      var ts = new Float64Array(64);\n      points.forEach(function(p, i) {\n        var t = Util.applyTransform(p, m);\n        ts[i + 0] = c && (e.left - t[0]) / c;\n        ts[i + 4] = s && (e.top - t[1]) / s;\n        ts[i + 8] = c && (e.right - t[0]) / c;\n        ts[i + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[i + 16] = s && (e.left - t[0]) / -s;\n        ts[i + 20] = c && (e.top - t[1]) / c;\n        ts[i + 24] = s && (e.right - t[0]) / -s;\n        ts[i + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[i + 32] = c && (e.left - t[0]) / -c;\n        ts[i + 36] = s && (e.top - t[1]) / -s;\n        ts[i + 40] = c && (e.right - t[0]) / -c;\n        ts[i + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[i + 48] = s && (e.left - t[0]) / s;\n        ts[i + 52] = c && (e.top - t[1]) / -c;\n        ts[i + 56] = s && (e.right - t[0]) / s;\n        ts[i + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      var findPositiveMin = function(ts, offset, count) {\n        var result = 0;\n        for (var i = 0; i < count; i++) {\n          var t = ts[offset++];\n          if (t > 0) {\n            result = result ? Math.min(t, result) : t;\n          }\n        }\n        return result;\n      };\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    var bounds = boxes.map(function(box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    var expanded = new Array(boxes.length);\n    bounds.forEach(function(b) {\n      var i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function(box, i) {\n      var e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function(b) {\n      var i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function(a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    var fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    var horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function(boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      var i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      var j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      var horizonPart, affectedBoundary;\n      var q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      var changedHorizon = [],\n        lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        var useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        var used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function(horizonPart) {\n      var affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(\n      globalThis.FontInspector && globalThis.FontInspector.enabled\n    );\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  /**\n   * Starts rendering of the text layer.\n   *\n   * @param {TextLayerRenderParameters} renderParameters\n   * @returns {TextLayerRenderTask}\n   */\n  function renderTextLayer(renderParameters) {\n    var task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeCssRgb(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLSectionElement} container\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(container, trigger, data) {\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the link annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LinkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"linkAnnotation\";\n\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else {\n      this._bindLink(link, data.dest);\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n      return false;\n    };\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  /**\n   * Render the widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof WidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Show only the container for unsupported field types.\n    return this.container;\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = this.data.fieldValue;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", this.data.fieldValue);\n      }\n\n      element.disabled = this.data.readOnly;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n\n      let font = null;\n      if (\n        this.data.fontRefName &&\n        this.page.commonObjs.has(this.data.fontRefName)\n      ) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @param {Object} font\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element, font) {\n    // TODO: This duplicates some of the logic in CanvasGraphics.setFont().\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n\n    // Use a reasonable default font if the font doesn't specify a fallback.\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the checkbox widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof CheckboxWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"checkbox\";\n    if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the radio button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof RadioButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"radio\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue === this.data.buttonValue) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  /**\n   * Render the push button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof PushButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the choice widget annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof ChoiceWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.displayValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the popup annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PopupAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const parentLeft = parseFloat(parentElement.style.left);\n    const parentWidth = parseFloat(parentElement.style.width);\n    this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${\n      parentElement.style.top\n    }`;\n    this.container.style.left = `${parentLeft + parentWidth}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  /**\n   * Render the popup's HTML element.\n   *\n   * @public\n   * @memberof PopupElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the free text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof FreeTextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the line annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the square annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquareAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the circle annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CircleAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the polyline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PolylineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the caret annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CaretAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the ink annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof InkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the highlight annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof HighlightAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the underline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof UnderlineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the squiggly annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquigglyAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the strikeout annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StrikeOutAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the stamp annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StampAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, /* isRenderable = */ true);\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: stringToPDFString(filename),\n        filename,\n        content,\n      });\n    }\n  }\n\n  /**\n   * Render the file attachment annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof FileAttachmentAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms || false,\n        svgFactory: new DOMSVGFactory(),\n      });\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\n          \",\"\n        )})`;\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n/* eslint no-var: error */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nlet SVGGraphics = function() {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function() {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintJpegXObject:\n            this.paintJpegXObject(args[0], args[1], args[2]);\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += -glyph * fontSize * 0.001;\n          continue;\n        }\n\n        const width = glyph.width;\n        const character = glyph.fontChar;\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const charWidth = width * widthAdvanceScale + spacing * fontDirection;\n\n        if (!glyph.isInFont && !font.missingFile) {\n          x += charWidth;\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n          continue;\n        }\n        current.xcoords.push(current.x + x);\n        current.tspan.textContent += character;\n        x += charWidth;\n      }\n      if (vertical) {\n        current.y -= x * textHScale;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        fontObj.data &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement &&\n        current.txtElement.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeCssRgb(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function(prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function(value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintJpegXObject(objId, w, h) {\n      const imgObj = this.objs.get(objId);\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgObj.src);\n      imgEl.setAttributeNS(null, \"width\", pf(w));\n      imgEl.setAttributeNS(null, \"height\", pf(h));\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-h));\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / w)} ${pf(-1 / h)})`\n      );\n\n      this._ensureTransformGroup().appendChild(imgEl);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(!this._fullRequestReader);\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function(reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(url, headers) {\n  return {\n    protocol: url.protocol,\n    auth: url.auth,\n    host: url.hostname,\n    port: url.port,\n    path: url.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength,\n      } = validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders[\"Range\"] = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function(ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDisposition) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDisposition)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function(_, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function(_, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function(evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  hasPendingRequests() {\n    for (const xhrId in this.pendingRequests) {\n      return true;\n    }\n    return false;\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortAllRequests() {\n    for (const xhrId in this.pendingRequests) {\n      this.abortRequest(xhrId | 0);\n    }\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(!this._fullRequestReader);\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function(reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function(requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(!this._fullRequestReader);\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function(reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    ).then(response => {\n      if (!validateResponseStatus(response.status)) {\n        throw createResponseStatusError(response.status, url);\n      }\n      this._readCapability.resolve();\n      this._reader = response.body.getReader();\n    });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}